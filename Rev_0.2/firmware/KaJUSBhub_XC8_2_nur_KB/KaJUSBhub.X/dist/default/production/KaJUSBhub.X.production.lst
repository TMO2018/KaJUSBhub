

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Apr  4 19:33:43 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	dabs	1,0x613,7,_joystick_input_j1
    54                           	dabs	1,0x400,64,_BDT
    55                           	dabs	1,0x500,8,_SetupPkt
    56                           	dabs	1,0x520,8,_CtrlTrfData
    57                           	dabs	1,0x530,64,_hid_report_out_j1
    58                           	dabs	1,0x5F0,64,_hid_report_in_j2
    59                           	dabs	1,0x5B0,64,_hid_report_out_j2
    60                           	dabs	1,0x570,64,_hid_report_in_j1
    61                           	dabs	1,0x656,7,_joystick_input_j2
    62                           	dabs	1,0x67A,1,_hid_report_out_k1
    63                           	dabs	1,0x67B,8,_hid_report_in_k1
    64  0000                     
    65                           ; Version 2.05
    66                           ; Generated 20/12/2018 GMT
    67                           ; 
    68                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC18F4550 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99  0000                     
   100                           	psect	mediumconst
   101  007DC2                     __pmediumconst:
   102                           	opt callstack 0
   103  007DC2  00                 	db	0
   104  007DC3                     _keymap:
   105                           	opt callstack 0
   106  007DC3  1E                 	db	30
   107  007DC4  35                 	db	53
   108  007DC5  E0                 	db	224
   109  007DC6  29                 	db	41
   110  007DC7  2C                 	db	44
   111  007DC8  E2                 	db	226
   112  007DC9  14                 	db	20
   113  007DCA  1F                 	db	31
   114  007DCB  20                 	db	32
   115  007DCC  1A                 	db	26
   116  007DCD  04                 	db	4
   117  007DCE  E1                 	db	225
   118  007DCF  1D                 	db	29
   119  007DD0  16                 	db	22
   120  007DD1  08                 	db	8
   121  007DD2  21                 	db	33
   122  007DD3  22                 	db	34
   123  007DD4  15                 	db	21
   124  007DD5  07                 	db	7
   125  007DD6  1B                 	db	27
   126  007DD7  06                 	db	6
   127  007DD8  09                 	db	9
   128  007DD9  17                 	db	23
   129  007DDA  23                 	db	35
   130  007DDB  24                 	db	36
   131  007DDC  1C                 	db	28
   132  007DDD  0A                 	db	10
   133  007DDE  19                 	db	25
   134  007DDF  05                 	db	5
   135  007DE0  0B                 	db	11
   136  007DE1  18                 	db	24
   137  007DE2  25                 	db	37
   138  007DE3  26                 	db	38
   139  007DE4  0C                 	db	12
   140  007DE5  0D                 	db	13
   141  007DE6  11                 	db	17
   142  007DE7  10                 	db	16
   143  007DE8  0E                 	db	14
   144  007DE9  12                 	db	18
   145  007DEA  27                 	db	39
   146  007DEB  43                 	db	67
   147  007DEC  13                 	db	19
   148  007DED  0F                 	db	15
   149  007DEE  36                 	db	54
   150  007DEF  37                 	db	55
   151  007DF0  33                 	db	51
   152  007DF1  2F                 	db	47
   153  007DF2  2D                 	db	45
   154  007DF3  42                 	db	66
   155  007DF4  30                 	db	48
   156  007DF5  34                 	db	52
   157  007DF6  38                 	db	56
   158  007DF7  E5                 	db	229
   159  007DF8  2E                 	db	46
   160  007DF9  31                 	db	49
   161  007DFA  4A                 	db	74
   162  007DFB  2A                 	db	42
   163  007DFC  28                 	db	40
   164  007DFD  4F                 	db	79
   165  007DFE  51                 	db	81
   166  007DFF  3A                 	db	58
   167  007E00  3C                 	db	60
   168  007E01  3E                 	db	62
   169  007E02  40                 	db	64
   170  007E03  44                 	db	68
   171  007E04                     __end_of_keymap:
   172                           	opt callstack 0
   173  007E04                     _USB_SD_Ptr:
   174                           	opt callstack 0
   175  007E04  FA                 	db	low _sd000
   176  007E05  7F                 	db	high _sd000
   177  007E06  D2                 	db	low _sd001
   178  007E07  7F                 	db	high _sd001
   179  007E08  96                 	db	low _sd002
   180  007E09  7F                 	db	high _sd002
   181  007E0A  72                 	db	low _sd003
   182  007E0B  7F                 	db	high _sd003
   183  007E0C  4E                 	db	low _sd004
   184  007E0D  7F                 	db	high _sd004
   185  007E0E  B8                 	db	low _sd005
   186  007E0F  7F                 	db	high _sd005
   187  007E10                     __end_of_USB_SD_Ptr:
   188                           	opt callstack 0
   189  007E10                     _USB_CD_Ptr:
   190                           	opt callstack 0
   191  007E10  12                 	db	low _configDescriptor1
   192  007E11  7E                 	db	high _configDescriptor1
   193  007E12                     __end_of_USB_CD_Ptr:
   194                           	opt callstack 0
   195  007E12                     _configDescriptor1:
   196                           	opt callstack 0
   197  007E12  09                 	db	9
   198  007E13  02                 	db	2
   199  007E14  69                 	db	105
   200  007E15  00                 	db	0
   201  007E16  03                 	db	3
   202  007E17  01                 	db	1
   203  007E18  00                 	db	0
   204  007E19  C0                 	db	192
   205  007E1A  32                 	db	50
   206  007E1B  09                 	db	9
   207  007E1C  04                 	db	4
   208  007E1D  00                 	db	0
   209  007E1E  00                 	db	0
   210  007E1F  02                 	db	2
   211  007E20  03                 	db	3
   212  007E21  00                 	db	0
   213  007E22  00                 	db	0
   214  007E23  03                 	db	3
   215  007E24  09                 	db	9
   216  007E25  21                 	db	33
   217  007E26  11                 	db	17
   218  007E27  01                 	db	1
   219  007E28  00                 	db	0
   220  007E29  01                 	db	1
   221  007E2A  22                 	db	34
   222  007E2B  4A                 	db	74
   223  007E2C  00                 	db	0
   224  007E2D  07                 	db	7
   225  007E2E  05                 	db	5
   226  007E2F  81                 	db	129
   227  007E30  03                 	db	3
   228  007E31  40                 	db	64
   229  007E32  00                 	db	0
   230  007E33  01                 	db	1
   231  007E34  07                 	db	7
   232  007E35  05                 	db	5
   233  007E36  01                 	db	1
   234  007E37  03                 	db	3
   235  007E38  40                 	db	64
   236  007E39  00                 	db	0
   237  007E3A  01                 	db	1
   238  007E3B  09                 	db	9
   239  007E3C  04                 	db	4
   240  007E3D  01                 	db	1
   241  007E3E  00                 	db	0
   242  007E3F  02                 	db	2
   243  007E40  03                 	db	3
   244  007E41  00                 	db	0
   245  007E42  00                 	db	0
   246  007E43  04                 	db	4
   247  007E44  09                 	db	9
   248  007E45  21                 	db	33
   249  007E46  11                 	db	17
   250  007E47  01                 	db	1
   251  007E48  00                 	db	0
   252  007E49  01                 	db	1
   253  007E4A  22                 	db	34
   254  007E4B  4A                 	db	74
   255  007E4C  00                 	db	0
   256  007E4D  07                 	db	7
   257  007E4E  05                 	db	5
   258  007E4F  82                 	db	130
   259  007E50  03                 	db	3
   260  007E51  40                 	db	64
   261  007E52  00                 	db	0
   262  007E53  01                 	db	1
   263  007E54  07                 	db	7
   264  007E55  05                 	db	5
   265  007E56  02                 	db	2
   266  007E57  03                 	db	3
   267  007E58  40                 	db	64
   268  007E59  00                 	db	0
   269  007E5A  01                 	db	1
   270  007E5B  09                 	db	9
   271  007E5C  04                 	db	4
   272  007E5D  02                 	db	2
   273  007E5E  00                 	db	0
   274  007E5F  02                 	db	2
   275  007E60  03                 	db	3
   276  007E61  01                 	db	1
   277  007E62  01                 	db	1
   278  007E63  05                 	db	5
   279  007E64  09                 	db	9
   280  007E65  21                 	db	33
   281  007E66  11                 	db	17
   282  007E67  01                 	db	1
   283  007E68  00                 	db	0
   284  007E69  01                 	db	1
   285  007E6A  22                 	db	34
   286  007E6B  3F                 	db	63
   287  007E6C  00                 	db	0
   288  007E6D  07                 	db	7
   289  007E6E  05                 	db	5
   290  007E6F  83                 	db	131
   291  007E70  03                 	db	3
   292  007E71  08                 	db	8
   293  007E72  00                 	db	0
   294  007E73  01                 	db	1
   295  007E74  07                 	db	7
   296  007E75  05                 	db	5
   297  007E76  03                 	db	3
   298  007E77  03                 	db	3
   299  007E78  08                 	db	8
   300  007E79  00                 	db	0
   301  007E7A  01                 	db	1
   302  007E7B                     __end_of_configDescriptor1:
   303                           	opt callstack 0
   304  007E7B                     _hid_rpt01_j2:
   305                           	opt callstack 0
   306  007E7B  05                 	db	5
   307  007E7C  01                 	db	1
   308  007E7D  09                 	db	9
   309  007E7E  05                 	db	5
   310  007E7F  A1                 	db	161
   311  007E80  01                 	db	1
   312  007E81  15                 	db	21
   313  007E82  00                 	db	0
   314  007E83  25                 	db	37
   315  007E84  01                 	db	1
   316  007E85  35                 	db	53
   317  007E86  00                 	db	0
   318  007E87  45                 	db	69
   319  007E88  01                 	db	1
   320  007E89  75                 	db	117
   321  007E8A  01                 	db	1
   322  007E8B  95                 	db	149
   323  007E8C  0D                 	db	13
   324  007E8D  05                 	db	5
   325  007E8E  09                 	db	9
   326  007E8F  19                 	db	25
   327  007E90  01                 	db	1
   328  007E91  29                 	db	41
   329  007E92  0D                 	db	13
   330  007E93  81                 	db	129
   331  007E94  02                 	db	2
   332  007E95  95                 	db	149
   333  007E96  03                 	db	3
   334  007E97  81                 	db	129
   335  007E98  01                 	db	1
   336  007E99  05                 	db	5
   337  007E9A  01                 	db	1
   338  007E9B  25                 	db	37
   339  007E9C  07                 	db	7
   340  007E9D  46                 	db	70
   341  007E9E  3B                 	db	59
   342  007E9F  01                 	db	1
   343  007EA0  75                 	db	117
   344  007EA1  04                 	db	4
   345  007EA2  95                 	db	149
   346  007EA3  01                 	db	1
   347  007EA4  65                 	db	101
   348  007EA5  14                 	db	20
   349  007EA6  09                 	db	9
   350  007EA7  39                 	db	57
   351  007EA8  81                 	db	129
   352  007EA9  42                 	db	66
   353  007EAA  65                 	db	101
   354  007EAB  00                 	db	0
   355  007EAC  95                 	db	149
   356  007EAD  01                 	db	1
   357  007EAE  81                 	db	129
   358  007EAF  01                 	db	1
   359  007EB0  26                 	db	38
   360  007EB1  FF                 	db	255
   361  007EB2  00                 	db	0
   362  007EB3  46                 	db	70
   363  007EB4  FF                 	db	255
   364  007EB5  00                 	db	0
   365  007EB6  09                 	db	9
   366  007EB7  30                 	db	48
   367  007EB8  09                 	db	9
   368  007EB9  31                 	db	49
   369  007EBA  09                 	db	9
   370  007EBB  32                 	db	50
   371  007EBC  09                 	db	9
   372  007EBD  35                 	db	53
   373  007EBE  75                 	db	117
   374  007EBF  08                 	db	8
   375  007EC0  95                 	db	149
   376  007EC1  04                 	db	4
   377  007EC2  81                 	db	129
   378  007EC3  02                 	db	2
   379  007EC4  C0                 	db	192
   380  007EC5                     __end_of_hid_rpt01_j2:
   381                           	opt callstack 0
   382  007EC5                     _hid_rpt01_j1:
   383                           	opt callstack 0
   384  007EC5  05                 	db	5
   385  007EC6  01                 	db	1
   386  007EC7  09                 	db	9
   387  007EC8  05                 	db	5
   388  007EC9  A1                 	db	161
   389  007ECA  01                 	db	1
   390  007ECB  15                 	db	21
   391  007ECC  00                 	db	0
   392  007ECD  25                 	db	37
   393  007ECE  01                 	db	1
   394  007ECF  35                 	db	53
   395  007ED0  00                 	db	0
   396  007ED1  45                 	db	69
   397  007ED2  01                 	db	1
   398  007ED3  75                 	db	117
   399  007ED4  01                 	db	1
   400  007ED5  95                 	db	149
   401  007ED6  0D                 	db	13
   402  007ED7  05                 	db	5
   403  007ED8  09                 	db	9
   404  007ED9  19                 	db	25
   405  007EDA  01                 	db	1
   406  007EDB  29                 	db	41
   407  007EDC  0D                 	db	13
   408  007EDD  81                 	db	129
   409  007EDE  02                 	db	2
   410  007EDF  95                 	db	149
   411  007EE0  03                 	db	3
   412  007EE1  81                 	db	129
   413  007EE2  01                 	db	1
   414  007EE3  05                 	db	5
   415  007EE4  01                 	db	1
   416  007EE5  25                 	db	37
   417  007EE6  07                 	db	7
   418  007EE7  46                 	db	70
   419  007EE8  3B                 	db	59
   420  007EE9  01                 	db	1
   421  007EEA  75                 	db	117
   422  007EEB  04                 	db	4
   423  007EEC  95                 	db	149
   424  007EED  01                 	db	1
   425  007EEE  65                 	db	101
   426  007EEF  14                 	db	20
   427  007EF0  09                 	db	9
   428  007EF1  39                 	db	57
   429  007EF2  81                 	db	129
   430  007EF3  42                 	db	66
   431  007EF4  65                 	db	101
   432  007EF5  00                 	db	0
   433  007EF6  95                 	db	149
   434  007EF7  01                 	db	1
   435  007EF8  81                 	db	129
   436  007EF9  01                 	db	1
   437  007EFA  26                 	db	38
   438  007EFB  FF                 	db	255
   439  007EFC  00                 	db	0
   440  007EFD  46                 	db	70
   441  007EFE  FF                 	db	255
   442  007EFF  00                 	db	0
   443  007F00  09                 	db	9
   444  007F01  30                 	db	48
   445  007F02  09                 	db	9
   446  007F03  31                 	db	49
   447  007F04  09                 	db	9
   448  007F05  32                 	db	50
   449  007F06  09                 	db	9
   450  007F07  35                 	db	53
   451  007F08  75                 	db	117
   452  007F09  08                 	db	8
   453  007F0A  95                 	db	149
   454  007F0B  04                 	db	4
   455  007F0C  81                 	db	129
   456  007F0D  02                 	db	2
   457  007F0E  C0                 	db	192
   458  007F0F                     __end_of_hid_rpt01_j1:
   459                           	opt callstack 0
   460  007F0F                     _hid_rpt01_k1:
   461                           	opt callstack 0
   462  007F0F  05                 	db	5
   463  007F10  01                 	db	1
   464  007F11  09                 	db	9
   465  007F12  06                 	db	6
   466  007F13  A1                 	db	161
   467  007F14  01                 	db	1
   468  007F15  05                 	db	5
   469  007F16  07                 	db	7
   470  007F17  19                 	db	25
   471  007F18  E0                 	db	224
   472  007F19  29                 	db	41
   473  007F1A  E7                 	db	231
   474  007F1B  15                 	db	21
   475  007F1C  00                 	db	0
   476  007F1D  25                 	db	37
   477  007F1E  01                 	db	1
   478  007F1F  75                 	db	117
   479  007F20  01                 	db	1
   480  007F21  95                 	db	149
   481  007F22  08                 	db	8
   482  007F23  81                 	db	129
   483  007F24  02                 	db	2
   484  007F25  95                 	db	149
   485  007F26  01                 	db	1
   486  007F27  75                 	db	117
   487  007F28  08                 	db	8
   488  007F29  81                 	db	129
   489  007F2A  03                 	db	3
   490  007F2B  95                 	db	149
   491  007F2C  05                 	db	5
   492  007F2D  75                 	db	117
   493  007F2E  01                 	db	1
   494  007F2F  05                 	db	5
   495  007F30  08                 	db	8
   496  007F31  19                 	db	25
   497  007F32  01                 	db	1
   498  007F33  29                 	db	41
   499  007F34  05                 	db	5
   500  007F35  91                 	db	145
   501  007F36  02                 	db	2
   502  007F37  95                 	db	149
   503  007F38  01                 	db	1
   504  007F39  75                 	db	117
   505  007F3A  03                 	db	3
   506  007F3B  91                 	db	145
   507  007F3C  03                 	db	3
   508  007F3D  95                 	db	149
   509  007F3E  06                 	db	6
   510  007F3F  75                 	db	117
   511  007F40  08                 	db	8
   512  007F41  15                 	db	21
   513  007F42  00                 	db	0
   514  007F43  25                 	db	37
   515  007F44  65                 	db	101
   516  007F45  05                 	db	5
   517  007F46  07                 	db	7
   518  007F47  19                 	db	25
   519  007F48  00                 	db	0
   520  007F49  29                 	db	41
   521  007F4A  65                 	db	101
   522  007F4B  81                 	db	129
   523  007F4C  00                 	db	0
   524  007F4D  C0                 	db	192
   525  007F4E                     __end_of_hid_rpt01_k1:
   526                           	opt callstack 0
   527  007F4E                     _sd004:
   528                           	opt callstack 0
   529  007F4E  24                 	db	36
   530  007F4F  03                 	db	3
   531  007F50  0043               	dw	67
   532  007F52  0036               	dw	54
   533  007F54  0034               	dw	52
   534  007F56  0020               	dw	32
   535  007F58  004A               	dw	74
   536  007F5A  006F               	dw	111
   537  007F5C  0079               	dw	121
   538  007F5E  0073               	dw	115
   539  007F60  0074               	dw	116
   540  007F62  0069               	dw	105
   541  007F64  0063               	dw	99
   542  007F66  006B               	dw	107
   543  007F68  0020               	dw	32
   544  007F6A  0050               	dw	80
   545  007F6C  006F               	dw	111
   546  007F6E  0072               	dw	114
   547  007F70  0074               	dw	116
   548  007F72                     __end_of_sd004:
   549                           	opt callstack 0
   550  007F72                     _sd003:
   551                           	opt callstack 0
   552  007F72  24                 	db	36
   553  007F73  03                 	db	3
   554  007F74  0043               	dw	67
   555  007F76  0036               	dw	54
   556  007F78  0034               	dw	52
   557  007F7A  0020               	dw	32
   558  007F7C  004A               	dw	74
   559  007F7E  006F               	dw	111
   560  007F80  0079               	dw	121
   561  007F82  0073               	dw	115
   562  007F84  0074               	dw	116
   563  007F86  0069               	dw	105
   564  007F88  0063               	dw	99
   565  007F8A  006B               	dw	107
   566  007F8C  0020               	dw	32
   567  007F8E  0050               	dw	80
   568  007F90  006F               	dw	111
   569  007F92  0072               	dw	114
   570  007F94  0074               	dw	116
   571  007F96                     __end_of_sd003:
   572                           	opt callstack 0
   573  007F96                     _sd002:
   574                           	opt callstack 0
   575  007F96  22                 	db	34
   576  007F97  03                 	db	3
   577  007F98  0043               	dw	67
   578  007F9A  006F               	dw	111
   579  007F9C  006D               	dw	109
   580  007F9E  006D               	dw	109
   581  007FA0  006F               	dw	111
   582  007FA2  0064               	dw	100
   583  007FA4  006F               	dw	111
   584  007FA6  0072               	dw	114
   585  007FA8  0065               	dw	101
   586  007FAA  0020               	dw	32
   587  007FAC  0036               	dw	54
   588  007FAE  0034               	dw	52
   589  007FB0  0020               	dw	32
   590  007FB2  0055               	dw	85
   591  007FB4  0053               	dw	83
   592  007FB6  0042               	dw	66
   593  007FB8                     __end_of_sd002:
   594                           	opt callstack 0
   595  007FB8                     _sd005:
   596                           	opt callstack 0
   597  007FB8  1A                 	db	26
   598  007FB9  03                 	db	3
   599  007FBA  0043               	dw	67
   600  007FBC  0036               	dw	54
   601  007FBE  0034               	dw	52
   602  007FC0  0020               	dw	32
   603  007FC2  004B               	dw	75
   604  007FC4  0065               	dw	101
   605  007FC6  0079               	dw	121
   606  007FC8  0062               	dw	98
   607  007FCA  006F               	dw	111
   608  007FCC  0061               	dw	97
   609  007FCE  0072               	dw	114
   610  007FD0  0064               	dw	100
   611  007FD2                     __end_of_sd005:
   612                           	opt callstack 0
   613  007FD2                     _sd001:
   614                           	opt callstack 0
   615  007FD2  16                 	db	22
   616  007FD3  03                 	db	3
   617  007FD4  0053               	dw	83
   618  007FD6  0069               	dw	105
   619  007FD8  006D               	dw	109
   620  007FDA  006F               	dw	111
   621  007FDC  006E               	dw	110
   622  007FDE  0020               	dw	32
   623  007FE0  0049               	dw	73
   624  007FE2  006E               	dw	110
   625  007FE4  006E               	dw	110
   626  007FE6  0073               	dw	115
   627  007FE8                     __end_of_sd001:
   628                           	opt callstack 0
   629  007FE8                     _device_dsc:
   630                           	opt callstack 0
   631  007FE8  12                 	db	18
   632  007FE9  01                 	db	1
   633  007FEA  0200               	dw	512
   634  007FEC  00                 	db	0
   635  007FED  00                 	db	0
   636  007FEE  00                 	db	0
   637  007FEF  08                 	db	8
   638  007FF0  04D8               	dw	1240
   639  007FF2  0078               	dw	120
   640  007FF4  0001               	dw	1
   641  007FF6  01                 	db	1
   642  007FF7  02                 	db	2
   643  007FF8  00                 	db	0
   644  007FF9  01                 	db	1
   645  007FFA                     __end_of_device_dsc:
   646                           	opt callstack 0
   647  007FFA                     _sd000:
   648                           	opt callstack 0
   649  007FFA  04                 	db	4
   650  007FFB  03                 	db	3
   651  007FFC  0409               	dw	1033
   652  007FFE                     __end_of_sd000:
   653                           	opt callstack 0
   654  0000                     _ADRESH	set	4036
   655  0000                     _ADRESL	set	4035
   656  0000                     _ADCON0	set	4034
   657  0000                     _PORTE	set	3972
   658  0000                     _PORTD	set	3971
   659  0000                     _PORTC	set	3970
   660  0000                     _PORTB	set	3969
   661  0000                     _PORTA	set	3968
   662  0000                     _TRISE	set	3990
   663  0000                     _TRISD	set	3989
   664  0000                     _TRISC	set	3988
   665  0000                     _TRISB	set	3987
   666  0000                     _TRISA	set	3986
   667  0000                     _ADCON2	set	4032
   668  0000                     _ADCON1	set	4033
   669  0000                     _UEP0bits	set	3952
   670  0000                     _USTAT	set	3948
   671  0000                     _UIEbits	set	3945
   672  0000                     _PIR2bits	set	4001
   673  0000                     _UCON	set	3949
   674  0000                     _UIRbits	set	3944
   675  0000                     _UADDR	set	3950
   676  0000                     _UCONbits	set	3949
   677  0000                     _UIE	set	3945
   678  0000                     _UEIE	set	3947
   679  0000                     _UCFG	set	3951
   680  0000                     _UIR	set	3944
   681  0000                     _UEIR	set	3946
   682  0000                     _UEP0	set	3952
   683  0000                     _UEP1	set	3953
   684  0000                     _RC2	set	31762
   685  0000                     _RB2	set	31754
   686  0000                     _RB1	set	31753
   687  0000                     _RB0	set	31752
   688  0000                     _TRISD7	set	31919
   689  0000                     _TRISD6	set	31918
   690  0000                     _TRISD5	set	31917
   691  0000                     _TRISD4	set	31916
   692  0000                     _TRISD3	set	31915
   693  0000                     _TRISD2	set	31914
   694  0000                     _TRISD1	set	31913
   695  0000                     _TRISD0	set	31912
   696  0000                     _RESUME	set	31594
   697  0000                     _GODONE	set	32273
   698  0000                     _RB4	set	31756
   699  0000                     _RB7	set	31759
   700  0000                     _RB6	set	31758
   701  0000                     _RB5	set	31757
   702  0000                     _RB3	set	31755
   703  0000                     _RA5	set	31749
   704  0000                     _RA4	set	31748
   705  0000                     _TRISA5	set	31893
   706  0000                     _TRISA4	set	31892
   707  0000                     _RC1	set	31761
   708  0000                     _RC0	set	31760
   709  0000                     _RBPU	set	32655
   710  0000                     _SUSPND	set	31593
   711  0000                     _SE0	set	31597
   712  0000                     _PKTDIS	set	31596
   713                           
   714                           ; #config settings
   715  007FFE  00                 	db	0	; dummy byte at the end
   716  0000                     
   717                           	psect	cinit
   718  006880                     __pcinit:
   719                           	opt callstack 0
   720  006880                     start_initialization:
   721                           	opt callstack 0
   722  006880                     __initialization:
   723                           	opt callstack 0
   724                           
   725                           ; Clear objects allocated to BANK1 (130 bytes)
   726  006880  EE01  F000         	lfsr	0,__pbssBANK1
   727  006884  0E82               	movlw	130
   728  006886                     clear_0:
   729  006886  6AEE               	clrf	postinc0,c
   730  006888  06E8               	decf	wreg,f,c
   731  00688A  E1FD               	bnz	clear_0
   732                           
   733                           ; Clear objects allocated to BANK0 (122 bytes)
   734  00688C  EE00  F060         	lfsr	0,__pbssBANK0
   735  006890  0E7A               	movlw	122
   736  006892                     clear_1:
   737  006892  6AEE               	clrf	postinc0,c
   738  006894  06E8               	decf	wreg,f,c
   739  006896  E1FD               	bnz	clear_1
   740                           
   741                           ; Clear objects allocated to COMRAM (65 bytes)
   742  006898  EE00  F001         	lfsr	0,__pbssCOMRAM
   743  00689C  0E41               	movlw	65
   744  00689E                     clear_2:
   745  00689E  6AEE               	clrf	postinc0,c
   746  0068A0  06E8               	decf	wreg,f,c
   747  0068A2  E1FD               	bnz	clear_2
   748  0068A4                     end_of_initialization:
   749                           	opt callstack 0
   750  0068A4                     __end_of__initialization:
   751                           	opt callstack 0
   752  0068A4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   753  0068A6  6EF8               	movwf	tblptru,c
   754  0068A8  0100               	movlb	0
   755  0068AA  EF61  F035         	goto	_main	;jump to C main() function
   756                           
   757                           	psect	bssCOMRAM
   758  000001                     __pbssCOMRAM:
   759                           	opt callstack 0
   760  000001                     _joystick:
   761                           	opt callstack 0
   762  000001                     	ds	30
   763  00001F                     _pBDTEntryIn:
   764                           	opt callstack 0
   765  00001F                     	ds	8
   766  000027                     _inPipes:
   767                           	opt callstack 0
   768  000027                     	ds	6
   769  00002D                     _pDst:
   770                           	opt callstack 0
   771  00002D                     	ds	2
   772  00002F                     _pBDTEntryEP0OutNext:
   773                           	opt callstack 0
   774  00002F                     	ds	2
   775  000031                     _pBDTEntryEP0OutCurrent:
   776                           	opt callstack 0
   777  000031                     	ds	2
   778  000033                     _Keyboard_out:
   779                           	opt callstack 0
   780  000033                     	ds	1
   781  000034                     _BothEP0OutUOWNsSet:
   782                           	opt callstack 0
   783  000034                     	ds	1
   784  000035                     _RemoteWakeup:
   785                           	opt callstack 0
   786  000035                     	ds	1
   787  000036                     _controlTransferState:
   788                           	opt callstack 0
   789  000036                     	ds	1
   790  000037                     _shortPacketStatus:
   791                           	opt callstack 0
   792  000037                     	ds	1
   793  000038                     _USBDeviceState:
   794                           	opt callstack 0
   795  000038                     	ds	1
   796  000039                     _active_protocol_k1:
   797                           	opt callstack 0
   798  000039                     	ds	1
   799  00003A                     _idle_rate_k1:
   800                           	opt callstack 0
   801  00003A                     	ds	1
   802  00003B                     _USTATcopy:
   803                           	opt callstack 0
   804  00003B                     	ds	1
   805  00003C                     _USBAlternateInterface:
   806                           	opt callstack 0
   807  00003C                     	ds	1
   808  00003D                     _active_protocol_j2:
   809                           	opt callstack 0
   810  00003D                     	ds	1
   811  00003E                     _idle_rate_j2:
   812                           	opt callstack 0
   813  00003E                     	ds	1
   814  00003F                     _active_protocol_j1:
   815                           	opt callstack 0
   816  00003F                     	ds	1
   817  000040                     _idle_rate_j1:
   818                           	opt callstack 0
   819  000040                     	ds	1
   820  000041                     _USBActiveConfiguration:
   821                           	opt callstack 0
   822  000041                     	ds	1
   823                           
   824                           	psect	bssBANK0
   825  000060                     __pbssBANK0:
   826                           	opt callstack 0
   827  000060                     _rawKeyboardState:
   828                           	opt callstack 0
   829  000060                     	ds	65
   830  0000A1                     _USBInData:
   831                           	opt callstack 0
   832  0000A1                     	ds	9
   833  0000AA                     _OutBuffer:
   834                           	opt callstack 0
   835  0000AA                     	ds	8
   836  0000B2                     _buffer:
   837                           	opt callstack 0
   838  0000B2                     	ds	8
   839  0000BA                     _outPipes:
   840                           	opt callstack 0
   841  0000BA                     	ds	8
   842  0000C2                     _pBDTEntryOut:
   843                           	opt callstack 0
   844  0000C2                     	ds	8
   845  0000CA                     _USBInMaxPacketSize:
   846                           	opt callstack 0
   847  0000CA                     	ds	6
   848  0000D0                     USBCBSendResume@delay_count:
   849                           	opt callstack 0
   850  0000D0                     	ds	2
   851  0000D2                     _lastTransmission_j2:
   852                           	opt callstack 0
   853  0000D2                     	ds	2
   854  0000D4                     _lastTransmission_j1:
   855                           	opt callstack 0
   856  0000D4                     	ds	2
   857  0000D6                     _lastOUTTransmission_k1:
   858                           	opt callstack 0
   859  0000D6                     	ds	2
   860  0000D8                     _lastINTransmission_k1:
   861                           	opt callstack 0
   862  0000D8                     	ds	2
   863                           
   864                           	psect	bssBANK1
   865  000100                     __pbssBANK1:
   866                           	opt callstack 0
   867  000100                     _keyboard:
   868                           	opt callstack 0
   869  000100                     	ds	130
   870                           
   871                           	psect	cstackCOMRAM
   872  000042                     __pcstackCOMRAM:
   873                           	opt callstack 0
   874  000042                     ??_USBStdGetDscHandler:
   875  000042                     ??_USBStdGetStatusHandler:
   876  000042                     ??_USBStdFeatureReqHandler:
   877  000042                     ??_USBCBCheckOtherReq:
   878  000042                     ?_USBTransferOnePacket:
   879                           	opt callstack 0
   880  000042                     USBCtrlTrfRxService@i:
   881                           	opt callstack 0
   882  000042                     USBConfigureEndpoint@direction:
   883                           	opt callstack 0
   884  000042                     USBTransferOnePacket@dir:
   885                           	opt callstack 0
   886  000042                     initialiseKeyboard@key:
   887                           	opt callstack 0
   888  000042                     readKeyboardState@currentKeyNumber:
   889                           	opt callstack 0
   890  000042                     USBPrepareForNextSetupTrf@p:
   891                           	opt callstack 0
   892  000042                     USBCtrlTrfTxService@byteToSend:
   893                           	opt callstack 0
   894  000042                     memset@p1:
   895                           	opt callstack 0
   896                           
   897                           ; 2 bytes @ 0x0
   898  000042                     	ds	1
   899  000043                     ??_USBConfigureEndpoint:
   900  000043                     USBCtrlTrfRxService@byteToRead:
   901                           	opt callstack 0
   902  000043                     readKeyboardState@input:
   903                           	opt callstack 0
   904  000043                     keyboardBlocking@adjacentRowCount:
   905                           	opt callstack 0
   906  000043                     USBStdGetStatusHandler@p:
   907                           	opt callstack 0
   908  000043                     USBTransferOnePacket@data:
   909                           	opt callstack 0
   910                           
   911                           ; 2 bytes @ 0x1
   912  000043                     	ds	1
   913  000044                     USBCtrlTrfInHandler@lastDTS:
   914                           	opt callstack 0
   915  000044                     readKeyboardState@row:
   916                           	opt callstack 0
   917  000044                     keyboardBlocking@row:
   918                           	opt callstack 0
   919  000044                     debounceKeyboard@currentKeyNumber:
   920                           	opt callstack 0
   921  000044                     USBStdFeatureReqHandler@pUEP:
   922                           	opt callstack 0
   923  000044                     memset@c:
   924                           	opt callstack 0
   925                           
   926                           ; 2 bytes @ 0x2
   927  000044                     	ds	1
   928  000045                     USBConfigureEndpoint@workaround:
   929                           	opt callstack 0
   930  000045                     USBTransferOnePacket@len:
   931                           	opt callstack 0
   932  000045                     readKeyboardState@column:
   933                           	opt callstack 0
   934  000045                     keyboardBlocking@currentKeyNumber:
   935                           	opt callstack 0
   936                           
   937                           ; 1 bytes @ 0x3
   938  000045                     	ds	1
   939  000046                     USBConfigureEndpoint@EPNum:
   940                           	opt callstack 0
   941  000046                     USBTransferOnePacket@ep:
   942                           	opt callstack 0
   943  000046                     keyboardBlocking@column:
   944                           	opt callstack 0
   945  000046                     USBStdFeatureReqHandler@p:
   946                           	opt callstack 0
   947  000046                     memset@n:
   948                           	opt callstack 0
   949                           
   950                           ; 2 bytes @ 0x4
   951  000046                     	ds	1
   952  000047                     USBConfigureEndpoint@handle:
   953                           	opt callstack 0
   954  000047                     USBTransferOnePacket@handle:
   955                           	opt callstack 0
   956                           
   957                           ; 2 bytes @ 0x5
   958  000047                     	ds	1
   959  000048                     memset@p:
   960                           	opt callstack 0
   961                           
   962                           ; 2 bytes @ 0x6
   963  000048                     	ds	1
   964  000049                     ??_processKeyboard:
   965  000049                     USBEnableEndpoint@options:
   966                           	opt callstack 0
   967                           
   968                           ; 1 bytes @ 0x7
   969  000049                     	ds	1
   970  00004A                     USBDeviceInit@i:
   971                           	opt callstack 0
   972  00004A                     USBEnableEndpoint@p:
   973                           	opt callstack 0
   974                           
   975                           ; 2 bytes @ 0x8
   976  00004A                     	ds	1
   977  00004B                     processKeyboard@keyArray:
   978                           	opt callstack 0
   979                           
   980                           ; 12 bytes @ 0x9
   981  00004B                     	ds	1
   982  00004C                     USBEnableEndpoint@ep:
   983                           	opt callstack 0
   984                           
   985                           ; 1 bytes @ 0xA
   986  00004C                     	ds	1
   987  00004D                     USER_USB_CALLBACK_EVENT_HANDLER@event:
   988                           	opt callstack 0
   989                           
   990                           ; 2 bytes @ 0xB
   991  00004D                     	ds	2
   992  00004F                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
   993                           	opt callstack 0
   994                           
   995                           ; 2 bytes @ 0xD
   996  00004F                     	ds	2
   997  000051                     USER_USB_CALLBACK_EVENT_HANDLER@size:
   998                           	opt callstack 0
   999                           
  1000                           ; 2 bytes @ 0xF
  1001  000051                     	ds	2
  1002  000053                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  1003                           
  1004                           ; 1 bytes @ 0x11
  1005  000053                     	ds	2
  1006  000055                     ??_USBCtrlEPService:
  1007  000055                     
  1008                           ; 1 bytes @ 0x13
  1009  000055                     	ds	2
  1010  000057                     USBCtrlEPService@setup_cnt:
  1011                           	opt callstack 0
  1012  000057                     _processKeyboard$3442:
  1013                           	opt callstack 0
  1014                           
  1015                           ; 2 bytes @ 0x15
  1016  000057                     	ds	1
  1017  000058                     ??_USBDeviceTasks:
  1018                           
  1019                           ; 1 bytes @ 0x16
  1020  000058                     	ds	1
  1021  000059                     USBDeviceTasks@i:
  1022                           	opt callstack 0
  1023  000059                     processKeyboard@modifier:
  1024                           	opt callstack 0
  1025                           
  1026                           ; 2 bytes @ 0x17
  1027  000059                     	ds	2
  1028  00005B                     processKeyboard@keysDetected:
  1029                           	opt callstack 0
  1030                           
  1031                           ; 2 bytes @ 0x19
  1032  00005B                     	ds	2
  1033  00005D                     processKeyboard@key:
  1034                           	opt callstack 0
  1035                           
  1036                           ; 2 bytes @ 0x1B
  1037  00005D                     	ds	2
  1038  00005F                     
  1039                           ; 1 bytes @ 0x1D
  1040 ;;
  1041 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1042 ;;
  1043 ;; *************** function _main *****************
  1044 ;; Defined at:
  1045 ;;		line 67 in file "../main.c"
  1046 ;; Parameters:    Size  Location     Type
  1047 ;;		None
  1048 ;; Auto vars:     Size  Location     Type
  1049 ;;		None
  1050 ;; Return value:  Size  Location     Type
  1051 ;;                  1    wreg      void 
  1052 ;; Registers used:
  1053 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1054 ;; Tracked objects:
  1055 ;;		On entry : 0/0
  1056 ;;		On exit  : 0/0
  1057 ;;		Unchanged: 0/0
  1058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  1059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  1060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0
  1061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  1062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0
  1063 ;;Total ram usage:        0 bytes
  1064 ;; Hardware stack levels required when called:    9
  1065 ;; This function calls:
  1066 ;;		_USBDeviceInit
  1067 ;;		_USBDeviceTasks
  1068 ;;		_debounceKeyboard
  1069 ;;		_initialise
  1070 ;;		_keyboardBlocking
  1071 ;;		_processKeyboard
  1072 ;;		_readKeyboardState
  1073 ;; This function is called by:
  1074 ;;		Startup code after reset
  1075 ;; This function uses a non-reentrant model
  1076 ;;
  1077                           
  1078                           	psect	text0
  1079  006AC2                     __ptext0:
  1080                           	opt callstack 0
  1081  006AC2                     _main:
  1082                           	opt callstack 22
  1083                           
  1084                           ;main.c: 72: ADCON1 = 0b00001110;
  1085                           
  1086                           ;incstack = 0
  1087  006AC2  0E0E               	movlw	14
  1088  006AC4  6EC1               	movwf	4033,c	;volatile
  1089                           
  1090                           ;main.c: 75: ADCON2 = 0b10110110;
  1091  006AC6  0EB6               	movlw	182
  1092  006AC8  6EC0               	movwf	4032,c	;volatile
  1093                           
  1094                           ;main.c: 78: TRISA = 0b00111111;
  1095  006ACA  0E3F               	movlw	63
  1096  006ACC  6E92               	movwf	3986,c	;volatile
  1097                           
  1098                           ;main.c: 79: TRISB = 0b11111111;
  1099  006ACE  6893               	setf	3987,c	;volatile
  1100                           
  1101                           ;main.c: 80: TRISC = 0b01000100;
  1102  006AD0  0E44               	movlw	68
  1103  006AD2  6E94               	movwf	3988,c	;volatile
  1104                           
  1105                           ;main.c: 81: TRISD = 0b00000000;
  1106  006AD4  0E00               	movlw	0
  1107  006AD6  6E95               	movwf	3989,c	;volatile
  1108                           
  1109                           ;main.c: 82: TRISE = 0b00000000;
  1110  006AD8  0E00               	movlw	0
  1111  006ADA  6E96               	movwf	3990,c	;volatile
  1112                           
  1113                           ;main.c: 85: PORTA = 0b00000000;
  1114  006ADC  0E00               	movlw	0
  1115  006ADE  6E80               	movwf	3968,c	;volatile
  1116                           
  1117                           ;main.c: 86: PORTB = 0b00000000;
  1118  006AE0  0E00               	movlw	0
  1119  006AE2  6E81               	movwf	3969,c	;volatile
  1120                           
  1121                           ;main.c: 87: PORTC = 0b00000000;
  1122  006AE4  0E00               	movlw	0
  1123  006AE6  6E82               	movwf	3970,c	;volatile
  1124                           
  1125                           ;main.c: 88: PORTD = 0b00000000;
  1126  006AE8  0E00               	movlw	0
  1127  006AEA  6E83               	movwf	3971,c	;volatile
  1128                           
  1129                           ;main.c: 89: PORTE = 0b00000000;
  1130  006AEC  0E00               	movlw	0
  1131  006AEE  6E84               	movwf	3972,c	;volatile
  1132                           
  1133                           ;main.c: 92: RBPU = 0;
  1134  006AF0  9EF1               	bcf	4081,7,c	;volatile
  1135                           
  1136                           ;main.c: 95: initialise();
  1137  006AF2  EC00  F034         	call	_initialise	;wreg free
  1138                           
  1139                           ;main.c: 96: USBDeviceInit();
  1140  006AF6  ECDA  F036         	call	_USBDeviceInit	;wreg free
  1141  006AFA                     l4298:
  1142                           
  1143                           ;main.c: 99: {;main.c: 101: USBDeviceTasks();
  1144  006AFA  EC26  F03C         	call	_USBDeviceTasks	;wreg free
  1145                           
  1146                           ;main.c: 105: if(USBDeviceState == CONFIGURED_STATE)
  1147  006AFE  0E20               	movlw	32
  1148  006B00  1838               	xorwf	_USBDeviceState,w,c
  1149  006B02  A4D8               	btfss	status,2,c
  1150  006B04  D003               	goto	l545
  1151                           
  1152                           ;main.c: 106: {;main.c: 108: RC0 = 0;
  1153  006B06  9082               	bcf	3970,0,c	;volatile
  1154                           
  1155                           ;main.c: 109: RC1 = 1;
  1156  006B08  8282               	bsf	3970,1,c	;volatile
  1157                           
  1158                           ;main.c: 110: }
  1159  006B0A  D002               	goto	l4304
  1160  006B0C                     l545:
  1161                           
  1162                           ;main.c: 111: else;main.c: 112: {;main.c: 114: RC0 = 1;
  1163  006B0C  8082               	bsf	3970,0,c	;volatile
  1164                           
  1165                           ;main.c: 115: RC1 = 0;
  1166  006B0E  9282               	bcf	3970,1,c	;volatile
  1167  006B10                     l4304:
  1168                           
  1169                           ;main.c: 116: };main.c: 119: if((USBDeviceState < CONFIGURED_STATE)||(SUSPND==1))
  1170  006B10  0E1F               	movlw	31
  1171  006B12  6438               	cpfsgt	_USBDeviceState,c
  1172  006B14  D7F2               	goto	l4298
  1173  006B16  B26D               	btfsc	3949,1,c	;volatile
  1174  006B18  D7F0               	goto	l4298
  1175                           
  1176                           ;main.c: 123: else;main.c: 124: {;main.c: 129: readKeyboardState();
  1177  006B1A  ECBC  F03C         	call	_readKeyboardState	;wreg free
  1178                           
  1179                           ;main.c: 135: keyboardBlocking();
  1180  006B1E  EC0C  F036         	call	_keyboardBlocking	;wreg free
  1181                           
  1182                           ;main.c: 138: debounceKeyboard();
  1183  006B22  EC9D  F03B         	call	_debounceKeyboard	;wreg free
  1184                           
  1185                           ;main.c: 145: processKeyboard();
  1186  006B26  EC61  F03D         	call	_processKeyboard	;wreg free
  1187  006B2A  D7E7               	goto	l4298
  1188  006B2C                     __end_of_main:
  1189                           	opt callstack 0
  1190                           
  1191 ;; *************** function _readKeyboardState *****************
  1192 ;; Defined at:
  1193 ;;		line 73 in file "../keyboard.c"
  1194 ;; Parameters:    Size  Location     Type
  1195 ;;		None
  1196 ;; Auto vars:     Size  Location     Type
  1197 ;;  column          1    3[COMRAM] unsigned char 
  1198 ;;  row             1    2[COMRAM] unsigned char 
  1199 ;;  input           1    1[COMRAM] unsigned char 
  1200 ;;  currentKeyNu    1    0[COMRAM] unsigned char 
  1201 ;; Return value:  Size  Location     Type
  1202 ;;                  1    wreg      void 
  1203 ;; Registers used:
  1204 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1205 ;; Tracked objects:
  1206 ;;		On entry : 0/0
  1207 ;;		On exit  : 0/0
  1208 ;;		Unchanged: 0/0
  1209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  1210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  1211 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0
  1212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  1213 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0
  1214 ;;Total ram usage:        4 bytes
  1215 ;; Hardware stack levels used:    1
  1216 ;; This function calls:
  1217 ;;		Nothing
  1218 ;; This function is called by:
  1219 ;;		_main
  1220 ;; This function uses a non-reentrant model
  1221 ;;
  1222                           
  1223                           	psect	text1
  1224  007978                     __ptext1:
  1225                           	opt callstack 0
  1226  007978                     _readKeyboardState:
  1227                           	opt callstack 30
  1228                           
  1229                           ;keyboard.c: 75: unsigned char row;;keyboard.c: 76: unsigned char column;;keyboard.c: 77
      +                          : unsigned char input;;keyboard.c: 78: unsigned char currentKeyNumber;;keyboard.c: 84: f
      +                          or (column = 0; column < 8; column++)
  1230                           
  1231                           ;incstack = 0
  1232  007978  0E00               	movlw	0
  1233  00797A  6E45               	movwf	readKeyboardState@column,c
  1234  00797C                     l4048:
  1235                           
  1236                           ;keyboard.c: 85: {;keyboard.c: 87: if (column == 0) TRISD0 = 0; else TRISD0 = 1;
  1237  00797C  5045               	movf	readKeyboardState@column,w,c
  1238  00797E  A4D8               	btfss	status,2,c
  1239  007980  D002               	goto	l836
  1240  007982  9095               	bcf	3989,0,c	;volatile
  1241  007984  D001               	goto	l4052
  1242  007986                     l836:
  1243  007986  8095               	bsf	3989,0,c	;volatile
  1244  007988                     l4052:
  1245                           
  1246                           ;keyboard.c: 88: if (column == 1) TRISD1 = 0; else TRISD1 = 1;
  1247  007988  0445               	decf	readKeyboardState@column,w,c
  1248  00798A  A4D8               	btfss	status,2,c
  1249  00798C  D002               	goto	l838
  1250  00798E  9295               	bcf	3989,1,c	;volatile
  1251  007990  D001               	goto	l4056
  1252  007992                     l838:
  1253  007992  8295               	bsf	3989,1,c	;volatile
  1254  007994                     l4056:
  1255                           
  1256                           ;keyboard.c: 89: if (column == 2) TRISD2 = 0; else TRISD2 = 1;
  1257  007994  0E02               	movlw	2
  1258  007996  1845               	xorwf	readKeyboardState@column,w,c
  1259  007998  A4D8               	btfss	status,2,c
  1260  00799A  D002               	goto	l840
  1261  00799C  9495               	bcf	3989,2,c	;volatile
  1262  00799E  D001               	goto	l4060
  1263  0079A0                     l840:
  1264  0079A0  8495               	bsf	3989,2,c	;volatile
  1265  0079A2                     l4060:
  1266                           
  1267                           ;keyboard.c: 90: if (column == 3) TRISD3 = 0; else TRISD3 = 1;
  1268  0079A2  0E03               	movlw	3
  1269  0079A4  1845               	xorwf	readKeyboardState@column,w,c
  1270  0079A6  A4D8               	btfss	status,2,c
  1271  0079A8  D002               	goto	l842
  1272  0079AA  9695               	bcf	3989,3,c	;volatile
  1273  0079AC  D001               	goto	l4064
  1274  0079AE                     l842:
  1275  0079AE  8695               	bsf	3989,3,c	;volatile
  1276  0079B0                     l4064:
  1277                           
  1278                           ;keyboard.c: 91: if (column == 4) TRISD4 = 0; else TRISD4 = 1;
  1279  0079B0  0E04               	movlw	4
  1280  0079B2  1845               	xorwf	readKeyboardState@column,w,c
  1281  0079B4  A4D8               	btfss	status,2,c
  1282  0079B6  D002               	goto	l844
  1283  0079B8  9895               	bcf	3989,4,c	;volatile
  1284  0079BA  D001               	goto	l4068
  1285  0079BC                     l844:
  1286  0079BC  8895               	bsf	3989,4,c	;volatile
  1287  0079BE                     l4068:
  1288                           
  1289                           ;keyboard.c: 92: if (column == 5) TRISD5 = 0; else TRISD5 = 1;
  1290  0079BE  0E05               	movlw	5
  1291  0079C0  1845               	xorwf	readKeyboardState@column,w,c
  1292  0079C2  A4D8               	btfss	status,2,c
  1293  0079C4  D002               	goto	l846
  1294  0079C6  9A95               	bcf	3989,5,c	;volatile
  1295  0079C8  D001               	goto	l4072
  1296  0079CA                     l846:
  1297  0079CA  8A95               	bsf	3989,5,c	;volatile
  1298  0079CC                     l4072:
  1299                           
  1300                           ;keyboard.c: 93: if (column == 6) TRISD6 = 0; else TRISD6 = 1;
  1301  0079CC  0E06               	movlw	6
  1302  0079CE  1845               	xorwf	readKeyboardState@column,w,c
  1303  0079D0  A4D8               	btfss	status,2,c
  1304  0079D2  D002               	goto	l848
  1305  0079D4  9C95               	bcf	3989,6,c	;volatile
  1306  0079D6  D001               	goto	l4076
  1307  0079D8                     l848:
  1308  0079D8  8C95               	bsf	3989,6,c	;volatile
  1309  0079DA                     l4076:
  1310                           
  1311                           ;keyboard.c: 94: if (column == 7) TRISD7 = 0; else TRISD7 = 1;
  1312  0079DA  0E07               	movlw	7
  1313  0079DC  1845               	xorwf	readKeyboardState@column,w,c
  1314  0079DE  A4D8               	btfss	status,2,c
  1315  0079E0  D002               	goto	l850
  1316  0079E2  9E95               	bcf	3989,7,c	;volatile
  1317  0079E4  D001               	goto	l4080
  1318  0079E6                     l850:
  1319  0079E6  8E95               	bsf	3989,7,c	;volatile
  1320  0079E8                     l4080:
  1321                           
  1322                           ;keyboard.c: 97: _delay((unsigned long)((2)*(48000000/4000000.0)));
  1323  0079E8  0E08               	movlw	8
  1324  0079EA                     u4127:
  1325  0079EA  2EE8               	decfsz	wreg,f,c
  1326  0079EC  D7FE               	bra	u4127
  1327                           
  1328                           ;keyboard.c: 99: for (row = 0; row < 8; row++)
  1329  0079EE  0E00               	movlw	0
  1330  0079F0  6E44               	movwf	readKeyboardState@row,c
  1331  0079F2                     l4088:
  1332                           
  1333                           ;keyboard.c: 100: {;keyboard.c: 102: if (row == 0) input = RB0;
  1334  0079F2  5044               	movf	readKeyboardState@row,w,c
  1335  0079F4  A4D8               	btfss	status,2,c
  1336  0079F6  D004               	goto	l4092
  1337  0079F8  0E00               	movlw	0
  1338  0079FA  B081               	btfsc	3969,0,c	;volatile
  1339  0079FC  0E01               	movlw	1
  1340  0079FE  6E43               	movwf	readKeyboardState@input,c
  1341  007A00                     l4092:
  1342                           
  1343                           ;keyboard.c: 103: if (row == 1) input = RB1;
  1344  007A00  0444               	decf	readKeyboardState@row,w,c
  1345  007A02  A4D8               	btfss	status,2,c
  1346  007A04  D004               	goto	l4096
  1347  007A06  0E00               	movlw	0
  1348  007A08  B281               	btfsc	3969,1,c	;volatile
  1349  007A0A  0E01               	movlw	1
  1350  007A0C  6E43               	movwf	readKeyboardState@input,c
  1351  007A0E                     l4096:
  1352                           
  1353                           ;keyboard.c: 104: if (row == 2) input = RB2;
  1354  007A0E  0E02               	movlw	2
  1355  007A10  1844               	xorwf	readKeyboardState@row,w,c
  1356  007A12  A4D8               	btfss	status,2,c
  1357  007A14  D004               	goto	l4100
  1358  007A16  0E00               	movlw	0
  1359  007A18  B481               	btfsc	3969,2,c	;volatile
  1360  007A1A  0E01               	movlw	1
  1361  007A1C  6E43               	movwf	readKeyboardState@input,c
  1362  007A1E                     l4100:
  1363                           
  1364                           ;keyboard.c: 105: if (row == 3) input = RB3;
  1365  007A1E  0E03               	movlw	3
  1366  007A20  1844               	xorwf	readKeyboardState@row,w,c
  1367  007A22  A4D8               	btfss	status,2,c
  1368  007A24  D004               	goto	l4104
  1369  007A26  0E00               	movlw	0
  1370  007A28  B681               	btfsc	3969,3,c	;volatile
  1371  007A2A  0E01               	movlw	1
  1372  007A2C  6E43               	movwf	readKeyboardState@input,c
  1373  007A2E                     l4104:
  1374                           
  1375                           ;keyboard.c: 106: if (row == 4) input = RB4;
  1376  007A2E  0E04               	movlw	4
  1377  007A30  1844               	xorwf	readKeyboardState@row,w,c
  1378  007A32  A4D8               	btfss	status,2,c
  1379  007A34  D004               	goto	l4108
  1380  007A36  0E00               	movlw	0
  1381  007A38  B881               	btfsc	3969,4,c	;volatile
  1382  007A3A  0E01               	movlw	1
  1383  007A3C  6E43               	movwf	readKeyboardState@input,c
  1384  007A3E                     l4108:
  1385                           
  1386                           ;keyboard.c: 107: if (row == 5) input = RB5;
  1387  007A3E  0E05               	movlw	5
  1388  007A40  1844               	xorwf	readKeyboardState@row,w,c
  1389  007A42  A4D8               	btfss	status,2,c
  1390  007A44  D004               	goto	l4112
  1391  007A46  0E00               	movlw	0
  1392  007A48  BA81               	btfsc	3969,5,c	;volatile
  1393  007A4A  0E01               	movlw	1
  1394  007A4C  6E43               	movwf	readKeyboardState@input,c
  1395  007A4E                     l4112:
  1396                           
  1397                           ;keyboard.c: 108: if (row == 6) input = RB6;
  1398  007A4E  0E06               	movlw	6
  1399  007A50  1844               	xorwf	readKeyboardState@row,w,c
  1400  007A52  A4D8               	btfss	status,2,c
  1401  007A54  D004               	goto	l4116
  1402  007A56  0E00               	movlw	0
  1403  007A58  BC81               	btfsc	3969,6,c	;volatile
  1404  007A5A  0E01               	movlw	1
  1405  007A5C  6E43               	movwf	readKeyboardState@input,c
  1406  007A5E                     l4116:
  1407                           
  1408                           ;keyboard.c: 109: if (row == 7) input = RB7;
  1409  007A5E  0E07               	movlw	7
  1410  007A60  1844               	xorwf	readKeyboardState@row,w,c
  1411  007A62  A4D8               	btfss	status,2,c
  1412  007A64  D004               	goto	l4120
  1413  007A66  0E00               	movlw	0
  1414  007A68  BE81               	btfsc	3969,7,c	;volatile
  1415  007A6A  0E01               	movlw	1
  1416  007A6C  6E43               	movwf	readKeyboardState@input,c
  1417  007A6E                     l4120:
  1418                           
  1419                           ;keyboard.c: 112: currentKeyNumber = (column * 8) + row;
  1420  007A6E  5045               	movf	readKeyboardState@column,w,c
  1421  007A70  0D08               	mullw	8
  1422  007A72  50F3               	movf	prodl,w,c
  1423  007A74  2444               	addwf	readKeyboardState@row,w,c
  1424  007A76  6E42               	movwf	readKeyboardState@currentKeyNumber,c
  1425                           
  1426                           ;keyboard.c: 115: if (input == 0) rawKeyboardState[currentKeyNumber] = 1;
  1427  007A78  5043               	movf	readKeyboardState@input,w,c
  1428  007A7A  A4D8               	btfss	status,2,c
  1429  007A7C  D008               	goto	l4126
  1430  007A7E  0E60               	movlw	low _rawKeyboardState
  1431  007A80  2442               	addwf	readKeyboardState@currentKeyNumber,w,c
  1432  007A82  6ED9               	movwf	fsr2l,c
  1433  007A84  6ADA               	clrf	fsr2h,c
  1434  007A86  0E00               	movlw	high _rawKeyboardState
  1435  007A88  22DA               	addwfc	fsr2h,f,c
  1436  007A8A  0E01               	movlw	1
  1437  007A8C  D007               	goto	L1
  1438  007A8E                     l4126:
  1439                           
  1440                           ;keyboard.c: 116: else rawKeyboardState[currentKeyNumber] = 0;
  1441  007A8E  0E60               	movlw	low _rawKeyboardState
  1442  007A90  2442               	addwf	readKeyboardState@currentKeyNumber,w,c
  1443  007A92  6ED9               	movwf	fsr2l,c
  1444  007A94  6ADA               	clrf	fsr2h,c
  1445  007A96  0E00               	movlw	high _rawKeyboardState
  1446  007A98  22DA               	addwfc	fsr2h,f,c
  1447  007A9A  0E00               	movlw	0
  1448  007A9C                     L1:
  1449  007A9C  6EDF               	movwf	indf2,c
  1450  007A9E  2A44               	incf	readKeyboardState@row,f,c
  1451  007AA0  0E07               	movlw	7
  1452  007AA2  6444               	cpfsgt	readKeyboardState@row,c
  1453  007AA4  D7A6               	goto	l4088
  1454  007AA6  2A45               	incf	readKeyboardState@column,f,c
  1455  007AA8  0E07               	movlw	7
  1456  007AAA  6445               	cpfsgt	readKeyboardState@column,c
  1457  007AAC  D767               	goto	l4048
  1458                           
  1459                           ;keyboard.c: 117: };keyboard.c: 118: };keyboard.c: 121: if (RC2 == 0) rawKeyboardState[6
      +                          4] = 1; else rawKeyboardState[64] = 0;
  1460  007AAE  B482               	btfsc	3970,2,c	;volatile
  1461  007AB0  D004               	goto	l4138
  1462  007AB2  0E01               	movlw	1
  1463  007AB4  0100               	movlb	0	; () banked
  1464  007AB6  6FA0               	movwf	(_rawKeyboardState+64)& (0+255),b
  1465  007AB8  0012               	return	
  1466  007ABA                     l4138:
  1467  007ABA  0E00               	movlw	0
  1468  007ABC  0100               	movlb	0	; () banked
  1469  007ABE  6FA0               	movwf	(_rawKeyboardState+64)& (0+255),b
  1470                           
  1471                           ; BSR set to: 0
  1472  007AC0  0012               	return		;funcret
  1473  007AC2                     __end_of_readKeyboardState:
  1474                           	opt callstack 0
  1475                           
  1476 ;; *************** function _processKeyboard *****************
  1477 ;; Defined at:
  1478 ;;		line 192 in file "../keyboard.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;		None
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;  keyArray       12    9[COMRAM] unsigned int [6]
  1483 ;;  key             2   27[COMRAM] unsigned int 
  1484 ;;  keysDetected    2   25[COMRAM] unsigned int 
  1485 ;;  modifier        2   23[COMRAM] unsigned int 
  1486 ;; Return value:  Size  Location     Type
  1487 ;;                  1    wreg      void 
  1488 ;; Registers used:
  1489 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  1495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  1496 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0
  1497 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0
  1498 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0
  1499 ;;Total ram usage:       22 bytes
  1500 ;; Hardware stack levels used:    1
  1501 ;; Hardware stack levels required when called:    1
  1502 ;; This function calls:
  1503 ;;		_USBTransferOnePacket
  1504 ;; This function is called by:
  1505 ;;		_main
  1506 ;; This function uses a non-reentrant model
  1507 ;;
  1508                           
  1509                           	psect	text2
  1510  007AC2                     __ptext2:
  1511                           	opt callstack 0
  1512  007AC2                     _processKeyboard:
  1513                           	opt callstack 29
  1514                           
  1515                           ;keyboard.c: 194: unsigned keyArray[6];;keyboard.c: 195: unsigned keysDetected = 0;
  1516                           
  1517                           ; BSR set to: 0
  1518                           ;incstack = 0
  1519  007AC2  0E00               	movlw	0
  1520  007AC4  6E5C               	movwf	processKeyboard@keysDetected+1,c
  1521  007AC6  0E00               	movlw	0
  1522  007AC8  6E5B               	movwf	processKeyboard@keysDetected,c
  1523                           
  1524                           ;keyboard.c: 196: unsigned key;;keyboard.c: 198: unsigned modifier = 0;
  1525  007ACA  0E00               	movlw	0
  1526  007ACC  6E5A               	movwf	processKeyboard@modifier+1,c
  1527  007ACE  0E00               	movlw	0
  1528  007AD0  6E59               	movwf	processKeyboard@modifier,c
  1529                           
  1530                           ;keyboard.c: 201: for (key = 0; key < 6; key++) keyArray[key] = 0;
  1531  007AD2  0E00               	movlw	0
  1532  007AD4  6E5E               	movwf	processKeyboard@key+1,c
  1533  007AD6  0E00               	movlw	0
  1534  007AD8  6E5D               	movwf	processKeyboard@key,c
  1535  007ADA                     l4224:
  1536  007ADA  90D8               	bcf	status,0,c
  1537  007ADC  345D               	rlcf	processKeyboard@key,w,c
  1538  007ADE  6ED9               	movwf	fsr2l,c
  1539  007AE0  345E               	rlcf	processKeyboard@key+1,w,c
  1540  007AE2  6EDA               	movwf	fsr2h,c
  1541  007AE4  0E4B               	movlw	low processKeyboard@keyArray
  1542  007AE6  26D9               	addwf	fsr2l,f,c
  1543  007AE8  0E00               	movlw	high processKeyboard@keyArray
  1544  007AEA  22DA               	addwfc	fsr2h,f,c
  1545  007AEC  0E00               	movlw	0
  1546  007AEE  6EDE               	movwf	postinc2,c
  1547  007AF0  0E00               	movlw	0
  1548  007AF2  6EDD               	movwf	postdec2,c
  1549  007AF4  4A5D               	infsnz	processKeyboard@key,f,c
  1550  007AF6  2A5E               	incf	processKeyboard@key+1,f,c
  1551  007AF8  505E               	movf	processKeyboard@key+1,w,c
  1552  007AFA  E104               	bnz	u3690
  1553  007AFC  0E06               	movlw	6
  1554  007AFE  5C5D               	subwf	processKeyboard@key,w,c
  1555  007B00  A0D8               	btfss	status,0,c
  1556  007B02  D7EB               	goto	l4224
  1557  007B04                     u3690:
  1558                           
  1559                           ;keyboard.c: 205: if(!(lastINTransmission_k1==0?0:((volatile BDT_ENTRY*)lastINTransmissi
      +                          on_k1)->STAT.UOWN))
  1560  007B04  0100               	movlb	0	; () banked
  1561  007B06  51D8               	movf	_lastINTransmission_k1& (0+255),w,b
  1562  007B08  11D9               	iorwf	(_lastINTransmission_k1+1)& (0+255),w,b
  1563  007B0A  B4D8               	btfsc	status,2,c
  1564  007B0C  D00E               	goto	l4234
  1565                           
  1566                           ; BSR set to: 0
  1567  007B0E  C0D8  FFD9         	movff	_lastINTransmission_k1,fsr2l
  1568  007B12  C0D9  FFDA         	movff	_lastINTransmission_k1+1,fsr2h
  1569  007B16  AEDF               	btfss	indf2,7,c
  1570  007B18  D003               	goto	u3710
  1571  007B1A  6A49               	clrf	??_processKeyboard& (0+255),c
  1572  007B1C  2A49               	incf	??_processKeyboard& (0+255),f,c
  1573  007B1E  D001               	goto	u3718
  1574  007B20                     u3710:
  1575  007B20  6A49               	clrf	??_processKeyboard& (0+255),c
  1576  007B22                     u3718:
  1577  007B22  5049               	movf	??_processKeyboard,w,c
  1578  007B24  6E57               	movwf	_processKeyboard$3442,c
  1579  007B26  6A58               	clrf	_processKeyboard$3442+1,c
  1580  007B28  D004               	goto	l4236
  1581  007B2A                     l4234:
  1582                           
  1583                           ; BSR set to: 0
  1584  007B2A  0E00               	movlw	0
  1585  007B2C  6E58               	movwf	_processKeyboard$3442+1,c
  1586  007B2E  0E00               	movlw	0
  1587  007B30  6E57               	movwf	_processKeyboard$3442,c
  1588  007B32                     l4236:
  1589  007B32  5057               	movf	_processKeyboard$3442,w,c
  1590  007B34  1058               	iorwf	_processKeyboard$3442+1,w,c
  1591  007B36  A4D8               	btfss	status,2,c
  1592  007B38  0012               	return	
  1593                           
  1594                           ;keyboard.c: 206: {;keyboard.c: 223: for (key = 0; key < 65; key++)
  1595  007B3A  0E00               	movlw	0
  1596  007B3C  6E5E               	movwf	processKeyboard@key+1,c
  1597  007B3E  0E00               	movlw	0
  1598  007B40  6E5D               	movwf	processKeyboard@key,c
  1599  007B42                     l4244:
  1600                           
  1601                           ;keyboard.c: 224: {;keyboard.c: 225: if (keyboard[key].state == 1 && keysDetected < 6)
  1602  007B42  90D8               	bcf	status,0,c
  1603  007B44  345D               	rlcf	processKeyboard@key,w,c
  1604  007B46  6ED9               	movwf	fsr2l,c
  1605  007B48  345E               	rlcf	processKeyboard@key+1,w,c
  1606  007B4A  6EDA               	movwf	fsr2h,c
  1607  007B4C  0E00               	movlw	low _keyboard
  1608  007B4E  26D9               	addwf	fsr2l,f,c
  1609  007B50  0E01               	movlw	high _keyboard
  1610  007B52  22DA               	addwfc	fsr2h,f,c
  1611  007B54  04DE               	decf	postinc2,w,c
  1612  007B56  A4D8               	btfss	status,2,c
  1613  007B58  D03B               	goto	l4268
  1614  007B5A  505C               	movf	processKeyboard@keysDetected+1,w,c
  1615  007B5C  E139               	bnz	l4268
  1616  007B5E  0E06               	movlw	6
  1617  007B60  5C5B               	subwf	processKeyboard@keysDetected,w,c
  1618  007B62  B0D8               	btfsc	status,0,c
  1619  007B64  D035               	goto	l4268
  1620                           
  1621                           ;keyboard.c: 226: {;keyboard.c: 228: if (key == 2)
  1622  007B66  0E02               	movlw	2
  1623  007B68  185D               	xorwf	processKeyboard@key,w,c
  1624  007B6A  105E               	iorwf	processKeyboard@key+1,w,c
  1625  007B6C  A4D8               	btfss	status,2,c
  1626  007B6E  D002               	goto	l4252
  1627                           
  1628                           ;keyboard.c: 229: modifier |= 0b00000001;
  1629  007B70  8059               	bsf	processKeyboard@modifier,0,c
  1630  007B72  D02E               	goto	l4268
  1631  007B74                     l4252:
  1632                           
  1633                           ;keyboard.c: 230: else if (key == 5)
  1634  007B74  0E05               	movlw	5
  1635  007B76  185D               	xorwf	processKeyboard@key,w,c
  1636  007B78  105E               	iorwf	processKeyboard@key+1,w,c
  1637  007B7A  A4D8               	btfss	status,2,c
  1638  007B7C  D002               	goto	l4256
  1639                           
  1640                           ;keyboard.c: 232: modifier |= 0b00000100;
  1641  007B7E  8459               	bsf	processKeyboard@modifier,2,c
  1642  007B80  D027               	goto	l4268
  1643  007B82                     l4256:
  1644                           
  1645                           ;keyboard.c: 233: else if (key == 11)
  1646  007B82  0E0B               	movlw	11
  1647  007B84  185D               	xorwf	processKeyboard@key,w,c
  1648  007B86  105E               	iorwf	processKeyboard@key+1,w,c
  1649  007B88  A4D8               	btfss	status,2,c
  1650  007B8A  D002               	goto	l4260
  1651                           
  1652                           ;keyboard.c: 234: modifier |= 0b00000010;
  1653  007B8C  8259               	bsf	processKeyboard@modifier,1,c
  1654  007B8E  D020               	goto	l4268
  1655  007B90                     l4260:
  1656                           
  1657                           ;keyboard.c: 235: else if (key == 52)
  1658  007B90  0E34               	movlw	52
  1659  007B92  185D               	xorwf	processKeyboard@key,w,c
  1660  007B94  105E               	iorwf	processKeyboard@key+1,w,c
  1661  007B96  A4D8               	btfss	status,2,c
  1662  007B98  D002               	goto	l4264
  1663                           
  1664                           ;keyboard.c: 236: modifier |= 0b00100000;
  1665  007B9A  8A59               	bsf	processKeyboard@modifier,5,c
  1666  007B9C  D019               	goto	l4268
  1667  007B9E                     l4264:
  1668                           
  1669                           ;keyboard.c: 237: else;keyboard.c: 238: {;keyboard.c: 240: keyArray[keysDetected] = keym
      +                          ap[key];
  1670  007B9E  0EC3               	movlw	low _keymap
  1671  007BA0  245D               	addwf	processKeyboard@key,w,c
  1672  007BA2  6EF6               	movwf	tblptrl,c
  1673  007BA4  0E7D               	movlw	high _keymap
  1674  007BA6  205E               	addwfc	processKeyboard@key+1,w,c
  1675  007BA8  6EF7               	movwf	tblptrh,c
  1676  007BAA                     	if	0	;There are less than 3 active tblptr bytes
  1677  007BAA                     	endif
  1678  007BAA  0008               	tblrd		*
  1679  007BAC  50F5               	movf	tablat,w,c
  1680  007BAE  6E49               	movwf	??_processKeyboard& (0+255),c
  1681  007BB0  6A4A               	clrf	(??_processKeyboard+1)& (0+255),c
  1682  007BB2  90D8               	bcf	status,0,c
  1683  007BB4  345B               	rlcf	processKeyboard@keysDetected,w,c
  1684  007BB6  6ED9               	movwf	fsr2l,c
  1685  007BB8  345C               	rlcf	processKeyboard@keysDetected+1,w,c
  1686  007BBA  6EDA               	movwf	fsr2h,c
  1687  007BBC  0E4B               	movlw	low processKeyboard@keyArray
  1688  007BBE  26D9               	addwf	fsr2l,f,c
  1689  007BC0  0E00               	movlw	high processKeyboard@keyArray
  1690  007BC2  22DA               	addwfc	fsr2h,f,c
  1691  007BC4  C049  FFDE         	movff	??_processKeyboard,postinc2
  1692  007BC8  C04A  FFDD         	movff	??_processKeyboard+1,postdec2
  1693                           
  1694                           ;keyboard.c: 241: keysDetected++;
  1695  007BCC  4A5B               	infsnz	processKeyboard@keysDetected,f,c
  1696  007BCE  2A5C               	incf	processKeyboard@keysDetected+1,f,c
  1697  007BD0                     l4268:
  1698  007BD0  4A5D               	infsnz	processKeyboard@key,f,c
  1699  007BD2  2A5E               	incf	processKeyboard@key+1,f,c
  1700  007BD4  505E               	movf	processKeyboard@key+1,w,c
  1701  007BD6  E104               	bnz	u3790
  1702  007BD8  0E41               	movlw	65
  1703  007BDA  5C5D               	subwf	processKeyboard@key,w,c
  1704  007BDC  A0D8               	btfss	status,0,c
  1705  007BDE  D7B1               	goto	l4244
  1706  007BE0                     u3790:
  1707                           
  1708                           ;keyboard.c: 242: };keyboard.c: 243: };keyboard.c: 244: };keyboard.c: 247: hid_report_in
      +                          _k1[0] = modifier;
  1709  007BE0  C059  F67B         	movff	processKeyboard@modifier,1659	;volatile
  1710                           
  1711                           ;keyboard.c: 248: hid_report_in_k1[1] = 0;
  1712  007BE4  0E00               	movlw	0
  1713  007BE6  0106               	movlb	6	; () banked
  1714  007BE8  6F7C               	movwf	124,b	;volatile
  1715                           
  1716                           ; BSR set to: 6
  1717                           ;keyboard.c: 249: hid_report_in_k1[2] = keyArray[0];
  1718  007BEA  C04B  F67D         	movff	processKeyboard@keyArray,1661	;volatile
  1719                           
  1720                           ; BSR set to: 6
  1721                           ;keyboard.c: 250: hid_report_in_k1[3] = keyArray[1];
  1722  007BEE  C04D  F67E         	movff	processKeyboard@keyArray+2,1662	;volatile
  1723                           
  1724                           ; BSR set to: 6
  1725                           ;keyboard.c: 251: hid_report_in_k1[4] = keyArray[2];
  1726  007BF2  C04F  F67F         	movff	processKeyboard@keyArray+4,1663	;volatile
  1727                           
  1728                           ; BSR set to: 6
  1729                           ;keyboard.c: 252: hid_report_in_k1[5] = keyArray[3];
  1730  007BF6  C051  F680         	movff	processKeyboard@keyArray+6,1664	;volatile
  1731                           
  1732                           ; BSR set to: 6
  1733                           ;keyboard.c: 253: hid_report_in_k1[6] = keyArray[4];
  1734  007BFA  C053  F681         	movff	processKeyboard@keyArray+8,1665	;volatile
  1735                           
  1736                           ; BSR set to: 6
  1737                           ;keyboard.c: 254: hid_report_in_k1[7] = keyArray[5];
  1738  007BFE  C055  F682         	movff	processKeyboard@keyArray+10,1666	;volatile
  1739                           
  1740                           ; BSR set to: 6
  1741                           ;keyboard.c: 257: lastINTransmission_k1 = USBTransferOnePacket(3,1,(BYTE*)hid_report_in_
      +                          k1,0x08);
  1742  007C02  0E01               	movlw	1
  1743  007C04  6E42               	movwf	USBTransferOnePacket@dir,c
  1744  007C06  0E7B               	movlw	123
  1745  007C08  6E43               	movwf	USBTransferOnePacket@data,c
  1746  007C0A  0E06               	movlw	6
  1747  007C0C  6E44               	movwf	USBTransferOnePacket@data+1,c
  1748  007C0E  0E08               	movlw	8
  1749  007C10  6E45               	movwf	USBTransferOnePacket@len,c
  1750  007C12  0E03               	movlw	3
  1751  007C14  EC69  F037         	call	_USBTransferOnePacket
  1752  007C18  C042  F0D8         	movff	?_USBTransferOnePacket,_lastINTransmission_k1
  1753  007C1C  C043  F0D9         	movff	?_USBTransferOnePacket+1,_lastINTransmission_k1+1
  1754  007C20  0012               	return		;funcret
  1755  007C22                     __end_of_processKeyboard:
  1756                           	opt callstack 0
  1757                           
  1758 ;; *************** function _keyboardBlocking *****************
  1759 ;; Defined at:
  1760 ;;		line 125 in file "../keyboard.c"
  1761 ;; Parameters:    Size  Location     Type
  1762 ;;		None
  1763 ;; Auto vars:     Size  Location     Type
  1764 ;;  column          1    4[COMRAM] unsigned char 
  1765 ;;  currentKeyNu    1    3[COMRAM] unsigned char 
  1766 ;;  row             1    2[COMRAM] unsigned char 
  1767 ;;  adjacentRowC    1    1[COMRAM] unsigned char 
  1768 ;; Return value:  Size  Location     Type
  1769 ;;                  1    wreg      void 
  1770 ;; Registers used:
  1771 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1772 ;; Tracked objects:
  1773 ;;		On entry : 0/0
  1774 ;;		On exit  : 0/0
  1775 ;;		Unchanged: 0/0
  1776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  1777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  1778 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0
  1779 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0
  1780 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0
  1781 ;;Total ram usage:        5 bytes
  1782 ;; Hardware stack levels used:    1
  1783 ;; This function calls:
  1784 ;;		Nothing
  1785 ;; This function is called by:
  1786 ;;		_main
  1787 ;; This function uses a non-reentrant model
  1788 ;;
  1789                           
  1790                           	psect	text3
  1791  006C18                     __ptext3:
  1792                           	opt callstack 0
  1793  006C18                     _keyboardBlocking:
  1794                           	opt callstack 30
  1795                           
  1796                           ;keyboard.c: 137: unsigned char row;;keyboard.c: 138: unsigned char column;;keyboard.c: 
      +                          139: unsigned char currentKeyNumber;;keyboard.c: 140: unsigned char adjacentRowCount;;ke
      +                          yboard.c: 142: for (row = 0; row < 7; row++)
  1797                           
  1798                           ;incstack = 0
  1799  006C18  0E00               	movlw	0
  1800  006C1A  6E44               	movwf	keyboardBlocking@row,c
  1801  006C1C                     l4146:
  1802                           
  1803                           ;keyboard.c: 143: {;keyboard.c: 144: adjacentRowCount = 0;
  1804  006C1C  0E00               	movlw	0
  1805  006C1E  6E43               	movwf	keyboardBlocking@adjacentRowCount,c
  1806                           
  1807                           ;keyboard.c: 146: for (column = 0; column < 8; column++)
  1808  006C20  0E00               	movlw	0
  1809  006C22  6E46               	movwf	keyboardBlocking@column,c
  1810  006C24                     l4152:
  1811                           
  1812                           ;keyboard.c: 147: {;keyboard.c: 148: currentKeyNumber = (column * 8) + row;
  1813  006C24  5046               	movf	keyboardBlocking@column,w,c
  1814  006C26  0D08               	mullw	8
  1815  006C28  50F3               	movf	prodl,w,c
  1816  006C2A  2444               	addwf	keyboardBlocking@row,w,c
  1817  006C2C  6E45               	movwf	keyboardBlocking@currentKeyNumber,c
  1818                           
  1819                           ;keyboard.c: 149: if (rawKeyboardState[currentKeyNumber] == 1 && rawKeyboardState[curren
      +                          tKeyNumber + 1] == 1)
  1820  006C2E  0E60               	movlw	low _rawKeyboardState
  1821  006C30  2445               	addwf	keyboardBlocking@currentKeyNumber,w,c
  1822  006C32  6ED9               	movwf	fsr2l,c
  1823  006C34  6ADA               	clrf	fsr2h,c
  1824  006C36  0E00               	movlw	high _rawKeyboardState
  1825  006C38  22DA               	addwfc	fsr2h,f,c
  1826  006C3A  04DE               	decf	postinc2,w,c
  1827  006C3C  A4D8               	btfss	status,2,c
  1828  006C3E  D009               	goto	l873
  1829  006C40  0E61               	movlw	low (_rawKeyboardState+1)
  1830  006C42  2445               	addwf	keyboardBlocking@currentKeyNumber,w,c
  1831  006C44  6ED9               	movwf	fsr2l,c
  1832  006C46  6ADA               	clrf	fsr2h,c
  1833  006C48  0E00               	movlw	high (_rawKeyboardState+1)
  1834  006C4A  22DA               	addwfc	fsr2h,f,c
  1835  006C4C  04DE               	decf	postinc2,w,c
  1836  006C4E  B4D8               	btfsc	status,2,c
  1837                           
  1838                           ;keyboard.c: 150: adjacentRowCount++;
  1839  006C50  2A43               	incf	keyboardBlocking@adjacentRowCount,f,c
  1840  006C52                     l873:
  1841  006C52  2A46               	incf	keyboardBlocking@column,f,c
  1842  006C54  0E07               	movlw	7
  1843  006C56  6446               	cpfsgt	keyboardBlocking@column,c
  1844  006C58  D7E5               	goto	l4152
  1845                           
  1846                           ;keyboard.c: 151: };keyboard.c: 154: if (adjacentRowCount > 1)
  1847  006C5A  0E01               	movlw	1
  1848  006C5C  6443               	cpfsgt	keyboardBlocking@adjacentRowCount,c
  1849  006C5E  D01B               	goto	u3590
  1850                           
  1851                           ;keyboard.c: 155: {;keyboard.c: 156: for (column = 0; column < 8; column++)
  1852  006C60  0E00               	movlw	0
  1853  006C62  6E46               	movwf	keyboardBlocking@column,c
  1854  006C64                     l4170:
  1855                           
  1856                           ;keyboard.c: 157: {;keyboard.c: 158: currentKeyNumber = (column * 8) + row;
  1857  006C64  5046               	movf	keyboardBlocking@column,w,c
  1858  006C66  0D08               	mullw	8
  1859  006C68  50F3               	movf	prodl,w,c
  1860  006C6A  2444               	addwf	keyboardBlocking@row,w,c
  1861  006C6C  6E45               	movwf	keyboardBlocking@currentKeyNumber,c
  1862                           
  1863                           ;keyboard.c: 159: rawKeyboardState[currentKeyNumber] = 0;
  1864  006C6E  0E60               	movlw	low _rawKeyboardState
  1865  006C70  2445               	addwf	keyboardBlocking@currentKeyNumber,w,c
  1866  006C72  6ED9               	movwf	fsr2l,c
  1867  006C74  6ADA               	clrf	fsr2h,c
  1868  006C76  0E00               	movlw	high _rawKeyboardState
  1869  006C78  22DA               	addwfc	fsr2h,f,c
  1870  006C7A  0E00               	movlw	0
  1871  006C7C  6EDF               	movwf	indf2,c
  1872                           
  1873                           ;keyboard.c: 160: rawKeyboardState[currentKeyNumber + 1] = 0;
  1874  006C7E  0E61               	movlw	low (_rawKeyboardState+1)
  1875  006C80  2445               	addwf	keyboardBlocking@currentKeyNumber,w,c
  1876  006C82  6ED9               	movwf	fsr2l,c
  1877  006C84  6ADA               	clrf	fsr2h,c
  1878  006C86  0E00               	movlw	high (_rawKeyboardState+1)
  1879  006C88  22DA               	addwfc	fsr2h,f,c
  1880  006C8A  0E00               	movlw	0
  1881  006C8C  6EDF               	movwf	indf2,c
  1882  006C8E  2A46               	incf	keyboardBlocking@column,f,c
  1883  006C90  0E07               	movlw	7
  1884  006C92  6446               	cpfsgt	keyboardBlocking@column,c
  1885  006C94  D7E7               	goto	l4170
  1886  006C96                     u3590:
  1887  006C96  2A44               	incf	keyboardBlocking@row,f,c
  1888  006C98  0E06               	movlw	6
  1889  006C9A  6444               	cpfsgt	keyboardBlocking@row,c
  1890  006C9C  D7BF               	goto	l4146
  1891  006C9E  0012               	return	
  1892  006CA0                     __end_of_keyboardBlocking:
  1893                           	opt callstack 0
  1894                           
  1895 ;; *************** function _initialise *****************
  1896 ;; Defined at:
  1897 ;;		line 61 in file "../main.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;		None
  1900 ;; Auto vars:     Size  Location     Type
  1901 ;;		None
  1902 ;; Return value:  Size  Location     Type
  1903 ;;                  1    wreg      void 
  1904 ;; Registers used:
  1905 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1906 ;; Tracked objects:
  1907 ;;		On entry : 0/0
  1908 ;;		On exit  : 0/0
  1909 ;;		Unchanged: 0/0
  1910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  1911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  1912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0
  1913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  1914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0
  1915 ;;Total ram usage:        0 bytes
  1916 ;; Hardware stack levels used:    1
  1917 ;; Hardware stack levels required when called:    1
  1918 ;; This function calls:
  1919 ;;		_initialiseKeyboard
  1920 ;; This function is called by:
  1921 ;;		_main
  1922 ;; This function uses a non-reentrant model
  1923 ;;
  1924                           
  1925                           	psect	text4
  1926  006800                     __ptext4:
  1927                           	opt callstack 0
  1928  006800                     _initialise:
  1929                           	opt callstack 29
  1930                           
  1931                           ;main.c: 64: initialiseKeyboard();
  1932                           
  1933                           ;incstack = 0
  1934  006800  EC35  F035         	call	_initialiseKeyboard	;wreg free
  1935  006804  0012               	return		;funcret
  1936  006806                     __end_of_initialise:
  1937                           	opt callstack 0
  1938                           
  1939 ;; *************** function _initialiseKeyboard *****************
  1940 ;; Defined at:
  1941 ;;		line 54 in file "../keyboard.c"
  1942 ;; Parameters:    Size  Location     Type
  1943 ;;		None
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;  key             1    0[COMRAM] unsigned char 
  1946 ;; Return value:  Size  Location     Type
  1947 ;;                  1    wreg      void 
  1948 ;; Registers used:
  1949 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1950 ;; Tracked objects:
  1951 ;;		On entry : 0/0
  1952 ;;		On exit  : 0/0
  1953 ;;		Unchanged: 0/0
  1954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  1955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  1956 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0
  1957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  1958 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0
  1959 ;;Total ram usage:        1 bytes
  1960 ;; Hardware stack levels used:    1
  1961 ;; This function calls:
  1962 ;;		Nothing
  1963 ;; This function is called by:
  1964 ;;		_initialise
  1965 ;; This function uses a non-reentrant model
  1966 ;;
  1967                           
  1968                           	psect	text5
  1969  006A6A                     __ptext5:
  1970                           	opt callstack 0
  1971  006A6A                     _initialiseKeyboard:
  1972                           	opt callstack 29
  1973                           
  1974                           ;keyboard.c: 56: unsigned char key;;keyboard.c: 59: for (key = 0; key < 65; key++)
  1975                           
  1976                           ;incstack = 0
  1977  006A6A  0E00               	movlw	0
  1978  006A6C  6E42               	movwf	initialiseKeyboard@key,c
  1979  006A6E                     l3924:
  1980                           
  1981                           ;keyboard.c: 60: {;keyboard.c: 61: keyboard[key].state = 0;
  1982  006A6E  5042               	movf	initialiseKeyboard@key,w,c
  1983  006A70  0D02               	mullw	2
  1984  006A72  0E00               	movlw	low _keyboard
  1985  006A74  24F3               	addwf	prodl,w,c
  1986  006A76  6ED9               	movwf	fsr2l,c
  1987  006A78  0E01               	movlw	high _keyboard
  1988  006A7A  20F4               	addwfc	prodh,w,c
  1989  006A7C  6EDA               	movwf	fsr2h,c
  1990  006A7E  0E00               	movlw	0
  1991  006A80  6EDF               	movwf	indf2,c
  1992                           
  1993                           ;keyboard.c: 62: keyboard[key].debounceCount = 0;
  1994  006A82  5042               	movf	initialiseKeyboard@key,w,c
  1995  006A84  0D02               	mullw	2
  1996  006A86  0E01               	movlw	low (_keyboard+1)
  1997  006A88  24F3               	addwf	prodl,w,c
  1998  006A8A  6ED9               	movwf	fsr2l,c
  1999  006A8C  0E01               	movlw	high (_keyboard+1)
  2000  006A8E  20F4               	addwfc	prodh,w,c
  2001  006A90  6EDA               	movwf	fsr2h,c
  2002  006A92  0E00               	movlw	0
  2003  006A94  6EDF               	movwf	indf2,c
  2004                           
  2005                           ;keyboard.c: 64: rawKeyboardState[key] = 0;
  2006  006A96  0E60               	movlw	low _rawKeyboardState
  2007  006A98  2442               	addwf	initialiseKeyboard@key,w,c
  2008  006A9A  6ED9               	movwf	fsr2l,c
  2009  006A9C  6ADA               	clrf	fsr2h,c
  2010  006A9E  0E00               	movlw	high _rawKeyboardState
  2011  006AA0  22DA               	addwfc	fsr2h,f,c
  2012  006AA2  0E00               	movlw	0
  2013  006AA4  6EDF               	movwf	indf2,c
  2014  006AA6  2A42               	incf	initialiseKeyboard@key,f,c
  2015  006AA8  0E40               	movlw	64
  2016  006AAA  6442               	cpfsgt	initialiseKeyboard@key,c
  2017  006AAC  D7E0               	goto	l3924
  2018                           
  2019                           ;keyboard.c: 65: };keyboard.c: 68: lastINTransmission_k1 = 0;
  2020  006AAE  0E00               	movlw	0
  2021  006AB0  0100               	movlb	0	; () banked
  2022  006AB2  6FD8               	movwf	_lastINTransmission_k1& (0+255),b
  2023  006AB4  0E00               	movlw	0
  2024  006AB6  6FD9               	movwf	(_lastINTransmission_k1+1)& (0+255),b
  2025                           
  2026                           ;keyboard.c: 69: lastOUTTransmission_k1 = 0;
  2027  006AB8  0E00               	movlw	0
  2028  006ABA  6FD6               	movwf	_lastOUTTransmission_k1& (0+255),b
  2029  006ABC  0E00               	movlw	0
  2030  006ABE  6FD7               	movwf	(_lastOUTTransmission_k1+1)& (0+255),b
  2031                           
  2032                           ; BSR set to: 0
  2033  006AC0  0012               	return		;funcret
  2034  006AC2                     __end_of_initialiseKeyboard:
  2035                           	opt callstack 0
  2036                           
  2037 ;; *************** function _debounceKeyboard *****************
  2038 ;; Defined at:
  2039 ;;		line 167 in file "../keyboard.c"
  2040 ;; Parameters:    Size  Location     Type
  2041 ;;		None
  2042 ;; Auto vars:     Size  Location     Type
  2043 ;;  currentKeyNu    1    2[COMRAM] unsigned char 
  2044 ;; Return value:  Size  Location     Type
  2045 ;;                  1    wreg      void 
  2046 ;; Registers used:
  2047 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2048 ;; Tracked objects:
  2049 ;;		On entry : 0/0
  2050 ;;		On exit  : 0/0
  2051 ;;		Unchanged: 0/0
  2052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  2053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  2054 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0
  2055 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0
  2056 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0
  2057 ;;Total ram usage:        3 bytes
  2058 ;; Hardware stack levels used:    1
  2059 ;; This function calls:
  2060 ;;		Nothing
  2061 ;; This function is called by:
  2062 ;;		_main
  2063 ;; This function uses a non-reentrant model
  2064 ;;
  2065                           
  2066                           	psect	text6
  2067  00773A                     __ptext6:
  2068                           	opt callstack 0
  2069  00773A                     _debounceKeyboard:
  2070                           	opt callstack 30
  2071                           
  2072                           ;keyboard.c: 169: unsigned char currentKeyNumber;;keyboard.c: 171: for (currentKeyNumber
      +                           = 0; currentKeyNumber < 65; currentKeyNumber++)
  2073                           
  2074                           ; BSR set to: 0
  2075                           ;incstack = 0
  2076  00773A  0E00               	movlw	0
  2077  00773C  6E44               	movwf	debounceKeyboard@currentKeyNumber,c
  2078  00773E                     l4190:
  2079                           
  2080                           ;keyboard.c: 172: {;keyboard.c: 174: if (rawKeyboardState[currentKeyNumber]== 1 && keybo
      +                          ard[currentKeyNumber].state == 0)
  2081  00773E  0E60               	movlw	low _rawKeyboardState
  2082  007740  2444               	addwf	debounceKeyboard@currentKeyNumber,w,c
  2083  007742  6ED9               	movwf	fsr2l,c
  2084  007744  6ADA               	clrf	fsr2h,c
  2085  007746  0E00               	movlw	high _rawKeyboardState
  2086  007748  22DA               	addwfc	fsr2h,f,c
  2087  00774A  04DE               	decf	postinc2,w,c
  2088  00774C  A4D8               	btfss	status,2,c
  2089  00774E  D02A               	goto	l4200
  2090  007750  5044               	movf	debounceKeyboard@currentKeyNumber,w,c
  2091  007752  0D02               	mullw	2
  2092  007754  0E00               	movlw	low _keyboard
  2093  007756  24F3               	addwf	prodl,w,c
  2094  007758  6ED9               	movwf	fsr2l,c
  2095  00775A  0E01               	movlw	high _keyboard
  2096  00775C  20F4               	addwfc	prodh,w,c
  2097  00775E  6EDA               	movwf	fsr2h,c
  2098  007760  50DF               	movf	indf2,w,c
  2099  007762  A4D8               	btfss	status,2,c
  2100  007764  D01F               	goto	l4200
  2101                           
  2102                           ;keyboard.c: 175: if (keyboard[currentKeyNumber].debounceCount > 5)
  2103  007766  5044               	movf	debounceKeyboard@currentKeyNumber,w,c
  2104  007768  0D02               	mullw	2
  2105  00776A  0E01               	movlw	low (_keyboard+1)
  2106  00776C  24F3               	addwf	prodl,w,c
  2107  00776E  6ED9               	movwf	fsr2l,c
  2108  007770  0E01               	movlw	high (_keyboard+1)
  2109  007772  20F4               	addwfc	prodh,w,c
  2110  007774  6EDA               	movwf	fsr2h,c
  2111  007776  0E05               	movlw	5
  2112  007778  64DF               	cpfsgt	indf2,c
  2113  00777A  D00B               	goto	l4198
  2114                           
  2115                           ;keyboard.c: 176: keyboard[currentKeyNumber].state = 1;
  2116  00777C  5044               	movf	debounceKeyboard@currentKeyNumber,w,c
  2117  00777E  0D02               	mullw	2
  2118  007780  0E00               	movlw	low _keyboard
  2119  007782  24F3               	addwf	prodl,w,c
  2120  007784  6ED9               	movwf	fsr2l,c
  2121  007786  0E01               	movlw	high _keyboard
  2122  007788  20F4               	addwfc	prodh,w,c
  2123  00778A  6EDA               	movwf	fsr2h,c
  2124  00778C  0E01               	movlw	1
  2125  00778E  6EDF               	movwf	indf2,c
  2126  007790  D009               	goto	l4200
  2127  007792                     l4198:
  2128                           
  2129                           ;keyboard.c: 177: else keyboard[currentKeyNumber].debounceCount++;
  2130  007792  5044               	movf	debounceKeyboard@currentKeyNumber,w,c
  2131  007794  0D02               	mullw	2
  2132  007796  0E01               	movlw	low (_keyboard+1)
  2133  007798  24F3               	addwf	prodl,w,c
  2134  00779A  6ED9               	movwf	fsr2l,c
  2135  00779C  0E01               	movlw	high (_keyboard+1)
  2136  00779E  20F4               	addwfc	prodh,w,c
  2137  0077A0  6EDA               	movwf	fsr2h,c
  2138  0077A2  2ADF               	incf	indf2,f,c
  2139  0077A4                     l4200:
  2140                           
  2141                           ;keyboard.c: 180: if (rawKeyboardState[currentKeyNumber] == 0 && keyboard[currentKeyNumb
      +                          er].state == 1)
  2142  0077A4  0E60               	movlw	low _rawKeyboardState
  2143  0077A6  2444               	addwf	debounceKeyboard@currentKeyNumber,w,c
  2144  0077A8  6ED9               	movwf	fsr2l,c
  2145  0077AA  6ADA               	clrf	fsr2h,c
  2146  0077AC  0E00               	movlw	high _rawKeyboardState
  2147  0077AE  22DA               	addwfc	fsr2h,f,c
  2148  0077B0  50DF               	movf	indf2,w,c
  2149  0077B2  A4D8               	btfss	status,2,c
  2150  0077B4  D02A               	goto	l4210
  2151  0077B6  5044               	movf	debounceKeyboard@currentKeyNumber,w,c
  2152  0077B8  0D02               	mullw	2
  2153  0077BA  0E00               	movlw	low _keyboard
  2154  0077BC  24F3               	addwf	prodl,w,c
  2155  0077BE  6ED9               	movwf	fsr2l,c
  2156  0077C0  0E01               	movlw	high _keyboard
  2157  0077C2  20F4               	addwfc	prodh,w,c
  2158  0077C4  6EDA               	movwf	fsr2h,c
  2159  0077C6  04DE               	decf	postinc2,w,c
  2160  0077C8  A4D8               	btfss	status,2,c
  2161  0077CA  D01F               	goto	l4210
  2162                           
  2163                           ;keyboard.c: 181: if (keyboard[currentKeyNumber].debounceCount > 5)
  2164  0077CC  5044               	movf	debounceKeyboard@currentKeyNumber,w,c
  2165  0077CE  0D02               	mullw	2
  2166  0077D0  0E01               	movlw	low (_keyboard+1)
  2167  0077D2  24F3               	addwf	prodl,w,c
  2168  0077D4  6ED9               	movwf	fsr2l,c
  2169  0077D6  0E01               	movlw	high (_keyboard+1)
  2170  0077D8  20F4               	addwfc	prodh,w,c
  2171  0077DA  6EDA               	movwf	fsr2h,c
  2172  0077DC  0E05               	movlw	5
  2173  0077DE  64DF               	cpfsgt	indf2,c
  2174  0077E0  D00B               	goto	l4208
  2175                           
  2176                           ;keyboard.c: 182: keyboard[currentKeyNumber].state = 0;
  2177  0077E2  5044               	movf	debounceKeyboard@currentKeyNumber,w,c
  2178  0077E4  0D02               	mullw	2
  2179  0077E6  0E00               	movlw	low _keyboard
  2180  0077E8  24F3               	addwf	prodl,w,c
  2181  0077EA  6ED9               	movwf	fsr2l,c
  2182  0077EC  0E01               	movlw	high _keyboard
  2183  0077EE  20F4               	addwfc	prodh,w,c
  2184  0077F0  6EDA               	movwf	fsr2h,c
  2185  0077F2  0E00               	movlw	0
  2186  0077F4  6EDF               	movwf	indf2,c
  2187  0077F6  D009               	goto	l4210
  2188  0077F8                     l4208:
  2189                           
  2190                           ;keyboard.c: 183: else keyboard[currentKeyNumber].debounceCount++;
  2191  0077F8  5044               	movf	debounceKeyboard@currentKeyNumber,w,c
  2192  0077FA  0D02               	mullw	2
  2193  0077FC  0E01               	movlw	low (_keyboard+1)
  2194  0077FE  24F3               	addwf	prodl,w,c
  2195  007800  6ED9               	movwf	fsr2l,c
  2196  007802  0E01               	movlw	high (_keyboard+1)
  2197  007804  20F4               	addwfc	prodh,w,c
  2198  007806  6EDA               	movwf	fsr2h,c
  2199  007808  2ADF               	incf	indf2,f,c
  2200  00780A                     l4210:
  2201                           
  2202                           ;keyboard.c: 186: if (rawKeyboardState[currentKeyNumber] == keyboard[currentKeyNumber].s
      +                          tate)
  2203  00780A  0E60               	movlw	low _rawKeyboardState
  2204  00780C  2444               	addwf	debounceKeyboard@currentKeyNumber,w,c
  2205  00780E  6ED9               	movwf	fsr2l,c
  2206  007810  6ADA               	clrf	fsr2h,c
  2207  007812  0E00               	movlw	high _rawKeyboardState
  2208  007814  22DA               	addwfc	fsr2h,f,c
  2209  007816  5044               	movf	debounceKeyboard@currentKeyNumber,w,c
  2210  007818  0D02               	mullw	2
  2211  00781A  0E00               	movlw	low _keyboard
  2212  00781C  24F3               	addwf	prodl,w,c
  2213  00781E  6EE1               	movwf	fsr1l,c
  2214  007820  0E01               	movlw	high _keyboard
  2215  007822  20F4               	addwfc	prodh,w,c
  2216  007824  6EE2               	movwf	fsr1h,c
  2217  007826  50DE               	movf	postinc2,w,c
  2218  007828  18E6               	xorwf	postinc1,w,c
  2219  00782A  A4D8               	btfss	status,2,c
  2220  00782C  D00A               	goto	l4214
  2221                           
  2222                           ;keyboard.c: 187: keyboard[currentKeyNumber].debounceCount = 0;
  2223  00782E  5044               	movf	debounceKeyboard@currentKeyNumber,w,c
  2224  007830  0D02               	mullw	2
  2225  007832  0E01               	movlw	low (_keyboard+1)
  2226  007834  24F3               	addwf	prodl,w,c
  2227  007836  6ED9               	movwf	fsr2l,c
  2228  007838  0E01               	movlw	high (_keyboard+1)
  2229  00783A  20F4               	addwfc	prodh,w,c
  2230  00783C  6EDA               	movwf	fsr2h,c
  2231  00783E  0E00               	movlw	0
  2232  007840  6EDF               	movwf	indf2,c
  2233  007842                     l4214:
  2234  007842  2A44               	incf	debounceKeyboard@currentKeyNumber,f,c
  2235  007844  0E40               	movlw	64
  2236  007846  6444               	cpfsgt	debounceKeyboard@currentKeyNumber,c
  2237  007848  D77A               	goto	l4190
  2238  00784A  0012               	return	
  2239  00784C                     __end_of_debounceKeyboard:
  2240                           	opt callstack 0
  2241                           
  2242 ;; *************** function _USBDeviceTasks *****************
  2243 ;; Defined at:
  2244 ;;		line 781 in file "../USB Stack/usb_device.c"
  2245 ;; Parameters:    Size  Location     Type
  2246 ;;		None
  2247 ;; Auto vars:     Size  Location     Type
  2248 ;;  i               1   23[COMRAM] unsigned char 
  2249 ;; Return value:  Size  Location     Type
  2250 ;;                  1    wreg      void 
  2251 ;; Registers used:
  2252 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2253 ;; Tracked objects:
  2254 ;;		On entry : 0/0
  2255 ;;		On exit  : 0/0
  2256 ;;		Unchanged: 0/0
  2257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  2258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  2259 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0
  2260 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0
  2261 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0
  2262 ;;Total ram usage:        2 bytes
  2263 ;; Hardware stack levels used:    1
  2264 ;; Hardware stack levels required when called:    8
  2265 ;; This function calls:
  2266 ;;		_USBCtrlEPService
  2267 ;;		_USBDeviceInit
  2268 ;;		_USBStallHandler
  2269 ;;		_USBSuspend
  2270 ;;		_USBWakeFromSuspend
  2271 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  2272 ;; This function is called by:
  2273 ;;		_main
  2274 ;; This function uses a non-reentrant model
  2275 ;;
  2276                           
  2277                           	psect	text7
  2278  00784C                     __ptext7:
  2279                           	opt callstack 0
  2280  00784C                     _USBDeviceTasks:
  2281                           	opt callstack 22
  2282                           
  2283                           ;usb_device.c: 849: };usb_device.c: 871: if(USBDeviceState == DETACHED_STATE)
  2284                           
  2285                           ;usb_device.c: 784: BYTE i;;usb_device.c: 810: if (1 != 1)
  2286                           
  2287                           ;incstack = 0
  2288  00784C  5038               	movf	_USBDeviceState,w,c
  2289  00784E  A4D8               	btfss	status,2,c
  2290  007850  D010               	goto	l3948
  2291                           
  2292                           ;usb_device.c: 872: {;usb_device.c: 874: UCON = 0;
  2293  007852  0E00               	movlw	0
  2294  007854  6E6D               	movwf	3949,c	;volatile
  2295                           
  2296                           ;usb_device.c: 877: UIE = 0;
  2297  007856  0E00               	movlw	0
  2298  007858  6E69               	movwf	3945,c	;volatile
  2299                           
  2300                           ;usb_device.c: 881: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  2301  00785A  0E16               	movlw	22
  2302  00785C  6E6F               	movwf	3951,c	;volatile
  2303  00785E  0E9F               	movlw	159
  2304  007860  6E6B               	movwf	3947,c	;volatile
  2305  007862  0E7B               	movlw	123
  2306  007864  6E69               	movwf	3945,c	;volatile
  2307                           
  2308                           ;usb_device.c: 884: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  2309  007866  D001               	goto	l242
  2310  007868                     l243:
  2311  007868  866D               	bsf	3949,3,c	;volatile
  2312  00786A                     l242:
  2313  00786A  A66D               	btfss	3949,3,c	;volatile
  2314  00786C  D7FD               	goto	l243
  2315                           
  2316                           ;usb_device.c: 887: USBDeviceState = ATTACHED_STATE;
  2317  00786E  0E01               	movlw	1
  2318  007870  6E38               	movwf	_USBDeviceState,c
  2319  007872                     l3948:
  2320                           
  2321                           ;usb_device.c: 892: };usb_device.c: 895: if(USBDeviceState == ATTACHED_STATE)
  2322  007872  0438               	decf	_USBDeviceState,w,c
  2323  007874  B4D8               	btfsc	status,2,c
  2324                           
  2325                           ;usb_device.c: 896: {;usb_device.c: 906: if(!SE0)
  2326  007876  BA6D               	btfsc	3949,5,c	;volatile
  2327  007878  D008               	goto	l3958
  2328                           
  2329                           ;usb_device.c: 907: {;usb_device.c: 908: UIR = 0;;
  2330  00787A  0E00               	movlw	0
  2331  00787C  6E68               	movwf	3944,c	;volatile
  2332                           
  2333                           ;usb_device.c: 910: UIE=0;
  2334  00787E  0E00               	movlw	0
  2335  007880  6E69               	movwf	3945,c	;volatile
  2336                           
  2337                           ;usb_device.c: 912: UIEbits.URSTIE = 1;
  2338  007882  8069               	bsf	3945,0,c	;volatile
  2339                           
  2340                           ;usb_device.c: 913: UIEbits.IDLEIE = 1;
  2341  007884  8869               	bsf	3945,4,c	;volatile
  2342                           
  2343                           ;usb_device.c: 914: USBDeviceState = POWERED_STATE;
  2344  007886  0E02               	movlw	2
  2345  007888  6E38               	movwf	_USBDeviceState,c
  2346  00788A                     l3958:
  2347                           
  2348                           ;usb_device.c: 915: };usb_device.c: 916: };usb_device.c: 932: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
  2349  00788A  B468               	btfsc	3944,2,c	;volatile
  2350  00788C  A469               	btfss	3945,2,c	;volatile
  2351  00788E  D003               	goto	l3966
  2352                           
  2353                           ;usb_device.c: 933: {;usb_device.c: 934: (UIR &= 0xFB);
  2354  007890  9468               	bcf	3944,2,c	;volatile
  2355                           
  2356                           ;usb_device.c: 938: USBWakeFromSuspend();
  2357  007892  EC15  F034         	call	_USBWakeFromSuspend	;wreg free
  2358  007896                     l3966:
  2359                           
  2360                           ;usb_device.c: 940: };usb_device.c: 945: if(SUSPND==1)
  2361  007896  A26D               	btfss	3949,1,c	;volatile
  2362  007898  D002               	goto	l248
  2363                           
  2364                           ;usb_device.c: 946: {;usb_device.c: 947: PIR2bits.USBIF = 0;;
  2365  00789A  9AA1               	bcf	4001,5,c	;volatile
  2366                           
  2367                           ;usb_device.c: 948: return;
  2368  00789C  0012               	return	
  2369  00789E                     l248:
  2370                           
  2371                           ;usb_device.c: 949: };usb_device.c: 961: if(UIRbits.URSTIF && UIEbits.URSTIE)
  2372  00789E  B068               	btfsc	3944,0,c	;volatile
  2373  0078A0  A069               	btfss	3945,0,c	;volatile
  2374  0078A2  D010               	goto	l3986
  2375                           
  2376                           ;usb_device.c: 962: {;usb_device.c: 963: USBDeviceInit();
  2377  0078A4  ECDA  F036         	call	_USBDeviceInit	;wreg free
  2378                           
  2379                           ;usb_device.c: 964: USBDeviceState = DEFAULT_STATE;
  2380  0078A8  0E04               	movlw	4
  2381  0078AA  6E38               	movwf	_USBDeviceState,c
  2382                           
  2383                           ;usb_device.c: 976: BDT[0].ADR = (BYTE*)&SetupPkt;
  2384  0078AC  0E00               	movlw	0
  2385  0078AE  0104               	movlb	4	; () banked
  2386  0078B0  6F02               	movwf	2,b	;volatile
  2387  0078B2  0E05               	movlw	5
  2388  0078B4  6F03               	movwf	3,b	;volatile
  2389                           
  2390                           ; BSR set to: 4
  2391                           ;usb_device.c: 977: BDT[0].CNT = 8;
  2392  0078B6  0E08               	movlw	8
  2393  0078B8  6F01               	movwf	1,b	;volatile
  2394                           
  2395                           ; BSR set to: 4
  2396                           ;usb_device.c: 978: BDT[0].STAT.Val &= ~0xFF;
  2397  0078BA  0E00               	movlw	0
  2398  0078BC  6F00               	movwf	0,b	;volatile
  2399                           
  2400                           ; BSR set to: 4
  2401                           ;usb_device.c: 979: BDT[0].STAT.Val |= 0x80|0x00|0x08|0x04;
  2402  0078BE  0E8C               	movlw	140
  2403  0078C0  1300               	iorwf	0,f,b	;volatile
  2404                           
  2405                           ; BSR set to: 4
  2406                           ;usb_device.c: 989: (UIR &= 0xFE);
  2407  0078C2  9068               	bcf	3944,0,c	;volatile
  2408  0078C4                     l3986:
  2409                           
  2410                           ;usb_device.c: 990: };usb_device.c: 995: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  2411  0078C4  B868               	btfsc	3944,4,c	;volatile
  2412  0078C6  A869               	btfss	3945,4,c	;volatile
  2413  0078C8  D003               	goto	l3994
  2414                           
  2415                           ;usb_device.c: 996: {;usb_device.c: 1001: USBSuspend();
  2416  0078CA  EC03  F034         	call	_USBSuspend	;wreg free
  2417                           
  2418                           ;usb_device.c: 1004: (UIR &= 0xEF);
  2419  0078CE  9868               	bcf	3944,4,c	;volatile
  2420  0078D0                     l3994:
  2421                           
  2422                           ;usb_device.c: 1005: };usb_device.c: 1007: if(UIRbits.SOFIF && UIEbits.SOFIE)
  2423  0078D0  BC68               	btfsc	3944,6,c	;volatile
  2424  0078D2  AC69               	btfss	3945,6,c	;volatile
  2425  0078D4  D00F               	goto	l4002
  2426                           
  2427                           ;usb_device.c: 1008: {;usb_device.c: 1009: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1
      +                          );
  2428  0078D6  0E00               	movlw	0
  2429  0078D8  6E4E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  2430  0078DA  0E73               	movlw	115
  2431  0078DC  6E4D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  2432  0078DE  0E00               	movlw	0
  2433  0078E0  6E4F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  2434  0078E2  0E00               	movlw	0
  2435  0078E4  6E50               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  2436  0078E6  0E00               	movlw	0
  2437  0078E8  6E52               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  2438  0078EA  0E01               	movlw	1
  2439  0078EC  6E51               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  2440  0078EE  ECCC  F035         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  2441                           
  2442                           ;usb_device.c: 1010: (UIR &= 0xBF);
  2443  0078F2  9C68               	bcf	3944,6,c	;volatile
  2444  0078F4                     l4002:
  2445                           
  2446                           ;usb_device.c: 1011: };usb_device.c: 1013: if(UIRbits.STALLIF && UIEbits.STALLIE)
  2447  0078F4  BA68               	btfsc	3944,5,c	;volatile
  2448  0078F6  AA69               	btfss	3945,5,c	;volatile
  2449  0078F8  D002               	goto	l4008
  2450                           
  2451                           ;usb_device.c: 1014: {;usb_device.c: 1015: USBStallHandler();
  2452  0078FA  EC6F  F034         	call	_USBStallHandler	;wreg free
  2453  0078FE                     l4008:
  2454                           
  2455                           ;usb_device.c: 1016: };usb_device.c: 1018: if(UIRbits.UERRIF && UIEbits.UERRIE)
  2456  0078FE  B268               	btfsc	3944,1,c	;volatile
  2457  007900  A269               	btfss	3945,1,c	;volatile
  2458  007902  D00F               	goto	l4016
  2459                           
  2460                           ;usb_device.c: 1019: {;usb_device.c: 1020: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERR
      +                          OR,0,1);
  2461  007904  0E7F               	movlw	127
  2462  007906  6E4E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  2463  007908  684D               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  2464  00790A  0E00               	movlw	0
  2465  00790C  6E4F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  2466  00790E  0E00               	movlw	0
  2467  007910  6E50               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  2468  007912  0E00               	movlw	0
  2469  007914  6E52               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  2470  007916  0E01               	movlw	1
  2471  007918  6E51               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  2472  00791A  ECCC  F035         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  2473                           
  2474                           ;usb_device.c: 1021: UEIR = 0;;
  2475  00791E  0E00               	movlw	0
  2476  007920  6E6A               	movwf	3946,c	;volatile
  2477  007922                     l4016:
  2478                           
  2479                           ;usb_device.c: 1022: };usb_device.c: 1029: if(USBDeviceState < DEFAULT_STATE)
  2480  007922  0E04               	movlw	4
  2481  007924  6038               	cpfslt	_USBDeviceState,c
  2482  007926  D002               	goto	l254
  2483                           
  2484                           ;usb_device.c: 1030: {;usb_device.c: 1031: PIR2bits.USBIF = 0;;
  2485  007928  9AA1               	bcf	4001,5,c	;volatile
  2486                           
  2487                           ;usb_device.c: 1032: return;
  2488  00792A  0012               	return	
  2489  00792C                     l254:
  2490                           
  2491                           ;usb_device.c: 1033: };usb_device.c: 1038: if(UIEbits.TRNIE)
  2492  00792C  A669               	btfss	3945,3,c	;volatile
  2493  00792E  D022               	goto	u3340
  2494                           
  2495                           ;usb_device.c: 1039: {;usb_device.c: 1040: for(i = 0; i < 4; i++)
  2496  007930  0E00               	movlw	0
  2497  007932  6E59               	movwf	USBDeviceTasks@i,c
  2498  007934                     l256:
  2499                           
  2500                           ;usb_device.c: 1041: {;usb_device.c: 1042: if(UIRbits.TRNIF)
  2501  007934  A668               	btfss	3944,3,c	;volatile
  2502  007936  D01E               	goto	u3340
  2503                           
  2504                           ;usb_device.c: 1043: {;usb_device.c: 1044: USTATcopy = USTAT;
  2505  007938  CF6C F03B          	movff	3948,_USTATcopy	;volatile
  2506                           
  2507                           ;usb_device.c: 1046: (UIR &= 0xF7);
  2508  00793C  9668               	bcf	3944,3,c	;volatile
  2509                           
  2510                           ;usb_device.c: 1053: if((USTATcopy & 0b01111000) == 0)
  2511  00793E  C03B  F058         	movff	_USTATcopy,??_USBDeviceTasks
  2512  007942  0E78               	movlw	120
  2513  007944  1658               	andwf	??_USBDeviceTasks,f,c
  2514  007946  A4D8               	btfss	status,2,c
  2515  007948  D003               	goto	l4034
  2516                           
  2517                           ;usb_device.c: 1054: {;usb_device.c: 1055: USBCtrlEPService();
  2518  00794A  ECB7  F037         	call	_USBCtrlEPService	;wreg free
  2519                           
  2520                           ;usb_device.c: 1056: }
  2521  00794E  D00E               	goto	l4036
  2522  007950                     l4034:
  2523                           
  2524                           ;usb_device.c: 1057: else;usb_device.c: 1058: {;usb_device.c: 1059: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER(EVENT_TRANSFER,(BYTE*)&USTATcopy,0);
  2525  007950  0E00               	movlw	0
  2526  007952  6E4E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  2527  007954  0E72               	movlw	114
  2528  007956  6E4D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  2529  007958  0E3B               	movlw	low _USTATcopy
  2530  00795A  6E4F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  2531  00795C  0E00               	movlw	high _USTATcopy
  2532  00795E  6E50               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  2533  007960  0E00               	movlw	0
  2534  007962  6E52               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  2535  007964  0E00               	movlw	0
  2536  007966  6E51               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  2537  007968  ECCC  F035         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  2538  00796C                     l4036:
  2539  00796C  2A59               	incf	USBDeviceTasks@i,f,c
  2540  00796E  0E03               	movlw	3
  2541  007970  6459               	cpfsgt	USBDeviceTasks@i,c
  2542  007972  D7E0               	goto	l256
  2543  007974                     u3340:
  2544                           
  2545                           ;usb_device.c: 1067: };usb_device.c: 1068: };usb_device.c: 1070: PIR2bits.USBIF = 0;;
  2546  007974  9AA1               	bcf	4001,5,c	;volatile
  2547  007976  0012               	return		;funcret
  2548  007978                     __end_of_USBDeviceTasks:
  2549                           	opt callstack 0
  2550                           
  2551 ;; *************** function _USBWakeFromSuspend *****************
  2552 ;; Defined at:
  2553 ;;		line 1189 in file "../USB Stack/usb_device.c"
  2554 ;; Parameters:    Size  Location     Type
  2555 ;;		None
  2556 ;; Auto vars:     Size  Location     Type
  2557 ;;		None
  2558 ;; Return value:  Size  Location     Type
  2559 ;;                  1    wreg      void 
  2560 ;; Registers used:
  2561 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2562 ;; Tracked objects:
  2563 ;;		On entry : 0/0
  2564 ;;		On exit  : 0/0
  2565 ;;		Unchanged: 0/0
  2566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  2567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  2568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0
  2569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  2570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0
  2571 ;;Total ram usage:        0 bytes
  2572 ;; Hardware stack levels used:    1
  2573 ;; Hardware stack levels required when called:    4
  2574 ;; This function calls:
  2575 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  2576 ;; This function is called by:
  2577 ;;		_USBDeviceTasks
  2578 ;; This function uses a non-reentrant model
  2579 ;;
  2580                           
  2581                           	psect	text8
  2582  00682A                     __ptext8:
  2583                           	opt callstack 0
  2584  00682A                     _USBWakeFromSuspend:
  2585                           	opt callstack 25
  2586                           
  2587                           ;usb_device.c: 1195: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  2588                           
  2589                           ;incstack = 0
  2590  00682A  0E00               	movlw	0
  2591  00682C  6E4E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  2592  00682E  0E74               	movlw	116
  2593  006830  6E4D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  2594  006832  0E00               	movlw	0
  2595  006834  6E4F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  2596  006836  0E00               	movlw	0
  2597  006838  6E50               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  2598  00683A  0E00               	movlw	0
  2599  00683C  6E52               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  2600  00683E  0E00               	movlw	0
  2601  006840  6E51               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  2602  006842  ECCC  F035         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  2603                           
  2604                           ;usb_device.c: 1202: UCONbits.SUSPND = 0;
  2605  006846  926D               	bcf	3949,1,c	;volatile
  2606                           
  2607                           ;usb_device.c: 1207: UIEbits.ACTVIE = 0;
  2608  006848  9469               	bcf	3945,2,c	;volatile
  2609                           
  2610                           ;usb_device.c: 1225: while(UIRbits.ACTVIF)
  2611  00684A  D001               	goto	l3874
  2612  00684C                     l3872:
  2613                           
  2614                           ;usb_device.c: 1227: {;usb_device.c: 1228: (UIR &= 0xFB);
  2615  00684C  9468               	bcf	3944,2,c	;volatile
  2616  00684E                     l3874:
  2617  00684E  A468               	btfss	3944,2,c	;volatile
  2618  006850  0012               	return	
  2619  006852  D7FC               	goto	l3872
  2620  006854                     __end_of_USBWakeFromSuspend:
  2621                           	opt callstack 0
  2622                           
  2623 ;; *************** function _USBSuspend *****************
  2624 ;; Defined at:
  2625 ;;		line 1132 in file "../USB Stack/usb_device.c"
  2626 ;; Parameters:    Size  Location     Type
  2627 ;;		None
  2628 ;; Auto vars:     Size  Location     Type
  2629 ;;		None
  2630 ;; Return value:  Size  Location     Type
  2631 ;;                  1    wreg      void 
  2632 ;; Registers used:
  2633 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2634 ;; Tracked objects:
  2635 ;;		On entry : 0/0
  2636 ;;		On exit  : 0/0
  2637 ;;		Unchanged: 0/0
  2638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  2639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  2640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0
  2641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  2642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0
  2643 ;;Total ram usage:        0 bytes
  2644 ;; Hardware stack levels used:    1
  2645 ;; Hardware stack levels required when called:    4
  2646 ;; This function calls:
  2647 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  2648 ;; This function is called by:
  2649 ;;		_USBDeviceTasks
  2650 ;; This function uses a non-reentrant model
  2651 ;;
  2652                           
  2653                           	psect	text9
  2654  006806                     __ptext9:
  2655                           	opt callstack 0
  2656  006806                     _USBSuspend:
  2657                           	opt callstack 25
  2658                           
  2659                           ;usb_device.c: 1157: UIEbits.ACTVIE = 1;
  2660                           
  2661                           ;incstack = 0
  2662  006806  8469               	bsf	3945,2,c	;volatile
  2663                           
  2664                           ;usb_device.c: 1158: (UIR &= 0xEF);
  2665  006808  9868               	bcf	3944,4,c	;volatile
  2666                           
  2667                           ;usb_device.c: 1161: UCONbits.SUSPND = 1;
  2668  00680A  826D               	bsf	3949,1,c	;volatile
  2669                           
  2670                           ;usb_device.c: 1171: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  2671  00680C  0E00               	movlw	0
  2672  00680E  6E4E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  2673  006810  0E75               	movlw	117
  2674  006812  6E4D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  2675  006814  0E00               	movlw	0
  2676  006816  6E4F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  2677  006818  0E00               	movlw	0
  2678  00681A  6E50               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  2679  00681C  0E00               	movlw	0
  2680  00681E  6E52               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  2681  006820  0E00               	movlw	0
  2682  006822  6E51               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  2683  006824  ECCC  F035         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  2684  006828  0012               	return		;funcret
  2685  00682A                     __end_of_USBSuspend:
  2686                           	opt callstack 0
  2687                           
  2688 ;; *************** function _USBStallHandler *****************
  2689 ;; Defined at:
  2690 ;;		line 1089 in file "../USB Stack/usb_device.c"
  2691 ;; Parameters:    Size  Location     Type
  2692 ;;		None
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;		None
  2695 ;; Return value:  Size  Location     Type
  2696 ;;                  1    wreg      void 
  2697 ;; Registers used:
  2698 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  2704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  2705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0
  2706 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0
  2707 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0
  2708 ;;Total ram usage:        1 bytes
  2709 ;; Hardware stack levels used:    1
  2710 ;; This function calls:
  2711 ;;		Nothing
  2712 ;; This function is called by:
  2713 ;;		_USBDeviceTasks
  2714 ;; This function uses a non-reentrant model
  2715 ;;
  2716                           
  2717                           	psect	text10
  2718  0068DE                     __ptext10:
  2719                           	opt callstack 0
  2720  0068DE                     _USBStallHandler:
  2721                           	opt callstack 29
  2722                           
  2723                           ;usb_device.c: 1102: if(UEP0bits.EPSTALL == 1)
  2724                           
  2725                           ;incstack = 0
  2726  0068DE  A070               	btfss	3952,0,c	;volatile
  2727  0068E0  D017               	goto	l2326
  2728                           
  2729                           ;usb_device.c: 1103: {;usb_device.c: 1105: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
  2730  0068E2  C031  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  2731  0068E6  C032  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  2732  0068EA  0E80               	movlw	128
  2733  0068EC  18DE               	xorwf	postinc2,w,c
  2734  0068EE  A4D8               	btfss	status,2,c
  2735  0068F0  D00E               	goto	l2324
  2736  0068F2  C01F  FFD9         	movff	_pBDTEntryIn,fsr2l
  2737  0068F6  C020  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  2738  0068FA  0E84               	movlw	132
  2739  0068FC  18DE               	xorwf	postinc2,w,c
  2740  0068FE  A4D8               	btfss	status,2,c
  2741  006900  D006               	goto	l2324
  2742                           
  2743                           ;usb_device.c: 1106: {;usb_device.c: 1108: pBDTEntryEP0OutCurrent->STAT.Val = 0x80|0x00|
      +                          0x08|0x04;
  2744  006902  C031  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  2745  006906  C032  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  2746  00690A  0E8C               	movlw	140
  2747  00690C  6EDF               	movwf	indf2,c
  2748  00690E                     l2324:
  2749                           
  2750                           ;usb_device.c: 1109: };usb_device.c: 1110: UEP0bits.EPSTALL = 0;
  2751  00690E  9070               	bcf	3952,0,c	;volatile
  2752  006910                     l2326:
  2753                           
  2754                           ;usb_device.c: 1111: };usb_device.c: 1113: (UIR &= 0xDF);
  2755  006910  9A68               	bcf	3944,5,c	;volatile
  2756  006912  0012               	return		;funcret
  2757  006914                     __end_of_USBStallHandler:
  2758                           	opt callstack 0
  2759                           
  2760 ;; *************** function _USBDeviceInit *****************
  2761 ;; Defined at:
  2762 ;;		line 675 in file "../USB Stack/usb_device.c"
  2763 ;; Parameters:    Size  Location     Type
  2764 ;;		None
  2765 ;; Auto vars:     Size  Location     Type
  2766 ;;  i               1    8[COMRAM] unsigned char 
  2767 ;; Return value:  Size  Location     Type
  2768 ;;                  1    wreg      void 
  2769 ;; Registers used:
  2770 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2771 ;; Tracked objects:
  2772 ;;		On entry : 0/0
  2773 ;;		On exit  : 0/0
  2774 ;;		Unchanged: 0/0
  2775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  2776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  2777 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0
  2778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  2779 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0
  2780 ;;Total ram usage:        1 bytes
  2781 ;; Hardware stack levels used:    1
  2782 ;; Hardware stack levels required when called:    1
  2783 ;; This function calls:
  2784 ;;		_memset
  2785 ;; This function is called by:
  2786 ;;		_USBDeviceTasks
  2787 ;;		_main
  2788 ;; This function uses a non-reentrant model
  2789 ;;
  2790                           
  2791                           	psect	text11
  2792  006DB4                     __ptext11:
  2793                           	opt callstack 0
  2794  006DB4                     _USBDeviceInit:
  2795                           	opt callstack 28
  2796                           
  2797                           ;usb_device.c: 677: BYTE i;;usb_device.c: 680: UEIR = 0;;
  2798                           
  2799                           ;incstack = 0
  2800  006DB4  0E00               	movlw	0
  2801  006DB6  6E6A               	movwf	3946,c	;volatile
  2802                           
  2803                           ;usb_device.c: 683: UIR = 0;;
  2804  006DB8  0E00               	movlw	0
  2805  006DBA  6E68               	movwf	3944,c	;volatile
  2806                           
  2807                           ;usb_device.c: 685: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  2808  006DBC  0E16               	movlw	22
  2809  006DBE  6E6F               	movwf	3951,c	;volatile
  2810  006DC0  0E9F               	movlw	159
  2811  006DC2  6E6B               	movwf	3947,c	;volatile
  2812  006DC4  0E7B               	movlw	123
  2813  006DC6  6E69               	movwf	3945,c	;volatile
  2814                           
  2815                           ;usb_device.c: 688: ;;usb_device.c: 691: ;;usb_device.c: 694: UCONbits.PPBRST = 1;
  2816  006DC8  8C6D               	bsf	3949,6,c	;volatile
  2817                           
  2818                           ;usb_device.c: 697: UADDR = 0x00;
  2819  006DCA  0E00               	movlw	0
  2820  006DCC  6E6E               	movwf	3950,c	;volatile
  2821                           
  2822                           ;usb_device.c: 700: memset((void*)&UEP1,0x00,(3-1));
  2823  006DCE  0E71               	movlw	113
  2824  006DD0  6E42               	movwf	memset@p1,c
  2825  006DD2  0E0F               	movlw	15
  2826  006DD4  6E43               	movwf	memset@p1+1,c
  2827  006DD6  0E00               	movlw	0
  2828  006DD8  6E45               	movwf	memset@c+1,c
  2829  006DDA  0E00               	movlw	0
  2830  006DDC  6E44               	movwf	memset@c,c
  2831  006DDE  0E00               	movlw	0
  2832  006DE0  6E47               	movwf	memset@n+1,c
  2833  006DE2  0E02               	movlw	2
  2834  006DE4  6E46               	movwf	memset@n,c
  2835  006DE6  EC2A  F034         	call	_memset	;wreg free
  2836                           
  2837                           ;usb_device.c: 703: UCONbits.PPBRST = 0;
  2838  006DEA  9C6D               	bcf	3949,6,c	;volatile
  2839                           
  2840                           ;usb_device.c: 706: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
  2841  006DEC  0E00               	movlw	0
  2842  006DEE  6E4A               	movwf	USBDeviceInit@i,c
  2843  006DF0                     l3844:
  2844                           
  2845                           ;usb_device.c: 707: {;usb_device.c: 708: BDT[i].Val = 0x00;
  2846  006DF0  504A               	movf	USBDeviceInit@i,w,c
  2847  006DF2  0D04               	mullw	4
  2848  006DF4  0E00               	movlw	0
  2849  006DF6  24F3               	addwf	prodl,w,c
  2850  006DF8  6ED9               	movwf	fsr2l,c
  2851  006DFA  0E04               	movlw	4
  2852  006DFC  20F4               	addwfc	prodh,w,c
  2853  006DFE  6EDA               	movwf	fsr2h,c
  2854  006E00  6ADE               	clrf	postinc2,c
  2855  006E02  6ADE               	clrf	postinc2,c
  2856  006E04  6ADE               	clrf	postinc2,c
  2857  006E06  6ADD               	clrf	postdec2,c
  2858  006E08  2A4A               	incf	USBDeviceInit@i,f,c
  2859  006E0A  0E0F               	movlw	15
  2860  006E0C  644A               	cpfsgt	USBDeviceInit@i,c
  2861  006E0E  D7F0               	goto	l3844
  2862                           
  2863                           ;usb_device.c: 709: };usb_device.c: 712: UEP0 = 0x06|0x10;
  2864  006E10  0E16               	movlw	22
  2865  006E12  6E70               	movwf	3952,c	;volatile
  2866                           
  2867                           ;usb_device.c: 715: while(UIRbits.TRNIF == 1)
  2868  006E14  D001               	goto	l3854
  2869  006E16                     l3852:
  2870                           
  2871                           ;usb_device.c: 716: {;usb_device.c: 717: (UIR &= 0xF7);
  2872  006E16  9668               	bcf	3944,3,c	;volatile
  2873  006E18                     l3854:
  2874  006E18  B668               	btfsc	3944,3,c	;volatile
  2875  006E1A  D7FD               	goto	l3852
  2876                           
  2877                           ;usb_device.c: 718: };usb_device.c: 721: inPipes[0].info.Val = 0;
  2878  006E1C  0E00               	movlw	0
  2879  006E1E  6E2A               	movwf	_inPipes+3,c
  2880                           
  2881                           ;usb_device.c: 722: outPipes[0].info.Val = 0;
  2882  006E20  0E00               	movlw	0
  2883  006E22  0100               	movlb	0	; () banked
  2884  006E24  6FBD               	movwf	(_outPipes+3)& (0+255),b
  2885                           
  2886                           ;usb_device.c: 723: outPipes[0].wCount.Val = 0;
  2887  006E26  0E00               	movlw	0
  2888  006E28  6FBF               	movwf	(_outPipes+5)& (0+255),b
  2889  006E2A  0E00               	movlw	0
  2890  006E2C  6FBE               	movwf	(_outPipes+4)& (0+255),b
  2891                           
  2892                           ; BSR set to: 0
  2893                           ;usb_device.c: 726: PKTDIS = 0;
  2894  006E2E  986D               	bcf	3949,4,c	;volatile
  2895                           
  2896                           ; BSR set to: 0
  2897                           ;usb_device.c: 729: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  2898  006E30  0E08               	movlw	8
  2899  006E32  6E1F               	movwf	_pBDTEntryIn,c
  2900  006E34  0E04               	movlw	4
  2901  006E36  6E20               	movwf	_pBDTEntryIn+1,c
  2902                           
  2903                           ; BSR set to: 0
  2904                           ;usb_device.c: 732: USBActiveConfiguration = 0;
  2905  006E38  0E00               	movlw	0
  2906  006E3A  6E41               	movwf	_USBActiveConfiguration,c
  2907                           
  2908                           ; BSR set to: 0
  2909                           ;usb_device.c: 735: USBDeviceState = DETACHED_STATE;
  2910  006E3C  0E00               	movlw	0
  2911  006E3E  6E38               	movwf	_USBDeviceState,c
  2912                           
  2913                           ; BSR set to: 0
  2914  006E40  0012               	return		;funcret
  2915  006E42                     __end_of_USBDeviceInit:
  2916                           	opt callstack 0
  2917                           
  2918 ;; *************** function _USBCtrlEPService *****************
  2919 ;; Defined at:
  2920 ;;		line 1254 in file "../USB Stack/usb_device.c"
  2921 ;; Parameters:    Size  Location     Type
  2922 ;;		None
  2923 ;; Auto vars:     Size  Location     Type
  2924 ;;  setup_cnt       1   21[COMRAM] unsigned char 
  2925 ;; Return value:  Size  Location     Type
  2926 ;;                  1    wreg      void 
  2927 ;; Registers used:
  2928 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  2934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  2935 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0
  2936 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0
  2937 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0
  2938 ;;Total ram usage:        3 bytes
  2939 ;; Hardware stack levels used:    1
  2940 ;; Hardware stack levels required when called:    7
  2941 ;; This function calls:
  2942 ;;		_USBCtrlTrfInHandler
  2943 ;;		_USBCtrlTrfOutHandler
  2944 ;;		_USBCtrlTrfSetupHandler
  2945 ;; This function is called by:
  2946 ;;		_USBDeviceTasks
  2947 ;; This function uses a non-reentrant model
  2948 ;;
  2949                           
  2950                           	psect	text12
  2951  006F6E                     __ptext12:
  2952                           	opt callstack 0
  2953  006F6E                     _USBCtrlEPService:
  2954                           	opt callstack 22
  2955                           
  2956                           ;usb_device.c: 1257: if((USTATcopy & ~0x02) == 0x00)
  2957                           
  2958                           ; BSR set to: 0
  2959                           ;incstack = 0
  2960  006F6E  C03B  F055         	movff	_USTATcopy,??_USBCtrlEPService
  2961  006F72  0EFD               	movlw	253
  2962  006F74  1655               	andwf	??_USBCtrlEPService,f,c
  2963  006F76  A4D8               	btfss	status,2,c
  2964  006F78  D04F               	goto	l3914
  2965                           
  2966                           ;usb_device.c: 1258: {;usb_device.c: 1261: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy & 0x7E)>>1];
  2967  006F7A  C03B  F055         	movff	_USTATcopy,??_USBCtrlEPService
  2968  006F7E  90D8               	bcf	status,0,c
  2969  006F80  3255               	rrcf	??_USBCtrlEPService,f,c
  2970  006F82  0E3F               	movlw	63
  2971  006F84  1655               	andwf	??_USBCtrlEPService,f,c
  2972  006F86  5055               	movf	??_USBCtrlEPService,w,c
  2973  006F88  0D04               	mullw	4
  2974  006F8A  0E00               	movlw	0
  2975  006F8C  24F3               	addwf	prodl,w,c
  2976  006F8E  6E31               	movwf	_pBDTEntryEP0OutCurrent,c
  2977  006F90  0E04               	movlw	4
  2978  006F92  20F4               	addwfc	prodh,w,c
  2979  006F94  6E32               	movwf	_pBDTEntryEP0OutCurrent+1,c
  2980                           
  2981                           ;usb_device.c: 1269: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  2982  006F96  C031  F02F         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  2983  006F9A  C032  F030         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  2984                           
  2985                           ;usb_device.c: 1271: ((BYTE_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  2986  006F9E  0E04               	movlw	4
  2987  006FA0  1A2F               	xorwf	_pBDTEntryEP0OutNext,f,c
  2988                           
  2989                           ;usb_device.c: 1274: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  2990  006FA2  C031  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  2991  006FA6  C032  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  2992  006FAA  30DF               	rrcf	indf2,w,c
  2993  006FAC  32E8               	rrcf	wreg,f,c
  2994  006FAE  0B0F               	andlw	15
  2995  006FB0  0A0D               	xorlw	13
  2996  006FB2  A4D8               	btfss	status,2,c
  2997  006FB4  D02E               	goto	l3912
  2998                           
  2999                           ;usb_device.c: 1275: {;usb_device.c: 1279: if(pBDTEntryEP0OutCurrent->ADR == (BYTE*)&Ctr
      +                          lTrfData)
  3000  006FB6  EE20 F002          	lfsr	2,2
  3001  006FBA  5031               	movf	_pBDTEntryEP0OutCurrent,w,c
  3002  006FBC  26D9               	addwf	fsr2l,f,c
  3003  006FBE  5032               	movf	_pBDTEntryEP0OutCurrent+1,w,c
  3004  006FC0  22DA               	addwfc	fsr2h,f,c
  3005  006FC2  0E20               	movlw	32
  3006  006FC4  18DE               	xorwf	postinc2,w,c
  3007  006FC6  E122               	bnz	l3910
  3008  006FC8  0E05               	movlw	5
  3009  006FCA  18DE               	xorwf	postinc2,w,c
  3010  006FCC  A4D8               	btfss	status,2,c
  3011  006FCE  D01E               	goto	u3100
  3012                           
  3013                           ;usb_device.c: 1280: {;usb_device.c: 1281: unsigned char setup_cnt;;usb_device.c: 1283: 
      +                          pBDTEntryEP0OutCurrent->ADR = (BYTE*)&SetupPkt;
  3014  006FD0  EE20 F002          	lfsr	2,2
  3015  006FD4  5031               	movf	_pBDTEntryEP0OutCurrent,w,c
  3016  006FD6  26D9               	addwf	fsr2l,f,c
  3017  006FD8  5032               	movf	_pBDTEntryEP0OutCurrent+1,w,c
  3018  006FDA  22DA               	addwfc	fsr2h,f,c
  3019  006FDC  0E00               	movlw	0
  3020  006FDE  6EDE               	movwf	postinc2,c
  3021  006FE0  0E05               	movlw	5
  3022  006FE2  6EDD               	movwf	postdec2,c
  3023                           
  3024                           ;usb_device.c: 1284: for(setup_cnt = 0; setup_cnt < sizeof(CTRL_TRF_SETUP); setup_cnt++)
  3025  006FE4  0E00               	movlw	0
  3026  006FE6  6E57               	movwf	USBCtrlEPService@setup_cnt,c
  3027  006FE8                     l3904:
  3028                           
  3029                           ;usb_device.c: 1285: {;usb_device.c: 1286: *(((BYTE*)&SetupPkt)+setup_cnt) = *(((BYTE*)&
      +                          CtrlTrfData)+setup_cnt);
  3030  006FE8  0E20               	movlw	32
  3031  006FEA  2457               	addwf	USBCtrlEPService@setup_cnt,w,c
  3032  006FEC  6ED9               	movwf	fsr2l,c
  3033  006FEE  6ADA               	clrf	fsr2h,c
  3034  006FF0  0E05               	movlw	5
  3035  006FF2  22DA               	addwfc	fsr2h,f,c
  3036  006FF4  0E00               	movlw	0
  3037  006FF6  2457               	addwf	USBCtrlEPService@setup_cnt,w,c
  3038  006FF8  6EE1               	movwf	fsr1l,c
  3039  006FFA  6AE2               	clrf	fsr1h,c
  3040  006FFC  0E05               	movlw	5
  3041  006FFE  22E2               	addwfc	fsr1h,f,c
  3042  007000  CFDF FFE7          	movff	indf2,indf1
  3043  007004  2A57               	incf	USBCtrlEPService@setup_cnt,f,c
  3044  007006  0E07               	movlw	7
  3045  007008  6457               	cpfsgt	USBCtrlEPService@setup_cnt,c
  3046  00700A  D7EE               	goto	l3904
  3047  00700C                     u3100:
  3048  00700C                     l3910:
  3049                           
  3050                           ;usb_device.c: 1287: };usb_device.c: 1288: };usb_device.c: 1291: USBCtrlTrfSetupHandler(
      +                          );
  3051  00700C  EC0C  F035         	call	_USBCtrlTrfSetupHandler	;wreg free
  3052                           
  3053                           ;usb_device.c: 1292: }
  3054  007010  0012               	return	
  3055  007012                     l3912:
  3056                           
  3057                           ;usb_device.c: 1293: else;usb_device.c: 1294: {;usb_device.c: 1296: USBCtrlTrfOutHandler
      +                          ();
  3058  007012  ECE4  F034         	call	_USBCtrlTrfOutHandler	;wreg free
  3059  007016  0012               	return	
  3060  007018                     l3914:
  3061                           
  3062                           ;usb_device.c: 1299: else if((USTATcopy & ~0x02) == 0x04)
  3063  007018  503B               	movf	_USTATcopy,w,c
  3064  00701A  0BFD               	andlw	253
  3065  00701C  0A04               	xorlw	4
  3066  00701E  A4D8               	btfss	status,2,c
  3067  007020  0012               	return	
  3068                           
  3069                           ;usb_device.c: 1300: {;usb_device.c: 1303: USBCtrlTrfInHandler();
  3070  007022  EC50  F036         	call	_USBCtrlTrfInHandler	;wreg free
  3071  007026  0012               	return		;funcret
  3072  007028                     __end_of_USBCtrlEPService:
  3073                           	opt callstack 0
  3074                           
  3075 ;; *************** function _USBCtrlTrfSetupHandler *****************
  3076 ;; Defined at:
  3077 ;;		line 1348 in file "../USB Stack/usb_device.c"
  3078 ;; Parameters:    Size  Location     Type
  3079 ;;		None
  3080 ;; Auto vars:     Size  Location     Type
  3081 ;;		None
  3082 ;; Return value:  Size  Location     Type
  3083 ;;                  1    wreg      void 
  3084 ;; Registers used:
  3085 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3086 ;; Tracked objects:
  3087 ;;		On entry : 0/0
  3088 ;;		On exit  : 0/0
  3089 ;;		Unchanged: 0/0
  3090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  3091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  3092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0
  3093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  3094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0
  3095 ;;Total ram usage:        0 bytes
  3096 ;; Hardware stack levels used:    1
  3097 ;; Hardware stack levels required when called:    6
  3098 ;; This function calls:
  3099 ;;		_USBCheckStdRequest
  3100 ;;		_USBCtrlEPServiceComplete
  3101 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  3102 ;; This function is called by:
  3103 ;;		_USBCtrlEPService
  3104 ;; This function uses a non-reentrant model
  3105 ;;
  3106                           
  3107                           	psect	text13
  3108  006A18                     __ptext13:
  3109                           	opt callstack 0
  3110  006A18                     _USBCtrlTrfSetupHandler:
  3111                           	opt callstack 22
  3112                           
  3113                           ;usb_device.c: 1351: if(pBDTEntryIn[0]->STAT.UOWN != 0)
  3114                           
  3115                           ;incstack = 0
  3116  006A18  C01F  FFD9         	movff	_pBDTEntryIn,fsr2l
  3117  006A1C  C020  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  3118  006A20  AEDF               	btfss	indf2,7,c
  3119  006A22  D006               	goto	l3770
  3120                           
  3121                           ;usb_device.c: 1352: {;usb_device.c: 1355: pBDTEntryIn[0]->STAT.Val = 0x00;
  3122  006A24  C01F  FFD9         	movff	_pBDTEntryIn,fsr2l
  3123  006A28  C020  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  3124  006A2C  0E00               	movlw	0
  3125  006A2E  6EDF               	movwf	indf2,c
  3126  006A30                     l3770:
  3127                           
  3128                           ;usb_device.c: 1356: };usb_device.c: 1359: shortPacketStatus = 0;
  3129  006A30  0E00               	movlw	0
  3130  006A32  6E37               	movwf	_shortPacketStatus,c
  3131                           
  3132                           ;usb_device.c: 1362: controlTransferState = 0;
  3133  006A34  0E00               	movlw	0
  3134  006A36  6E36               	movwf	_controlTransferState,c
  3135                           
  3136                           ;usb_device.c: 1364: inPipes[0].wCount.Val = 0;
  3137  006A38  0E00               	movlw	0
  3138  006A3A  6E2C               	movwf	_inPipes+5,c
  3139  006A3C  0E00               	movlw	0
  3140  006A3E  6E2B               	movwf	_inPipes+4,c
  3141                           
  3142                           ;usb_device.c: 1365: inPipes[0].info.Val = 0;
  3143  006A40  0E00               	movlw	0
  3144  006A42  6E2A               	movwf	_inPipes+3,c
  3145                           
  3146                           ;usb_device.c: 1368: USBCheckStdRequest();
  3147  006A44  EC14  F038         	call	_USBCheckStdRequest	;wreg free
  3148                           
  3149                           ;usb_device.c: 1369: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  3150  006A48  0E00               	movlw	0
  3151  006A4A  6E4E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  3152  006A4C  0E03               	movlw	3
  3153  006A4E  6E4D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  3154  006A50  0E00               	movlw	0
  3155  006A52  6E4F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  3156  006A54  0E00               	movlw	0
  3157  006A56  6E50               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  3158  006A58  0E00               	movlw	0
  3159  006A5A  6E52               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  3160  006A5C  0E00               	movlw	0
  3161  006A5E  6E51               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  3162  006A60  ECCC  F035         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  3163                           
  3164                           ;usb_device.c: 1372: USBCtrlEPServiceComplete();
  3165  006A64  EC11  F03E         	call	_USBCtrlEPServiceComplete	;wreg free
  3166  006A68  0012               	return		;funcret
  3167  006A6A                     __end_of_USBCtrlTrfSetupHandler:
  3168                           	opt callstack 0
  3169                           
  3170 ;; *************** function _USBCtrlEPServiceComplete *****************
  3171 ;; Defined at:
  3172 ;;		line 1914 in file "../USB Stack/usb_device.c"
  3173 ;; Parameters:    Size  Location     Type
  3174 ;;		None
  3175 ;; Auto vars:     Size  Location     Type
  3176 ;;		None
  3177 ;; Return value:  Size  Location     Type
  3178 ;;                  1    wreg      void 
  3179 ;; Registers used:
  3180 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3181 ;; Tracked objects:
  3182 ;;		On entry : 0/0
  3183 ;;		On exit  : 0/0
  3184 ;;		Unchanged: 0/0
  3185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  3186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  3187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0
  3188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  3189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0
  3190 ;;Total ram usage:        0 bytes
  3191 ;; Hardware stack levels used:    1
  3192 ;; Hardware stack levels required when called:    1
  3193 ;; This function calls:
  3194 ;;		_USBCtrlTrfTxService
  3195 ;; This function is called by:
  3196 ;;		_USBCtrlTrfSetupHandler
  3197 ;; This function uses a non-reentrant model
  3198 ;;
  3199                           
  3200                           	psect	text14
  3201  007C22                     __ptext14:
  3202                           	opt callstack 0
  3203  007C22                     _USBCtrlEPServiceComplete:
  3204                           	opt callstack 26
  3205                           
  3206                           ;usb_device.c: 1920: PKTDIS = 0;
  3207                           
  3208                           ;incstack = 0
  3209  007C22  986D               	bcf	3949,4,c	;volatile
  3210                           
  3211                           ;usb_device.c: 1922: if(inPipes[0].info.bits.busy == 0)
  3212  007C24  BE2A               	btfsc	_inPipes+3,7,c
  3213  007C26  D04B               	goto	l374
  3214                           
  3215                           ;usb_device.c: 1923: {;usb_device.c: 1924: if(outPipes[0].info.bits.busy == 1)
  3216  007C28  0100               	movlb	0	; () banked
  3217  007C2A  AFBD               	btfss	(_outPipes+3)& (0+255),7,b
  3218  007C2C  D029               	goto	l3672
  3219                           
  3220                           ; BSR set to: 0
  3221                           ;usb_device.c: 1925: {;usb_device.c: 1926: controlTransferState = 2;
  3222  007C2E  0E02               	movlw	2
  3223  007C30  6E36               	movwf	_controlTransferState,c
  3224                           
  3225                           ; BSR set to: 0
  3226                           ;usb_device.c: 1936: pBDTEntryIn[0]->CNT = 0;
  3227  007C32  EE20 F001          	lfsr	2,1
  3228  007C36  501F               	movf	_pBDTEntryIn,w,c
  3229  007C38  26D9               	addwf	fsr2l,f,c
  3230  007C3A  5020               	movf	_pBDTEntryIn+1,w,c
  3231  007C3C  22DA               	addwfc	fsr2h,f,c
  3232  007C3E  0E00               	movlw	0
  3233  007C40  6EDF               	movwf	indf2,c
  3234                           
  3235                           ; BSR set to: 0
  3236                           ;usb_device.c: 1937: pBDTEntryIn[0]->STAT.Val = 0x80|0x40|0x08;
  3237  007C42  C01F  FFD9         	movff	_pBDTEntryIn,fsr2l
  3238  007C46  C020  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  3239  007C4A  0EC8               	movlw	200
  3240  007C4C  6EDF               	movwf	indf2,c
  3241                           
  3242                           ; BSR set to: 0
  3243                           ;usb_device.c: 1942: pBDTEntryEP0OutNext->CNT = 8;
  3244  007C4E  EE20 F001          	lfsr	2,1
  3245  007C52  502F               	movf	_pBDTEntryEP0OutNext,w,c
  3246  007C54  26D9               	addwf	fsr2l,f,c
  3247  007C56  5030               	movf	_pBDTEntryEP0OutNext+1,w,c
  3248  007C58  22DA               	addwfc	fsr2h,f,c
  3249  007C5A  0E08               	movlw	8
  3250  007C5C  6EDF               	movwf	indf2,c
  3251                           
  3252                           ; BSR set to: 0
  3253                           ;usb_device.c: 1943: pBDTEntryEP0OutNext->ADR = (BYTE*)&CtrlTrfData;
  3254  007C5E  EE20 F002          	lfsr	2,2
  3255  007C62  502F               	movf	_pBDTEntryEP0OutNext,w,c
  3256  007C64  26D9               	addwf	fsr2l,f,c
  3257  007C66  5030               	movf	_pBDTEntryEP0OutNext+1,w,c
  3258  007C68  22DA               	addwfc	fsr2h,f,c
  3259  007C6A  0E20               	movlw	32
  3260  007C6C  6EDE               	movwf	postinc2,c
  3261  007C6E  0E05               	movlw	5
  3262  007C70  6EDD               	movwf	postdec2,c
  3263                           
  3264                           ; BSR set to: 0
  3265                           ;usb_device.c: 1944: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x40|0x08;
  3266  007C72  C02F  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  3267  007C76  C030  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  3268  007C7A  0EC8               	movlw	200
  3269  007C7C  6EDF               	movwf	indf2,c
  3270                           
  3271                           ;usb_device.c: 1945: }
  3272  007C7E  0012               	return	
  3273  007C80                     l3672:
  3274                           
  3275                           ; BSR set to: 0
  3276                           ;usb_device.c: 1946: else;usb_device.c: 1947: {;usb_device.c: 1952: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
  3277  007C80  EE20 F001          	lfsr	2,1
  3278  007C84  502F               	movf	_pBDTEntryEP0OutNext,w,c
  3279  007C86  26D9               	addwf	fsr2l,f,c
  3280  007C88  5030               	movf	_pBDTEntryEP0OutNext+1,w,c
  3281  007C8A  22DA               	addwfc	fsr2h,f,c
  3282  007C8C  0E08               	movlw	8
  3283  007C8E  6EDF               	movwf	indf2,c
  3284                           
  3285                           ;usb_device.c: 1953: pBDTEntryEP0OutNext->ADR = (BYTE*)&SetupPkt;
  3286  007C90  EE20 F002          	lfsr	2,2
  3287  007C94  502F               	movf	_pBDTEntryEP0OutNext,w,c
  3288  007C96  26D9               	addwf	fsr2l,f,c
  3289  007C98  5030               	movf	_pBDTEntryEP0OutNext+1,w,c
  3290  007C9A  22DA               	addwfc	fsr2h,f,c
  3291  007C9C  0E00               	movlw	0
  3292  007C9E  6EDE               	movwf	postinc2,c
  3293  007CA0  0E05               	movlw	5
  3294  007CA2  6EDD               	movwf	postdec2,c
  3295                           
  3296                           ; BSR set to: 0
  3297                           ;usb_device.c: 1954: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x00|0x08|0x04;
  3298  007CA4  C02F  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  3299  007CA8  C030  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  3300  007CAC  0E8C               	movlw	140
  3301  007CAE  6EDF               	movwf	indf2,c
  3302                           
  3303                           ; BSR set to: 0
  3304                           ;usb_device.c: 1955: pBDTEntryIn[0]->STAT.Val = 0x80|0x04;
  3305  007CB0  C01F  FFD9         	movff	_pBDTEntryIn,fsr2l
  3306  007CB4  C020  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  3307  007CB8  0E84               	movlw	132
  3308  007CBA  6EDF               	movwf	indf2,c
  3309  007CBC  0012               	return	
  3310  007CBE                     l374:
  3311                           
  3312                           ;usb_device.c: 1958: else;usb_device.c: 1959: {;usb_device.c: 1960: if(outPipes[0].info.
      +                          bits.busy == 0)
  3313  007CBE  0100               	movlb	0	; () banked
  3314  007CC0  BFBD               	btfsc	(_outPipes+3)& (0+255),7,b
  3315  007CC2  0012               	return	
  3316                           
  3317                           ; BSR set to: 0
  3318                           ;usb_device.c: 1961: {;usb_device.c: 1962: if(SetupPkt.DataDir == (0x80>>7))
  3319  007CC4  0105               	movlb	5	; () banked
  3320  007CC6  AF00               	btfss	0,7,b	;volatile
  3321  007CC8  D053               	goto	l3708
  3322                           
  3323                           ; BSR set to: 5
  3324                           ;usb_device.c: 1963: {;usb_device.c: 1964: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  3325  007CCA  502B               	movf	_inPipes+4,w,c
  3326  007CCC  5D06               	subwf	6,w,b	;volatile
  3327  007CCE  502C               	movf	_inPipes+5,w,c
  3328  007CD0  5907               	subwfb	7,w,b	;volatile
  3329  007CD2  B0D8               	btfsc	status,0,c
  3330  007CD4  D004               	goto	l3684
  3331                           
  3332                           ; BSR set to: 5
  3333                           ;usb_device.c: 1965: {;usb_device.c: 1966: inPipes[0].wCount.Val = SetupPkt.wLength;
  3334  007CD6  C506 F02B          	movff	1286,_inPipes+4	;volatile
  3335  007CDA  C507 F02C          	movff	1287,_inPipes+5	;volatile
  3336  007CDE                     l3684:
  3337                           
  3338                           ; BSR set to: 5
  3339                           ;usb_device.c: 1967: };usb_device.c: 1968: USBCtrlTrfTxService();
  3340  007CDE  EC1D  F03B         	call	_USBCtrlTrfTxService	;wreg free
  3341                           
  3342                           ;usb_device.c: 1969: controlTransferState = 1;
  3343  007CE2  0E01               	movlw	1
  3344  007CE4  6E36               	movwf	_controlTransferState,c
  3345                           
  3346                           ;usb_device.c: 1991: pBDTEntryEP0OutNext->CNT = 8;
  3347  007CE6  EE20 F001          	lfsr	2,1
  3348  007CEA  502F               	movf	_pBDTEntryEP0OutNext,w,c
  3349  007CEC  26D9               	addwf	fsr2l,f,c
  3350  007CEE  5030               	movf	_pBDTEntryEP0OutNext+1,w,c
  3351  007CF0  22DA               	addwfc	fsr2h,f,c
  3352  007CF2  0E08               	movlw	8
  3353  007CF4  6EDF               	movwf	indf2,c
  3354                           
  3355                           ;usb_device.c: 1992: pBDTEntryEP0OutNext->ADR = (BYTE*)&SetupPkt;
  3356  007CF6  EE20 F002          	lfsr	2,2
  3357  007CFA  502F               	movf	_pBDTEntryEP0OutNext,w,c
  3358  007CFC  26D9               	addwf	fsr2l,f,c
  3359  007CFE  5030               	movf	_pBDTEntryEP0OutNext+1,w,c
  3360  007D00  22DA               	addwfc	fsr2h,f,c
  3361  007D02  0E00               	movlw	0
  3362  007D04  6EDE               	movwf	postinc2,c
  3363  007D06  0E05               	movlw	5
  3364  007D08  6EDD               	movwf	postdec2,c
  3365                           
  3366                           ;usb_device.c: 1993: pBDTEntryEP0OutNext->STAT.Val = 0x80;
  3367  007D0A  C02F  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  3368  007D0E  C030  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  3369  007D12  0E80               	movlw	128
  3370  007D14  6EDF               	movwf	indf2,c
  3371                           
  3372                           ;usb_device.c: 1994: BothEP0OutUOWNsSet = FALSE;
  3373  007D16  0E00               	movlw	0
  3374  007D18  6E34               	movwf	_BothEP0OutUOWNsSet,c
  3375                           
  3376                           ;usb_device.c: 1997: pBDTEntryEP0OutCurrent->CNT = 8;
  3377  007D1A  EE20 F001          	lfsr	2,1
  3378  007D1E  5031               	movf	_pBDTEntryEP0OutCurrent,w,c
  3379  007D20  26D9               	addwf	fsr2l,f,c
  3380  007D22  5032               	movf	_pBDTEntryEP0OutCurrent+1,w,c
  3381  007D24  22DA               	addwfc	fsr2h,f,c
  3382  007D26  0E08               	movlw	8
  3383  007D28  6EDF               	movwf	indf2,c
  3384                           
  3385                           ;usb_device.c: 1998: pBDTEntryEP0OutCurrent->ADR = (BYTE*)&SetupPkt;
  3386  007D2A  EE20 F002          	lfsr	2,2
  3387  007D2E  5031               	movf	_pBDTEntryEP0OutCurrent,w,c
  3388  007D30  26D9               	addwf	fsr2l,f,c
  3389  007D32  5032               	movf	_pBDTEntryEP0OutCurrent+1,w,c
  3390  007D34  22DA               	addwfc	fsr2h,f,c
  3391  007D36  0E00               	movlw	0
  3392  007D38  6EDE               	movwf	postinc2,c
  3393  007D3A  0E05               	movlw	5
  3394  007D3C  6EDD               	movwf	postdec2,c
  3395                           
  3396                           ;usb_device.c: 1999: pBDTEntryEP0OutCurrent->STAT.Val = 0x80|0x04;
  3397  007D3E  C031  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  3398  007D42  C032  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  3399  007D46  0E84               	movlw	132
  3400  007D48  6EDF               	movwf	indf2,c
  3401                           
  3402                           ;usb_device.c: 2000: BothEP0OutUOWNsSet = TRUE;
  3403  007D4A  0E01               	movlw	1
  3404  007D4C  6E34               	movwf	_BothEP0OutUOWNsSet,c
  3405                           
  3406                           ;usb_device.c: 2007: pBDTEntryIn[0]->ADR = (BYTE*)&CtrlTrfData;
  3407  007D4E  EE20 F002          	lfsr	2,2
  3408  007D52  501F               	movf	_pBDTEntryIn,w,c
  3409  007D54  26D9               	addwf	fsr2l,f,c
  3410  007D56  5020               	movf	_pBDTEntryIn+1,w,c
  3411  007D58  22DA               	addwfc	fsr2h,f,c
  3412  007D5A  0E20               	movlw	32
  3413  007D5C  6EDE               	movwf	postinc2,c
  3414  007D5E  0E05               	movlw	5
  3415  007D60  6EDD               	movwf	postdec2,c
  3416                           
  3417                           ;usb_device.c: 2008: pBDTEntryIn[0]->STAT.Val = 0x80|0x40|0x08;
  3418  007D62  C01F  FFD9         	movff	_pBDTEntryIn,fsr2l
  3419  007D66  C020  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  3420  007D6A  0EC8               	movlw	200
  3421  007D6C  6EDF               	movwf	indf2,c
  3422                           
  3423                           ;usb_device.c: 2009: }
  3424  007D6E  0012               	return	
  3425  007D70                     l3708:
  3426                           
  3427                           ; BSR set to: 5
  3428                           ;usb_device.c: 2010: else;usb_device.c: 2011: {;usb_device.c: 2012: controlTransferState
      +                           = 2;
  3429  007D70  0E02               	movlw	2
  3430  007D72  6E36               	movwf	_controlTransferState,c
  3431                           
  3432                           ; BSR set to: 5
  3433                           ;usb_device.c: 2022: pBDTEntryIn[0]->CNT = 0;
  3434  007D74  EE20 F001          	lfsr	2,1
  3435  007D78  501F               	movf	_pBDTEntryIn,w,c
  3436  007D7A  26D9               	addwf	fsr2l,f,c
  3437  007D7C  5020               	movf	_pBDTEntryIn+1,w,c
  3438  007D7E  22DA               	addwfc	fsr2h,f,c
  3439  007D80  0E00               	movlw	0
  3440  007D82  6EDF               	movwf	indf2,c
  3441                           
  3442                           ; BSR set to: 5
  3443                           ;usb_device.c: 2023: pBDTEntryIn[0]->STAT.Val = 0x80|0x40|0x08;
  3444  007D84  C01F  FFD9         	movff	_pBDTEntryIn,fsr2l
  3445  007D88  C020  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  3446  007D8C  0EC8               	movlw	200
  3447  007D8E  6EDF               	movwf	indf2,c
  3448                           
  3449                           ; BSR set to: 5
  3450                           ;usb_device.c: 2028: pBDTEntryEP0OutNext->CNT = 8;
  3451  007D90  EE20 F001          	lfsr	2,1
  3452  007D94  502F               	movf	_pBDTEntryEP0OutNext,w,c
  3453  007D96  26D9               	addwf	fsr2l,f,c
  3454  007D98  5030               	movf	_pBDTEntryEP0OutNext+1,w,c
  3455  007D9A  22DA               	addwfc	fsr2h,f,c
  3456  007D9C  0E08               	movlw	8
  3457  007D9E  6EDF               	movwf	indf2,c
  3458                           
  3459                           ; BSR set to: 5
  3460                           ;usb_device.c: 2029: pBDTEntryEP0OutNext->ADR = (BYTE*)&CtrlTrfData;
  3461  007DA0  EE20 F002          	lfsr	2,2
  3462  007DA4  502F               	movf	_pBDTEntryEP0OutNext,w,c
  3463  007DA6  26D9               	addwf	fsr2l,f,c
  3464  007DA8  5030               	movf	_pBDTEntryEP0OutNext+1,w,c
  3465  007DAA  22DA               	addwfc	fsr2h,f,c
  3466  007DAC  0E20               	movlw	32
  3467  007DAE  6EDE               	movwf	postinc2,c
  3468  007DB0  0E05               	movlw	5
  3469  007DB2  6EDD               	movwf	postdec2,c
  3470                           
  3471                           ; BSR set to: 5
  3472                           ;usb_device.c: 2030: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x40|0x08;
  3473  007DB4  C02F  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  3474  007DB8  C030  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  3475  007DBC  0EC8               	movlw	200
  3476  007DBE  6EDF               	movwf	indf2,c
  3477  007DC0  0012               	return		;funcret
  3478  007DC2                     __end_of_USBCtrlEPServiceComplete:
  3479                           	opt callstack 0
  3480                           
  3481 ;; *************** function _USBCheckStdRequest *****************
  3482 ;; Defined at:
  3483 ;;		line 1563 in file "../USB Stack/usb_device.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;		None
  3486 ;; Auto vars:     Size  Location     Type
  3487 ;;		None
  3488 ;; Return value:  Size  Location     Type
  3489 ;;                  1    wreg      void 
  3490 ;; Registers used:
  3491 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3492 ;; Tracked objects:
  3493 ;;		On entry : 0/0
  3494 ;;		On exit  : 0/0
  3495 ;;		Unchanged: 0/0
  3496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  3497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  3498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0
  3499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  3500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0
  3501 ;;Total ram usage:        0 bytes
  3502 ;; Hardware stack levels used:    1
  3503 ;; Hardware stack levels required when called:    5
  3504 ;; This function calls:
  3505 ;;		_USBStdFeatureReqHandler
  3506 ;;		_USBStdGetDscHandler
  3507 ;;		_USBStdGetStatusHandler
  3508 ;;		_USBStdSetCfgHandler
  3509 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  3510 ;; This function is called by:
  3511 ;;		_USBCtrlTrfSetupHandler
  3512 ;; This function uses a non-reentrant model
  3513 ;;
  3514                           
  3515                           	psect	text15
  3516  007028                     __ptext15:
  3517                           	opt callstack 0
  3518  007028                     _USBCheckStdRequest:
  3519                           	opt callstack 22
  3520                           
  3521                           ;usb_device.c: 1565: if(SetupPkt.RequestType != (0x00>>5)) return;
  3522                           
  3523                           ;incstack = 0
  3524  007028  0105               	movlb	5	; () banked
  3525  00702A  3900               	swapf	0,w,b	;volatile
  3526  00702C  32E8               	rrcf	wreg,f,c
  3527  00702E  0B03               	andlw	3
  3528  007030  0900               	iorlw	0
  3529  007032  A4D8               	btfss	status,2,c
  3530  007034  0012               	return	
  3531  007036  D039               	goto	l3654
  3532  007038                     l320:
  3533                           
  3534                           ; BSR set to: 5
  3535                           ;usb_device.c: 1570: inPipes[0].info.bits.busy = 1;
  3536  007038  8E2A               	bsf	_inPipes+3,7,c
  3537                           
  3538                           ; BSR set to: 5
  3539                           ;usb_device.c: 1571: USBDeviceState = ADR_PENDING_STATE;
  3540  00703A  0E08               	movlw	8
  3541  00703C  6E38               	movwf	_USBDeviceState,c
  3542                           
  3543                           ;usb_device.c: 1573: break;
  3544  00703E  0012               	return	
  3545  007040                     l3624:
  3546                           
  3547                           ; BSR set to: 5
  3548                           ;usb_device.c: 1575: USBStdGetDscHandler();
  3549  007040  ECC1  F039         	call	_USBStdGetDscHandler	;wreg free
  3550                           
  3551                           ;usb_device.c: 1576: break;
  3552  007044  0012               	return	
  3553  007046                     l3626:
  3554                           
  3555                           ; BSR set to: 5
  3556                           ;usb_device.c: 1578: USBStdSetCfgHandler();
  3557  007046  EC96  F035         	call	_USBStdSetCfgHandler	;wreg free
  3558                           
  3559                           ;usb_device.c: 1579: break;
  3560  00704A  0012               	return	
  3561  00704C                     l3628:
  3562                           
  3563                           ; BSR set to: 5
  3564                           ;usb_device.c: 1581: inPipes[0].pSrc.bRam = (BYTE*)&USBActiveConfiguration;
  3565  00704C  0E41               	movlw	low _USBActiveConfiguration
  3566  00704E  6E27               	movwf	_inPipes,c
  3567  007050  0E00               	movlw	high _USBActiveConfiguration
  3568  007052  6E28               	movwf	_inPipes+1,c
  3569  007054                     l3630:
  3570                           
  3571                           ; BSR set to: 5
  3572                           ;usb_device.c: 1582: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  3573  007054  802A               	bsf	_inPipes+3,0,c
  3574                           
  3575                           ; BSR set to: 5
  3576                           ;usb_device.c: 1583: inPipes[0].wCount.v[0] = 1;
  3577  007056  0E01               	movlw	1
  3578  007058  6E2B               	movwf	_inPipes+4,c
  3579                           
  3580                           ; BSR set to: 5
  3581                           ;usb_device.c: 1584: inPipes[0].info.bits.busy = 1;
  3582  00705A  8E2A               	bsf	_inPipes+3,7,c
  3583                           
  3584                           ;usb_device.c: 1585: break;
  3585  00705C  0012               	return	
  3586  00705E                     l3636:
  3587                           
  3588                           ; BSR set to: 5
  3589                           ;usb_device.c: 1587: USBStdGetStatusHandler();
  3590  00705E  EC21  F037         	call	_USBStdGetStatusHandler	;wreg free
  3591                           
  3592                           ;usb_device.c: 1588: break;
  3593  007062  0012               	return	
  3594  007064                     l3638:
  3595                           
  3596                           ; BSR set to: 5
  3597                           ;usb_device.c: 1590: case 3:;usb_device.c: 1591: USBStdFeatureReqHandler();
  3598  007064  ECA5  F03A         	call	_USBStdFeatureReqHandler	;wreg free
  3599                           
  3600                           ;usb_device.c: 1592: break;
  3601  007068  0012               	return	
  3602  00706A                     l3640:
  3603                           
  3604                           ; BSR set to: 5
  3605                           ;usb_device.c: 1594: inPipes[0].pSrc.bRam = (BYTE*)&USBAlternateInterface[SetupPkt.bIntf
      +                          ID];
  3606  00706A  0E3C               	movlw	low _USBAlternateInterface
  3607  00706C  2504               	addwf	4,w,b	;volatile
  3608  00706E  6E27               	movwf	_inPipes,c
  3609  007070  6A28               	clrf	_inPipes+1,c
  3610  007072  0E00               	movlw	high _USBAlternateInterface
  3611  007074  2228               	addwfc	_inPipes+1,f,c
  3612  007076  D7EE               	goto	l3630
  3613  007078                     l329:
  3614                           
  3615                           ; BSR set to: 5
  3616                           ;usb_device.c: 1600: inPipes[0].info.bits.busy = 1;
  3617  007078  8E2A               	bsf	_inPipes+3,7,c
  3618                           
  3619                           ; BSR set to: 5
  3620                           ;usb_device.c: 1601: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  3621  00707A  0E3C               	movlw	low _USBAlternateInterface
  3622  00707C  2504               	addwf	4,w,b	;volatile
  3623  00707E  6ED9               	movwf	fsr2l,c
  3624  007080  6ADA               	clrf	fsr2h,c
  3625  007082  0E00               	movlw	high _USBAlternateInterface
  3626  007084  22DA               	addwfc	fsr2h,f,c
  3627  007086  C502 FFDF          	movff	1282,indf2	;volatile
  3628                           
  3629                           ;usb_device.c: 1602: break;
  3630  00708A  0012               	return	
  3631  00708C                     l3650:
  3632                           
  3633                           ; BSR set to: 5
  3634                           ;usb_device.c: 1604: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  3635  00708C  0E00               	movlw	0
  3636  00708E  6E4E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  3637  007090  0E02               	movlw	2
  3638  007092  6E4D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  3639  007094  0E00               	movlw	0
  3640  007096  6E4F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  3641  007098  0E00               	movlw	0
  3642  00709A  6E50               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  3643  00709C  0E00               	movlw	0
  3644  00709E  6E52               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  3645  0070A0  0E00               	movlw	0
  3646  0070A2  6E51               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  3647  0070A4  ECCC  F035         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  3648                           
  3649                           ;usb_device.c: 1605: break;
  3650  0070A8  0012               	return	
  3651  0070AA                     l3654:
  3652                           
  3653                           ; BSR set to: 5
  3654  0070AA  5101               	movf	1,w,b	;volatile
  3655                           
  3656                           ; Switch size 1, requested type "simple"
  3657                           ; Number of cases is 11, Range of values is 0 to 12
  3658                           ; switch strategies available:
  3659                           ; Name         Instructions Cycles
  3660                           ; simple_byte           34    18 (average)
  3661                           ;	Chosen strategy is simple_byte
  3662  0070AC  0A00               	xorlw	0	; case 0
  3663  0070AE  B4D8               	btfsc	status,2,c
  3664  0070B0  D7D6               	goto	l3636
  3665  0070B2  0A01               	xorlw	1	; case 1
  3666  0070B4  B4D8               	btfsc	status,2,c
  3667  0070B6  D7D6               	goto	l3638
  3668  0070B8  0A02               	xorlw	2	; case 3
  3669  0070BA  B4D8               	btfsc	status,2,c
  3670  0070BC  D7D3               	goto	l3638
  3671  0070BE  0A06               	xorlw	6	; case 5
  3672  0070C0  B4D8               	btfsc	status,2,c
  3673  0070C2  D7BA               	goto	l320
  3674  0070C4  0A03               	xorlw	3	; case 6
  3675  0070C6  B4D8               	btfsc	status,2,c
  3676  0070C8  D7BB               	goto	l3624
  3677  0070CA  0A01               	xorlw	1	; case 7
  3678  0070CC  B4D8               	btfsc	status,2,c
  3679  0070CE  D7DE               	goto	l3650
  3680  0070D0  0A0F               	xorlw	15	; case 8
  3681  0070D2  B4D8               	btfsc	status,2,c
  3682  0070D4  D7BB               	goto	l3628
  3683  0070D6  0A01               	xorlw	1	; case 9
  3684  0070D8  B4D8               	btfsc	status,2,c
  3685  0070DA  D7B5               	goto	l3626
  3686  0070DC  0A03               	xorlw	3	; case 10
  3687  0070DE  B4D8               	btfsc	status,2,c
  3688  0070E0  D7C4               	goto	l3640
  3689  0070E2  0A01               	xorlw	1	; case 11
  3690  0070E4  B4D8               	btfsc	status,2,c
  3691  0070E6  D7C8               	goto	l329
  3692  0070E8  0A07               	xorlw	7	; case 12
  3693  0070EA  0012               	return	
  3694  0070EC                     __end_of_USBCheckStdRequest:
  3695                           	opt callstack 0
  3696                           
  3697 ;; *************** function _USBStdSetCfgHandler *****************
  3698 ;; Defined at:
  3699 ;;		line 2234 in file "../USB Stack/usb_device.c"
  3700 ;; Parameters:    Size  Location     Type
  3701 ;;		None
  3702 ;; Auto vars:     Size  Location     Type
  3703 ;;		None
  3704 ;; Return value:  Size  Location     Type
  3705 ;;                  1    wreg      void 
  3706 ;; Registers used:
  3707 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3708 ;; Tracked objects:
  3709 ;;		On entry : 0/0
  3710 ;;		On exit  : 0/0
  3711 ;;		Unchanged: 0/0
  3712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  3713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  3714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0
  3715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  3716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0
  3717 ;;Total ram usage:        0 bytes
  3718 ;; Hardware stack levels used:    1
  3719 ;; Hardware stack levels required when called:    4
  3720 ;; This function calls:
  3721 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  3722 ;;		_memset
  3723 ;; This function is called by:
  3724 ;;		_USBCheckStdRequest
  3725 ;; This function uses a non-reentrant model
  3726 ;;
  3727                           
  3728                           	psect	text16
  3729  006B2C                     __ptext16:
  3730                           	opt callstack 0
  3731  006B2C                     _USBStdSetCfgHandler:
  3732                           	opt callstack 22
  3733                           
  3734                           ;usb_device.c: 2237: inPipes[0].info.bits.busy = 1;
  3735                           
  3736                           ;incstack = 0
  3737  006B2C  8E2A               	bsf	_inPipes+3,7,c
  3738                           
  3739                           ;usb_device.c: 2240: memset((void*)&UEP1,0x00,(3-1));
  3740  006B2E  0E71               	movlw	113
  3741  006B30  6E42               	movwf	memset@p1,c
  3742  006B32  0E0F               	movlw	15
  3743  006B34  6E43               	movwf	memset@p1+1,c
  3744  006B36  0E00               	movlw	0
  3745  006B38  6E45               	movwf	memset@c+1,c
  3746  006B3A  0E00               	movlw	0
  3747  006B3C  6E44               	movwf	memset@c,c
  3748  006B3E  0E00               	movlw	0
  3749  006B40  6E47               	movwf	memset@n+1,c
  3750  006B42  0E02               	movlw	2
  3751  006B44  6E46               	movwf	memset@n,c
  3752  006B46  EC2A  F034         	call	_memset	;wreg free
  3753                           
  3754                           ;usb_device.c: 2243: memset((void*)&USBAlternateInterface,0x00,1);
  3755  006B4A  0E3C               	movlw	low _USBAlternateInterface
  3756  006B4C  6E42               	movwf	memset@p1,c
  3757  006B4E  0E00               	movlw	high _USBAlternateInterface
  3758  006B50  6E43               	movwf	memset@p1+1,c
  3759  006B52  0E00               	movlw	0
  3760  006B54  6E45               	movwf	memset@c+1,c
  3761  006B56  0E00               	movlw	0
  3762  006B58  6E44               	movwf	memset@c,c
  3763  006B5A  0E00               	movlw	0
  3764  006B5C  6E47               	movwf	memset@n+1,c
  3765  006B5E  0E01               	movlw	1
  3766  006B60  6E46               	movwf	memset@n,c
  3767  006B62  EC2A  F034         	call	_memset	;wreg free
  3768                           
  3769                           ;usb_device.c: 2246: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  3770  006B66  C502 F041          	movff	1282,_USBActiveConfiguration	;volatile
  3771                           
  3772                           ;usb_device.c: 2249: if(USBActiveConfiguration == 0)
  3773  006B6A  5041               	movf	_USBActiveConfiguration,w,c
  3774  006B6C  A4D8               	btfss	status,2,c
  3775  006B6E  D003               	goto	l3544
  3776                           
  3777                           ;usb_device.c: 2250: {;usb_device.c: 2252: USBDeviceState = ADDRESS_STATE;
  3778  006B70  0E10               	movlw	16
  3779  006B72  6E38               	movwf	_USBDeviceState,c
  3780                           
  3781                           ;usb_device.c: 2253: }
  3782  006B74  0012               	return	
  3783  006B76                     l3544:
  3784                           
  3785                           ;usb_device.c: 2254: else;usb_device.c: 2255: {;usb_device.c: 2257: USBDeviceState = CON
      +                          FIGURED_STATE;
  3786  006B76  0E20               	movlw	32
  3787  006B78  6E38               	movwf	_USBDeviceState,c
  3788                           
  3789                           ;usb_device.c: 2259: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  3790  006B7A  0E00               	movlw	0
  3791  006B7C  6E4E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  3792  006B7E  0E01               	movlw	1
  3793  006B80  6E4D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  3794  006B82  0E41               	movlw	low _USBActiveConfiguration
  3795  006B84  6E4F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  3796  006B86  0E00               	movlw	high _USBActiveConfiguration
  3797  006B88  6E50               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  3798  006B8A  0E00               	movlw	0
  3799  006B8C  6E52               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  3800  006B8E  0E01               	movlw	1
  3801  006B90  6E51               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  3802  006B92  ECCC  F035         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  3803  006B96  0012               	return		;funcret
  3804  006B98                     __end_of_USBStdSetCfgHandler:
  3805                           	opt callstack 0
  3806                           
  3807 ;; *************** function _memset *****************
  3808 ;; Defined at:
  3809 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c90/common/memset.c"
  3810 ;; Parameters:    Size  Location     Type
  3811 ;;  p1              2    0[COMRAM] PTR void 
  3812 ;;		 -> USBAlternateInterface(1), UEP1(1), 
  3813 ;;  c               2    2[COMRAM] int 
  3814 ;;  n               2    4[COMRAM] unsigned int 
  3815 ;; Auto vars:     Size  Location     Type
  3816 ;;  p               2    6[COMRAM] PTR unsigned char 
  3817 ;;		 -> USBAlternateInterface(1), UEP1(1), 
  3818 ;; Return value:  Size  Location     Type
  3819 ;;                  2    0[COMRAM] PTR void 
  3820 ;; Registers used:
  3821 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3822 ;; Tracked objects:
  3823 ;;		On entry : 0/0
  3824 ;;		On exit  : 0/0
  3825 ;;		Unchanged: 0/0
  3826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  3827 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0
  3828 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0
  3829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  3830 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0
  3831 ;;Total ram usage:        8 bytes
  3832 ;; Hardware stack levels used:    1
  3833 ;; This function calls:
  3834 ;;		Nothing
  3835 ;; This function is called by:
  3836 ;;		_USBDeviceInit
  3837 ;;		_USBStdSetCfgHandler
  3838 ;; This function uses a non-reentrant model
  3839 ;;
  3840                           
  3841                           	psect	text17
  3842  006854                     __ptext17:
  3843                           	opt callstack 0
  3844  006854                     _memset:
  3845                           	opt callstack 28
  3846                           
  3847                           ;incstack = 0
  3848  006854  C042  F048         	movff	memset@p1,memset@p
  3849  006858  C043  F049         	movff	memset@p1+1,memset@p+1
  3850  00685C  D008               	goto	l3428
  3851  00685E                     l3424:
  3852  00685E  C048  FFD9         	movff	memset@p,fsr2l
  3853  006862  C049  FFDA         	movff	memset@p+1,fsr2h
  3854  006866  C044  FFDF         	movff	memset@c,indf2
  3855  00686A  4A48               	infsnz	memset@p,f,c
  3856  00686C  2A49               	incf	memset@p+1,f,c
  3857  00686E                     l3428:
  3858  00686E  0646               	decf	memset@n,f,c
  3859  006870  A0D8               	btfss	status,0,c
  3860  006872  0647               	decf	memset@n+1,f,c
  3861  006874  2846               	incf	memset@n,w,c
  3862  006876  E1F3               	bnz	l3424
  3863  006878  2847               	incf	memset@n+1,w,c
  3864  00687A  B4D8               	btfsc	status,2,c
  3865  00687C  0012               	return	
  3866  00687E  D7EF               	goto	l3424
  3867  006880                     __end_of_memset:
  3868                           	opt callstack 0
  3869                           
  3870 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  3871 ;; Defined at:
  3872 ;;		line 117 in file "../usb_callback.c"
  3873 ;; Parameters:    Size  Location     Type
  3874 ;;  event           2   11[COMRAM] enum E3680
  3875 ;;  pdata           2   13[COMRAM] PTR void 
  3876 ;;		 -> USTATcopy(1), NULL(0), USBActiveConfiguration(1), 
  3877 ;;  size            2   15[COMRAM] unsigned short 
  3878 ;; Auto vars:     Size  Location     Type
  3879 ;;		None
  3880 ;; Return value:  Size  Location     Type
  3881 ;;                  1    wreg      enum E3
  3882 ;; Registers used:
  3883 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3884 ;; Tracked objects:
  3885 ;;		On entry : 0/0
  3886 ;;		On exit  : 0/0
  3887 ;;		Unchanged: 0/0
  3888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  3889 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0
  3890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0
  3891 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0
  3892 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0
  3893 ;;Total ram usage:        8 bytes
  3894 ;; Hardware stack levels used:    1
  3895 ;; Hardware stack levels required when called:    3
  3896 ;; This function calls:
  3897 ;;		_USBCBCheckOtherReq
  3898 ;;		_USBCBErrorHandler
  3899 ;;		_USBCBInitEP
  3900 ;;		_USBCBStdSetDscHandler
  3901 ;;		_USBCBSuspend
  3902 ;;		_USBCBWakeFromSuspend
  3903 ;;		_USBCB_SOF_Handler
  3904 ;; This function is called by:
  3905 ;;		_USBDeviceTasks
  3906 ;;		_USBSuspend
  3907 ;;		_USBWakeFromSuspend
  3908 ;;		_USBCtrlTrfSetupHandler
  3909 ;;		_USBCheckStdRequest
  3910 ;;		_USBStdSetCfgHandler
  3911 ;; This function uses a non-reentrant model
  3912 ;;
  3913                           
  3914                           	psect	text18
  3915  006B98                     __ptext18:
  3916                           	opt callstack 0
  3917  006B98                     _USER_USB_CALLBACK_EVENT_HANDLER:
  3918                           	opt callstack 26
  3919                           
  3920                           ;usb_callback.c: 119: switch(event)
  3921                           
  3922                           ;incstack = 0
  3923  006B98  D017               	goto	l3448
  3924  006B9A                     l3432:
  3925                           
  3926                           ;usb_callback.c: 122: USBCBInitEP();
  3927  006B9A  ECC5  F034         	call	_USBCBInitEP	;wreg free
  3928                           
  3929                           ;usb_callback.c: 123: break;
  3930  006B9E  0012               	return	
  3931  006BA0                     l3434:
  3932                           
  3933                           ;usb_callback.c: 125: USBCBStdSetDscHandler();
  3934  006BA0  ECFC  F033         	call	_USBCBStdSetDscHandler	;wreg free
  3935                           
  3936                           ;usb_callback.c: 126: break;
  3937  006BA4  0012               	return	
  3938  006BA6                     l3436:
  3939                           
  3940                           ;usb_callback.c: 128: USBCBCheckOtherReq();
  3941  006BA6  ECA6  F034         	call	_USBCBCheckOtherReq	;wreg free
  3942                           
  3943                           ;usb_callback.c: 129: break;
  3944  006BAA  0012               	return	
  3945  006BAC                     l3438:
  3946                           
  3947                           ;usb_callback.c: 131: USBCB_SOF_Handler();
  3948  006BAC  ECFF  F033         	call	_USBCB_SOF_Handler	;wreg free
  3949                           
  3950                           ;usb_callback.c: 132: break;
  3951  006BB0  0012               	return	
  3952  006BB2                     l3440:
  3953                           
  3954                           ;usb_callback.c: 134: USBCBSuspend();
  3955  006BB2  ECFD  F033         	call	_USBCBSuspend	;wreg free
  3956                           
  3957                           ;usb_callback.c: 135: break;
  3958  006BB6  0012               	return	
  3959  006BB8                     l3442:
  3960                           
  3961                           ;usb_callback.c: 137: USBCBWakeFromSuspend();
  3962  006BB8  ECFE  F033         	call	_USBCBWakeFromSuspend	;wreg free
  3963                           
  3964                           ;usb_callback.c: 138: break;
  3965  006BBC  0012               	return	
  3966  006BBE                     l3444:
  3967                           
  3968                           ;usb_callback.c: 140: USBCBErrorHandler();
  3969  006BBE  ECFB  F033         	call	_USBCBErrorHandler	;wreg free
  3970                           
  3971                           ;usb_callback.c: 141: break;
  3972  006BC2  0012               	return	
  3973  006BC4                     l768:
  3974  006BC4  F000               	nop		;# 
  3975                           
  3976                           ;usb_callback.c: 144: break;
  3977  006BC6  0012               	return	
  3978  006BC8                     l3448:
  3979  006BC8  C04D  F053         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
  3980  006BCC  C04E  F054         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
  3981                           
  3982                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  3983                           ; Switch size 1, requested type "simple"
  3984                           ; Number of cases is 2, Range of values is 0 to 127
  3985                           ; switch strategies available:
  3986                           ; Name         Instructions Cycles
  3987                           ; simple_byte            7     4 (average)
  3988                           ;	Chosen strategy is simple_byte
  3989  006BD0  5054               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
  3990  006BD2  0A00               	xorlw	0	; case 0
  3991  006BD4  B4D8               	btfsc	status,2,c
  3992  006BD6  D004               	goto	l4522
  3993  006BD8  0A7F               	xorlw	127	; case 127
  3994  006BDA  A4D8               	btfss	status,2,c
  3995  006BDC  0012               	return	
  3996  006BDE  D017               	goto	l4524
  3997  006BE0                     l4522:
  3998                           
  3999                           ; Switch size 1, requested type "simple"
  4000                           ; Number of cases is 7, Range of values is 1 to 117
  4001                           ; switch strategies available:
  4002                           ; Name         Instructions Cycles
  4003                           ; simple_byte           22    12 (average)
  4004                           ;	Chosen strategy is simple_byte
  4005  006BE0  5053               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
  4006  006BE2  0A01               	xorlw	1	; case 1
  4007  006BE4  B4D8               	btfsc	status,2,c
  4008  006BE6  D7D9               	goto	l3432
  4009  006BE8  0A03               	xorlw	3	; case 2
  4010  006BEA  B4D8               	btfsc	status,2,c
  4011  006BEC  D7D9               	goto	l3434
  4012  006BEE  0A01               	xorlw	1	; case 3
  4013  006BF0  B4D8               	btfsc	status,2,c
  4014  006BF2  D7D9               	goto	l3436
  4015  006BF4  0A71               	xorlw	113	; case 114
  4016  006BF6  B4D8               	btfsc	status,2,c
  4017  006BF8  D7E5               	goto	l768
  4018  006BFA  0A01               	xorlw	1	; case 115
  4019  006BFC  B4D8               	btfsc	status,2,c
  4020  006BFE  D7D6               	goto	l3438
  4021  006C00  0A07               	xorlw	7	; case 116
  4022  006C02  B4D8               	btfsc	status,2,c
  4023  006C04  D7D9               	goto	l3442
  4024  006C06  0A01               	xorlw	1	; case 117
  4025  006C08  A4D8               	btfss	status,2,c
  4026  006C0A  0012               	return	
  4027  006C0C  D7D2               	goto	l3440
  4028  006C0E                     l4524:
  4029                           
  4030                           ; Switch size 1, requested type "simple"
  4031                           ; Number of cases is 1, Range of values is 255 to 255
  4032                           ; switch strategies available:
  4033                           ; Name         Instructions Cycles
  4034                           ; simple_byte            4     3 (average)
  4035                           ;	Chosen strategy is simple_byte
  4036  006C0E  5053               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
  4037  006C10  0AFF               	xorlw	255	; case 255
  4038  006C12  A4D8               	btfss	status,2,c
  4039  006C14  0012               	return	
  4040  006C16  D7D3               	goto	l3444
  4041  006C18                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
  4042                           	opt callstack 0
  4043                           
  4044 ;; *************** function _USBCB_SOF_Handler *****************
  4045 ;; Defined at:
  4046 ;;		line 57 in file "../usb_callback.c"
  4047 ;; Parameters:    Size  Location     Type
  4048 ;;		None
  4049 ;; Auto vars:     Size  Location     Type
  4050 ;;		None
  4051 ;; Return value:  Size  Location     Type
  4052 ;;                  1    wreg      void 
  4053 ;; Registers used:
  4054 ;;		None
  4055 ;; Tracked objects:
  4056 ;;		On entry : 0/0
  4057 ;;		On exit  : 0/0
  4058 ;;		Unchanged: 0/0
  4059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  4060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  4061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0
  4062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  4063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0
  4064 ;;Total ram usage:        0 bytes
  4065 ;; Hardware stack levels used:    1
  4066 ;; This function calls:
  4067 ;;		Nothing
  4068 ;; This function is called by:
  4069 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4070 ;; This function uses a non-reentrant model
  4071 ;;
  4072                           
  4073                           	psect	text19
  4074  0067FE                     __ptext19:
  4075                           	opt callstack 0
  4076  0067FE                     _USBCB_SOF_Handler:
  4077                           	opt callstack 28
  4078                           
  4079                           ;incstack = 0
  4080  0067FE  0012               	return		;funcret
  4081  006800                     __end_of_USBCB_SOF_Handler:
  4082                           	opt callstack 0
  4083                           
  4084 ;; *************** function _USBCBWakeFromSuspend *****************
  4085 ;; Defined at:
  4086 ;;		line 52 in file "../usb_callback.c"
  4087 ;; Parameters:    Size  Location     Type
  4088 ;;		None
  4089 ;; Auto vars:     Size  Location     Type
  4090 ;;		None
  4091 ;; Return value:  Size  Location     Type
  4092 ;;                  1    wreg      void 
  4093 ;; Registers used:
  4094 ;;		None
  4095 ;; Tracked objects:
  4096 ;;		On entry : 0/0
  4097 ;;		On exit  : 0/0
  4098 ;;		Unchanged: 0/0
  4099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  4100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  4101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0
  4102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  4103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0
  4104 ;;Total ram usage:        0 bytes
  4105 ;; Hardware stack levels used:    1
  4106 ;; This function calls:
  4107 ;;		Nothing
  4108 ;; This function is called by:
  4109 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4110 ;; This function uses a non-reentrant model
  4111 ;;
  4112                           
  4113                           	psect	text20
  4114  0067FC                     __ptext20:
  4115                           	opt callstack 0
  4116  0067FC                     _USBCBWakeFromSuspend:
  4117                           	opt callstack 28
  4118                           
  4119                           ;incstack = 0
  4120  0067FC  0012               	return		;funcret
  4121  0067FE                     __end_of_USBCBWakeFromSuspend:
  4122                           	opt callstack 0
  4123                           
  4124 ;; *************** function _USBCBSuspend *****************
  4125 ;; Defined at:
  4126 ;;		line 40 in file "../usb_callback.c"
  4127 ;; Parameters:    Size  Location     Type
  4128 ;;		None
  4129 ;; Auto vars:     Size  Location     Type
  4130 ;;		None
  4131 ;; Return value:  Size  Location     Type
  4132 ;;                  1    wreg      void 
  4133 ;; Registers used:
  4134 ;;		None
  4135 ;; Tracked objects:
  4136 ;;		On entry : 0/0
  4137 ;;		On exit  : 0/0
  4138 ;;		Unchanged: 0/0
  4139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  4140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  4141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0
  4142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  4143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0
  4144 ;;Total ram usage:        0 bytes
  4145 ;; Hardware stack levels used:    1
  4146 ;; This function calls:
  4147 ;;		Nothing
  4148 ;; This function is called by:
  4149 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4150 ;; This function uses a non-reentrant model
  4151 ;;
  4152                           
  4153                           	psect	text21
  4154  0067FA                     __ptext21:
  4155                           	opt callstack 0
  4156  0067FA                     _USBCBSuspend:
  4157                           	opt callstack 28
  4158                           
  4159                           ;incstack = 0
  4160  0067FA  0012               	return		;funcret
  4161  0067FC                     __end_of_USBCBSuspend:
  4162                           	opt callstack 0
  4163                           
  4164 ;; *************** function _USBCBStdSetDscHandler *****************
  4165 ;; Defined at:
  4166 ;;		line 85 in file "../usb_callback.c"
  4167 ;; Parameters:    Size  Location     Type
  4168 ;;		None
  4169 ;; Auto vars:     Size  Location     Type
  4170 ;;		None
  4171 ;; Return value:  Size  Location     Type
  4172 ;;                  1    wreg      void 
  4173 ;; Registers used:
  4174 ;;		None
  4175 ;; Tracked objects:
  4176 ;;		On entry : 0/0
  4177 ;;		On exit  : 0/0
  4178 ;;		Unchanged: 0/0
  4179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  4180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  4181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0
  4182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  4183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0
  4184 ;;Total ram usage:        0 bytes
  4185 ;; Hardware stack levels used:    1
  4186 ;; This function calls:
  4187 ;;		Nothing
  4188 ;; This function is called by:
  4189 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4190 ;; This function uses a non-reentrant model
  4191 ;;
  4192                           
  4193                           	psect	text22
  4194  0067F8                     __ptext22:
  4195                           	opt callstack 0
  4196  0067F8                     _USBCBStdSetDscHandler:
  4197                           	opt callstack 28
  4198                           
  4199                           ;incstack = 0
  4200  0067F8  0012               	return		;funcret
  4201  0067FA                     __end_of_USBCBStdSetDscHandler:
  4202                           	opt callstack 0
  4203                           
  4204 ;; *************** function _USBCBInitEP *****************
  4205 ;; Defined at:
  4206 ;;		line 91 in file "../usb_callback.c"
  4207 ;; Parameters:    Size  Location     Type
  4208 ;;		None
  4209 ;; Auto vars:     Size  Location     Type
  4210 ;;		None
  4211 ;; Return value:  Size  Location     Type
  4212 ;;                  1    wreg      void 
  4213 ;; Registers used:
  4214 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4215 ;; Tracked objects:
  4216 ;;		On entry : 0/0
  4217 ;;		On exit  : 0/0
  4218 ;;		Unchanged: 0/0
  4219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  4220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  4221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0
  4222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  4223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0
  4224 ;;Total ram usage:        0 bytes
  4225 ;; Hardware stack levels used:    1
  4226 ;; Hardware stack levels required when called:    2
  4227 ;; This function calls:
  4228 ;;		_USBEnableEndpoint
  4229 ;;		_USBTransferOnePacket
  4230 ;; This function is called by:
  4231 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4232 ;; This function uses a non-reentrant model
  4233 ;;
  4234                           
  4235                           	psect	text23
  4236  00698A                     __ptext23:
  4237                           	opt callstack 0
  4238  00698A                     _USBCBInitEP:
  4239                           	opt callstack 26
  4240                           
  4241                           ;usb_callback.c: 94: USBEnableEndpoint(1,0x04|0x02|0x10|0x08);
  4242                           
  4243                           ;incstack = 0
  4244  00698A  0E1E               	movlw	30
  4245  00698C  6E49               	movwf	USBEnableEndpoint@options,c
  4246  00698E  0E01               	movlw	1
  4247  006990  EC8A  F034         	call	_USBEnableEndpoint
  4248                           
  4249                           ;usb_callback.c: 95: USBEnableEndpoint(2,0x04|0x02|0x10|0x08);
  4250  006994  0E1E               	movlw	30
  4251  006996  6E49               	movwf	USBEnableEndpoint@options,c
  4252  006998  0E02               	movlw	2
  4253  00699A  EC8A  F034         	call	_USBEnableEndpoint
  4254                           
  4255                           ;usb_callback.c: 96: USBEnableEndpoint(3,0x04|0x02|0x10|0x08);
  4256  00699E  0E1E               	movlw	30
  4257  0069A0  6E49               	movwf	USBEnableEndpoint@options,c
  4258  0069A2  0E03               	movlw	3
  4259  0069A4  EC8A  F034         	call	_USBEnableEndpoint
  4260                           
  4261                           ;usb_callback.c: 98: lastOUTTransmission_k1 = USBTransferOnePacket(3,0,(BYTE*)&hid_repor
      +                          t_out_k1,1);
  4262  0069A8  0E00               	movlw	0
  4263  0069AA  6E42               	movwf	USBTransferOnePacket@dir,c
  4264  0069AC  0E7A               	movlw	122
  4265  0069AE  6E43               	movwf	USBTransferOnePacket@data,c
  4266  0069B0  0E06               	movlw	6
  4267  0069B2  6E44               	movwf	USBTransferOnePacket@data+1,c
  4268  0069B4  0E01               	movlw	1
  4269  0069B6  6E45               	movwf	USBTransferOnePacket@len,c
  4270  0069B8  0E03               	movlw	3
  4271  0069BA  EC69  F037         	call	_USBTransferOnePacket
  4272  0069BE  C042  F0D6         	movff	?_USBTransferOnePacket,_lastOUTTransmission_k1
  4273  0069C2  C043  F0D7         	movff	?_USBTransferOnePacket+1,_lastOUTTransmission_k1+1
  4274  0069C6  0012               	return		;funcret
  4275  0069C8                     __end_of_USBCBInitEP:
  4276                           	opt callstack 0
  4277                           
  4278 ;; *************** function _USBTransferOnePacket *****************
  4279 ;; Defined at:
  4280 ;;		line 2480 in file "../USB Stack/usb_device.c"
  4281 ;; Parameters:    Size  Location     Type
  4282 ;;  ep              1    wreg     unsigned char 
  4283 ;;  dir             1    0[COMRAM] unsigned char 
  4284 ;;  data            2    1[COMRAM] PTR unsigned char 
  4285 ;;		 -> hid_report_in_k1(8), hid_report_out_k1(1), joystick_input_j2(7), joystick_input_j1(7), 
  4286 ;;  len             1    3[COMRAM] unsigned char 
  4287 ;; Auto vars:     Size  Location     Type
  4288 ;;  ep              1    4[COMRAM] unsigned char 
  4289 ;;  handle          2    5[COMRAM] PTR volatile struct __BD
  4290 ;;		 -> BDT(64), 
  4291 ;; Return value:  Size  Location     Type
  4292 ;;                  2    0[COMRAM] PTR void 
  4293 ;; Registers used:
  4294 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4295 ;; Tracked objects:
  4296 ;;		On entry : 0/0
  4297 ;;		On exit  : 0/0
  4298 ;;		Unchanged: 0/0
  4299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  4300 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0
  4301 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0
  4302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  4303 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0
  4304 ;;Total ram usage:        7 bytes
  4305 ;; Hardware stack levels used:    1
  4306 ;; This function calls:
  4307 ;;		Nothing
  4308 ;; This function is called by:
  4309 ;;		_USBCBInitEP
  4310 ;;		_processKeyboard
  4311 ;;		_processJoystick_j1
  4312 ;;		_processJoystick_j2
  4313 ;; This function uses a non-reentrant model
  4314 ;;
  4315                           
  4316                           	psect	text24
  4317  006ED2                     __ptext24:
  4318                           	opt callstack 0
  4319  006ED2                     _USBTransferOnePacket:
  4320                           	opt callstack 29
  4321                           
  4322                           ;incstack = 0
  4323                           ;USBTransferOnePacket@ep stored from wreg
  4324  006ED2  6E46               	movwf	USBTransferOnePacket@ep,c
  4325                           
  4326                           ;usb_device.c: 2482: volatile BDT_ENTRY* handle;;usb_device.c: 2485: if(dir != 0)
  4327  006ED4  5042               	movf	USBTransferOnePacket@dir,w,c
  4328  006ED6  B4D8               	btfsc	status,2,c
  4329  006ED8  D007               	goto	l3322
  4330                           
  4331                           ;usb_device.c: 2486: {;usb_device.c: 2488: handle = pBDTEntryIn[ep];
  4332  006EDA  5046               	movf	USBTransferOnePacket@ep,w,c
  4333  006EDC  0D02               	mullw	2
  4334  006EDE  0E1F               	movlw	low _pBDTEntryIn
  4335  006EE0  24F3               	addwf	prodl,w,c
  4336  006EE2  6ED9               	movwf	fsr2l,c
  4337  006EE4  0E00               	movlw	high _pBDTEntryIn
  4338  006EE6  D006               	goto	L2
  4339  006EE8                     l3322:
  4340                           
  4341                           ;usb_device.c: 2490: else;usb_device.c: 2491: {;usb_device.c: 2493: handle = pBDTEntryOu
      +                          t[ep];
  4342  006EE8  5046               	movf	USBTransferOnePacket@ep,w,c
  4343  006EEA  0D02               	mullw	2
  4344  006EEC  0EC2               	movlw	low _pBDTEntryOut
  4345  006EEE  24F3               	addwf	prodl,w,c
  4346  006EF0  6ED9               	movwf	fsr2l,c
  4347  006EF2  0E00               	movlw	high _pBDTEntryOut
  4348  006EF4                     L2:
  4349  006EF4  20F4               	addwfc	prodh,w,c
  4350  006EF6  6EDA               	movwf	fsr2h,c
  4351  006EF8  CFDE F047          	movff	postinc2,USBTransferOnePacket@handle
  4352  006EFC  CFDD F048          	movff	postdec2,USBTransferOnePacket@handle+1
  4353                           
  4354                           ;usb_device.c: 2494: };usb_device.c: 2507: handle->ADR = (BYTE*)data;
  4355  006F00  EE20 F002          	lfsr	2,2
  4356  006F04  5047               	movf	USBTransferOnePacket@handle,w,c
  4357  006F06  26D9               	addwf	fsr2l,f,c
  4358  006F08  5048               	movf	USBTransferOnePacket@handle+1,w,c
  4359  006F0A  22DA               	addwfc	fsr2h,f,c
  4360  006F0C  C043  FFDE         	movff	USBTransferOnePacket@data,postinc2	;volatile
  4361  006F10  C044  FFDD         	movff	USBTransferOnePacket@data+1,postdec2	;volatile
  4362                           
  4363                           ;usb_device.c: 2508: handle->CNT = len;
  4364  006F14  EE20 F001          	lfsr	2,1
  4365  006F18  5047               	movf	USBTransferOnePacket@handle,w,c
  4366  006F1A  26D9               	addwf	fsr2l,f,c
  4367  006F1C  5048               	movf	USBTransferOnePacket@handle+1,w,c
  4368  006F1E  22DA               	addwfc	fsr2h,f,c
  4369  006F20  C045  FFDF         	movff	USBTransferOnePacket@len,indf2
  4370                           
  4371                           ;usb_device.c: 2509: handle->STAT.Val &= 0x40;
  4372  006F24  C047  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  4373  006F28  C048  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  4374  006F2C  0E40               	movlw	64
  4375  006F2E  16DF               	andwf	indf2,f,c
  4376                           
  4377                           ;usb_device.c: 2510: handle->STAT.Val |= 0x80 | 0x08;
  4378  006F30  C047  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  4379  006F34  C048  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  4380  006F38  0E88               	movlw	136
  4381  006F3A  12DF               	iorwf	indf2,f,c
  4382                           
  4383                           ;usb_device.c: 2513: if(dir != 0)
  4384  006F3C  5042               	movf	USBTransferOnePacket@dir,w,c
  4385  006F3E  B4D8               	btfsc	status,2,c
  4386  006F40  D007               	goto	l3336
  4387                           
  4388                           ;usb_device.c: 2514: {;usb_device.c: 2516: ((BYTE_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;
  4389  006F42  5046               	movf	USBTransferOnePacket@ep,w,c
  4390  006F44  0D02               	mullw	2
  4391  006F46  0E1F               	movlw	low _pBDTEntryIn
  4392  006F48  24F3               	addwf	prodl,w,c
  4393  006F4A  6ED9               	movwf	fsr2l,c
  4394  006F4C  0E00               	movlw	high _pBDTEntryIn
  4395  006F4E  D006               	goto	L3
  4396  006F50                     l3336:
  4397                           
  4398                           ;usb_device.c: 2518: else;usb_device.c: 2519: {;usb_device.c: 2521: ((BYTE_VAL*)&pBDTEnt
      +                          ryOut[ep])->Val ^= 0x0004;
  4399  006F50  5046               	movf	USBTransferOnePacket@ep,w,c
  4400  006F52  0D02               	mullw	2
  4401  006F54  0EC2               	movlw	low _pBDTEntryOut
  4402  006F56  24F3               	addwf	prodl,w,c
  4403  006F58  6ED9               	movwf	fsr2l,c
  4404  006F5A  0E00               	movlw	high _pBDTEntryOut
  4405  006F5C                     L3:
  4406  006F5C  20F4               	addwfc	prodh,w,c
  4407  006F5E  6EDA               	movwf	fsr2h,c
  4408  006F60  0E04               	movlw	4
  4409  006F62  1ADF               	xorwf	indf2,f,c
  4410                           
  4411                           ;usb_device.c: 2522: };usb_device.c: 2523: return (void*)handle;
  4412  006F64  C047  F042         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
  4413  006F68  C048  F043         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
  4414  006F6C  0012               	return		;funcret
  4415  006F6E                     __end_of_USBTransferOnePacket:
  4416                           	opt callstack 0
  4417                           
  4418 ;; *************** function _USBEnableEndpoint *****************
  4419 ;; Defined at:
  4420 ;;		line 2380 in file "../USB Stack/usb_device.c"
  4421 ;; Parameters:    Size  Location     Type
  4422 ;;  ep              1    wreg     unsigned char 
  4423 ;;  options         1    7[COMRAM] unsigned char 
  4424 ;; Auto vars:     Size  Location     Type
  4425 ;;  ep              1   10[COMRAM] unsigned char 
  4426 ;;  p               2    8[COMRAM] PTR unsigned char 
  4427 ;;		 -> UEP0(1), 
  4428 ;; Return value:  Size  Location     Type
  4429 ;;                  1    wreg      void 
  4430 ;; Registers used:
  4431 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4432 ;; Tracked objects:
  4433 ;;		On entry : 0/0
  4434 ;;		On exit  : 0/0
  4435 ;;		Unchanged: 0/0
  4436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  4437 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0
  4438 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0
  4439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  4440 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0
  4441 ;;Total ram usage:        4 bytes
  4442 ;; Hardware stack levels used:    1
  4443 ;; Hardware stack levels required when called:    1
  4444 ;; This function calls:
  4445 ;;		_USBConfigureEndpoint
  4446 ;; This function is called by:
  4447 ;;		_USBCBInitEP
  4448 ;; This function uses a non-reentrant model
  4449 ;;
  4450                           
  4451                           	psect	text25
  4452  006914                     __ptext25:
  4453                           	opt callstack 0
  4454  006914                     _USBEnableEndpoint:
  4455                           	opt callstack 26
  4456                           
  4457                           ;incstack = 0
  4458                           ;USBEnableEndpoint@ep stored from wreg
  4459  006914  6E4C               	movwf	USBEnableEndpoint@ep,c
  4460                           
  4461                           ;usb_device.c: 2384: {;usb_device.c: 2385: unsigned char* p;;usb_device.c: 2390: p = (un
      +                          signed char*)(&UEP0+ep);
  4462  006916  0E70               	movlw	112
  4463  006918  244C               	addwf	USBEnableEndpoint@ep,w,c
  4464  00691A  6E4A               	movwf	USBEnableEndpoint@p,c
  4465  00691C  6A4B               	clrf	USBEnableEndpoint@p+1,c
  4466  00691E  0E0F               	movlw	15
  4467  006920  224B               	addwfc	USBEnableEndpoint@p+1,f,c
  4468                           
  4469                           ;usb_device.c: 2392: *p = options;
  4470  006922  C04A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
  4471  006926  C04B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
  4472  00692A  C049  FFDF         	movff	USBEnableEndpoint@options,indf2
  4473                           
  4474                           ;usb_device.c: 2393: };usb_device.c: 2395: if(options & 0x04)
  4475  00692E  A449               	btfss	USBEnableEndpoint@options,2,c
  4476  006930  D005               	goto	l3314
  4477                           
  4478                           ;usb_device.c: 2396: {;usb_device.c: 2397: USBConfigureEndpoint(ep,0);
  4479  006932  0E00               	movlw	0
  4480  006934  6E42               	movwf	USBConfigureEndpoint@direction,c
  4481  006936  504C               	movf	USBEnableEndpoint@ep,w,c
  4482  006938  EC95  F036         	call	_USBConfigureEndpoint
  4483  00693C                     l3314:
  4484                           
  4485                           ;usb_device.c: 2398: };usb_device.c: 2399: if(options & 0x02)
  4486  00693C  A249               	btfss	USBEnableEndpoint@options,1,c
  4487  00693E  0012               	return	
  4488                           
  4489                           ;usb_device.c: 2400: {;usb_device.c: 2401: USBConfigureEndpoint(ep,1);
  4490  006940  0E01               	movlw	1
  4491  006942  6E42               	movwf	USBConfigureEndpoint@direction,c
  4492  006944  504C               	movf	USBEnableEndpoint@ep,w,c
  4493  006946  EC95  F036         	call	_USBConfigureEndpoint
  4494  00694A  0012               	return		;funcret
  4495  00694C                     __end_of_USBEnableEndpoint:
  4496                           	opt callstack 0
  4497                           
  4498 ;; *************** function _USBConfigureEndpoint *****************
  4499 ;; Defined at:
  4500 ;;		line 2281 in file "../USB Stack/usb_device.c"
  4501 ;; Parameters:    Size  Location     Type
  4502 ;;  EPNum           1    wreg     unsigned char 
  4503 ;;  direction       1    0[COMRAM] unsigned char 
  4504 ;; Auto vars:     Size  Location     Type
  4505 ;;  EPNum           1    4[COMRAM] unsigned char 
  4506 ;;  handle          2    5[COMRAM] PTR volatile struct __BD
  4507 ;;		 -> BDT(64), 
  4508 ;;  workaround      1    3[COMRAM] unsigned char 
  4509 ;; Return value:  Size  Location     Type
  4510 ;;                  1    wreg      void 
  4511 ;; Registers used:
  4512 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4513 ;; Tracked objects:
  4514 ;;		On entry : 0/0
  4515 ;;		On exit  : 0/0
  4516 ;;		Unchanged: 0/0
  4517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  4518 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0
  4519 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0
  4520 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0
  4521 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0
  4522 ;;Total ram usage:        7 bytes
  4523 ;; Hardware stack levels used:    1
  4524 ;; This function calls:
  4525 ;;		Nothing
  4526 ;; This function is called by:
  4527 ;;		_USBEnableEndpoint
  4528 ;; This function uses a non-reentrant model
  4529 ;;
  4530                           
  4531                           	psect	text26
  4532  006D2A                     __ptext26:
  4533                           	opt callstack 0
  4534  006D2A                     _USBConfigureEndpoint:
  4535                           	opt callstack 26
  4536                           
  4537                           ;incstack = 0
  4538                           ;USBConfigureEndpoint@EPNum stored from wreg
  4539  006D2A  6E46               	movwf	USBConfigureEndpoint@EPNum,c
  4540                           
  4541                           ;usb_device.c: 2283: volatile BDT_ENTRY* handle;;usb_device.c: 2285: unsigned char worka
      +                          round;;usb_device.c: 2288: handle = (volatile BDT_ENTRY*)&BDT[0];
  4542  006D2C  0E00               	movlw	0
  4543  006D2E  6E47               	movwf	USBConfigureEndpoint@handle,c
  4544  006D30  0E04               	movlw	4
  4545  006D32  6E48               	movwf	USBConfigureEndpoint@handle+1,c
  4546                           
  4547                           ;usb_device.c: 2293: workaround = (4*(4*EPNum+2*direction+0));
  4548  006D34  5042               	movf	USBConfigureEndpoint@direction,w,c
  4549  006D36  0D02               	mullw	2
  4550  006D38  CFF3 F043          	movff	prodl,??_USBConfigureEndpoint
  4551  006D3C  5046               	movf	USBConfigureEndpoint@EPNum,w,c
  4552  006D3E  0D04               	mullw	4
  4553  006D40  50F3               	movf	prodl,w,c
  4554  006D42  2443               	addwf	??_USBConfigureEndpoint,w,c
  4555  006D44  6E44               	movwf	(??_USBConfigureEndpoint+1)& (0+255),c
  4556  006D46  90D8               	bcf	status,0,c
  4557  006D48  3644               	rlcf	??_USBConfigureEndpoint+1,f,c
  4558  006D4A  90D8               	bcf	status,0,c
  4559  006D4C  3444               	rlcf	??_USBConfigureEndpoint+1,w,c
  4560  006D4E  6E45               	movwf	USBConfigureEndpoint@workaround,c
  4561                           
  4562                           ;usb_device.c: 2294: workaround = workaround/sizeof(BDT_ENTRY);
  4563  006D50  4045               	rrncf	USBConfigureEndpoint@workaround,w,c
  4564  006D52  42E8               	rrncf	wreg,f,c
  4565  006D54  0B3F               	andlw	63
  4566  006D56  6E45               	movwf	USBConfigureEndpoint@workaround,c
  4567                           
  4568                           ;usb_device.c: 2295: handle += workaround;
  4569  006D58  5045               	movf	USBConfigureEndpoint@workaround,w,c
  4570  006D5A  0D04               	mullw	4
  4571  006D5C  50F3               	movf	prodl,w,c
  4572  006D5E  2647               	addwf	USBConfigureEndpoint@handle,f,c
  4573  006D60  50F4               	movf	prodh,w,c
  4574  006D62  2248               	addwfc	USBConfigureEndpoint@handle+1,f,c
  4575                           
  4576                           ;usb_device.c: 2299: handle->STAT.UOWN = 0;
  4577  006D64  C047  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
  4578  006D68  C048  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
  4579  006D6C  9EDF               	bcf	indf2,7,c
  4580                           
  4581                           ;usb_device.c: 2301: if(direction == 0)
  4582  006D6E  5042               	movf	USBConfigureEndpoint@direction,w,c
  4583  006D70  A4D8               	btfss	status,2,c
  4584  006D72  D007               	goto	l3176
  4585                           
  4586                           ;usb_device.c: 2302: {;usb_device.c: 2303: pBDTEntryOut[EPNum] = handle;
  4587  006D74  5046               	movf	USBConfigureEndpoint@EPNum,w,c
  4588  006D76  0D02               	mullw	2
  4589  006D78  0EC2               	movlw	low _pBDTEntryOut
  4590  006D7A  24F3               	addwf	prodl,w,c
  4591  006D7C  6ED9               	movwf	fsr2l,c
  4592  006D7E  0E00               	movlw	high _pBDTEntryOut
  4593  006D80  D006               	goto	L4
  4594  006D82                     l3176:
  4595                           
  4596                           ;usb_device.c: 2305: else;usb_device.c: 2306: {;usb_device.c: 2307: pBDTEntryIn[EPNum] =
      +                           handle;
  4597  006D82  5046               	movf	USBConfigureEndpoint@EPNum,w,c
  4598  006D84  0D02               	mullw	2
  4599  006D86  0E1F               	movlw	low _pBDTEntryIn
  4600  006D88  24F3               	addwf	prodl,w,c
  4601  006D8A  6ED9               	movwf	fsr2l,c
  4602  006D8C  0E00               	movlw	high _pBDTEntryIn
  4603  006D8E                     L4:
  4604  006D8E  20F4               	addwfc	prodh,w,c
  4605  006D90  6EDA               	movwf	fsr2h,c
  4606  006D92  C047  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
  4607  006D96  C048  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
  4608                           
  4609                           ;usb_device.c: 2308: };usb_device.c: 2311: handle->STAT.DTS = 0;
  4610  006D9A  C047  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
  4611  006D9E  C048  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
  4612  006DA2  9CDF               	bcf	indf2,6,c
  4613                           
  4614                           ;usb_device.c: 2312: (handle+1)->STAT.DTS = 1;
  4615  006DA4  EE20 F004          	lfsr	2,4
  4616  006DA8  5047               	movf	USBConfigureEndpoint@handle,w,c
  4617  006DAA  26D9               	addwf	fsr2l,f,c
  4618  006DAC  5048               	movf	USBConfigureEndpoint@handle+1,w,c
  4619  006DAE  22DA               	addwfc	fsr2h,f,c
  4620  006DB0  8CDF               	bsf	indf2,6,c
  4621  006DB2  0012               	return		;funcret
  4622  006DB4                     __end_of_USBConfigureEndpoint:
  4623                           	opt callstack 0
  4624                           
  4625 ;; *************** function _USBCBErrorHandler *****************
  4626 ;; Defined at:
  4627 ;;		line 66 in file "../usb_callback.c"
  4628 ;; Parameters:    Size  Location     Type
  4629 ;;		None
  4630 ;; Auto vars:     Size  Location     Type
  4631 ;;		None
  4632 ;; Return value:  Size  Location     Type
  4633 ;;                  1    wreg      void 
  4634 ;; Registers used:
  4635 ;;		None
  4636 ;; Tracked objects:
  4637 ;;		On entry : 0/0
  4638 ;;		On exit  : 0/0
  4639 ;;		Unchanged: 0/0
  4640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  4641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  4642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0
  4643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  4644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0
  4645 ;;Total ram usage:        0 bytes
  4646 ;; Hardware stack levels used:    1
  4647 ;; This function calls:
  4648 ;;		Nothing
  4649 ;; This function is called by:
  4650 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4651 ;; This function uses a non-reentrant model
  4652 ;;
  4653                           
  4654                           	psect	text27
  4655  0067F6                     __ptext27:
  4656                           	opt callstack 0
  4657  0067F6                     _USBCBErrorHandler:
  4658                           	opt callstack 28
  4659                           
  4660                           ;incstack = 0
  4661  0067F6  0012               	return		;funcret
  4662  0067F8                     __end_of_USBCBErrorHandler:
  4663                           	opt callstack 0
  4664                           
  4665 ;; *************** function _USBCBCheckOtherReq *****************
  4666 ;; Defined at:
  4667 ;;		line 73 in file "../usb_callback.c"
  4668 ;; Parameters:    Size  Location     Type
  4669 ;;		None
  4670 ;; Auto vars:     Size  Location     Type
  4671 ;;		None
  4672 ;; Return value:  Size  Location     Type
  4673 ;;                  1    wreg      void 
  4674 ;; Registers used:
  4675 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4676 ;; Tracked objects:
  4677 ;;		On entry : 0/0
  4678 ;;		On exit  : 0/0
  4679 ;;		Unchanged: 0/0
  4680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  4681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  4682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0
  4683 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0
  4684 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0
  4685 ;;Total ram usage:        2 bytes
  4686 ;; Hardware stack levels used:    1
  4687 ;; Hardware stack levels required when called:    1
  4688 ;; This function calls:
  4689 ;;		_USBCheckHIDRequest_j1
  4690 ;;		_USBCheckHIDRequest_j2
  4691 ;;		_USBCheckHIDRequest_k1
  4692 ;; This function is called by:
  4693 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4694 ;; This function uses a non-reentrant model
  4695 ;;
  4696                           
  4697                           	psect	text28
  4698  00694C                     __ptext28:
  4699                           	opt callstack 0
  4700  00694C                     _USBCBCheckOtherReq:
  4701                           	opt callstack 27
  4702                           
  4703                           ;usb_callback.c: 76: switch ( SetupPkt.wIndex ) {
  4704                           
  4705                           ;incstack = 0
  4706  00694C  D009               	goto	l3414
  4707  00694E                     l3406:
  4708  00694E  EC76  F038         	call	_USBCheckHIDRequest_j1	;wreg free
  4709  006952  0012               	return	
  4710  006954                     l3408:
  4711  006954  ECE4  F038         	call	_USBCheckHIDRequest_j2	;wreg free
  4712  006958  0012               	return	
  4713  00695A                     l3410:
  4714  00695A  EC52  F039         	call	_USBCheckHIDRequest_k1	;wreg free
  4715  00695E  0012               	return	
  4716  006960                     l3414:
  4717  006960  EE25 F004          	lfsr	2,1284	;volatile
  4718  006964  CFDE F042          	movff	postinc2,??_USBCBCheckOtherReq
  4719  006968  CFDD F043          	movff	postdec2,??_USBCBCheckOtherReq+1
  4720                           
  4721                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4722                           ; Switch size 1, requested type "simple"
  4723                           ; Number of cases is 1, Range of values is 0 to 0
  4724                           ; switch strategies available:
  4725                           ; Name         Instructions Cycles
  4726                           ; simple_byte            4     3 (average)
  4727                           ;	Chosen strategy is simple_byte
  4728  00696C  5043               	movf	??_USBCBCheckOtherReq+1,w,c
  4729  00696E  0A00               	xorlw	0	; case 0
  4730  006970  A4D8               	btfss	status,2,c
  4731  006972  0012               	return	
  4732                           
  4733                           ; Switch size 1, requested type "simple"
  4734                           ; Number of cases is 3, Range of values is 0 to 2
  4735                           ; switch strategies available:
  4736                           ; Name         Instructions Cycles
  4737                           ; simple_byte           10     6 (average)
  4738                           ;	Chosen strategy is simple_byte
  4739  006974  5042               	movf	??_USBCBCheckOtherReq,w,c
  4740  006976  0A00               	xorlw	0	; case 0
  4741  006978  B4D8               	btfsc	status,2,c
  4742  00697A  D7E9               	goto	l3406
  4743  00697C  0A01               	xorlw	1	; case 1
  4744  00697E  B4D8               	btfsc	status,2,c
  4745  006980  D7E9               	goto	l3408
  4746  006982  0A03               	xorlw	3	; case 2
  4747  006984  A4D8               	btfss	status,2,c
  4748  006986  0012               	return	
  4749  006988  D7E8               	goto	l3410
  4750  00698A                     __end_of_USBCBCheckOtherReq:
  4751                           	opt callstack 0
  4752                           
  4753 ;; *************** function _USBCheckHIDRequest_k1 *****************
  4754 ;; Defined at:
  4755 ;;		line 31 in file "../USB Stack/keyboard1_hid.c"
  4756 ;; Parameters:    Size  Location     Type
  4757 ;;		None
  4758 ;; Auto vars:     Size  Location     Type
  4759 ;;		None
  4760 ;; Return value:  Size  Location     Type
  4761 ;;                  1    wreg      void 
  4762 ;; Registers used:
  4763 ;;		wreg, status,2, status,0
  4764 ;; Tracked objects:
  4765 ;;		On entry : 0/0
  4766 ;;		On exit  : 0/0
  4767 ;;		Unchanged: 0/0
  4768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  4769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  4770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0
  4771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  4772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0
  4773 ;;Total ram usage:        0 bytes
  4774 ;; Hardware stack levels used:    1
  4775 ;; This function calls:
  4776 ;;		Nothing
  4777 ;; This function is called by:
  4778 ;;		_USBCBCheckOtherReq
  4779 ;; This function uses a non-reentrant model
  4780 ;;
  4781                           
  4782                           	psect	text29
  4783  0072A4                     __ptext29:
  4784                           	opt callstack 0
  4785  0072A4                     _USBCheckHIDRequest_k1:
  4786                           	opt callstack 27
  4787                           
  4788                           ;keyboard1_hid.c: 33: if(SetupPkt.Recipient != (0x01)) return;
  4789                           
  4790                           ;incstack = 0
  4791  0072A4  0105               	movlb	5	; () banked
  4792  0072A6  5100               	movf	0,w,b	;volatile
  4793  0072A8  0B1F               	andlw	31
  4794  0072AA  06E8               	decf	wreg,f,c
  4795  0072AC  A4D8               	btfss	status,2,c
  4796  0072AE  0012               	return	
  4797                           
  4798                           ; BSR set to: 5
  4799                           ;keyboard1_hid.c: 34: if(SetupPkt.bIntfID != 0x02) return;
  4800  0072B0  0E02               	movlw	2
  4801  0072B2  1904               	xorwf	4,w,b	;volatile
  4802  0072B4  A4D8               	btfss	status,2,c
  4803  0072B6  0012               	return	
  4804                           
  4805                           ; BSR set to: 5
  4806                           ;keyboard1_hid.c: 36: if(SetupPkt.bRequest == 6)
  4807  0072B8  0E06               	movlw	6
  4808  0072BA  1901               	xorwf	1,w,b	;volatile
  4809  0072BC  B4D8               	btfsc	status,2,c
  4810  0072BE  D01C               	goto	l3374
  4811  0072C0  D025               	goto	l3376
  4812  0072C2                     l3354:
  4813                           
  4814                           ; BSR set to: 5
  4815                           ;keyboard1_hid.c: 41: if(USBActiveConfiguration == 1)
  4816  0072C2  0441               	decf	_USBActiveConfiguration,w,c
  4817  0072C4  A4D8               	btfss	status,2,c
  4818  0072C6  D022               	goto	l3376
  4819                           
  4820                           ; BSR set to: 5
  4821                           ;keyboard1_hid.c: 42: {;keyboard1_hid.c: 43: { inPipes[0].pSrc.bRom = (const BYTE*)&conf
      +                          igDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC_K1)+3; inPipes[0].info.Va
      +                          l = 0x40 | 0x80 | 0x00; };
  4822  0072C8  0E24               	movlw	low (_configDescriptor1+18)
  4823  0072CA  6E27               	movwf	_inPipes,c
  4824  0072CC  0E7E               	movlw	high (_configDescriptor1+18)
  4825  0072CE  6E28               	movwf	_inPipes+1,c
  4826                           
  4827                           ; BSR set to: 5
  4828  0072D0  0E00               	movlw	0
  4829  0072D2  6E2C               	movwf	_inPipes+5,c
  4830  0072D4  0E09               	movlw	9
  4831  0072D6  6E2B               	movwf	_inPipes+4,c
  4832                           
  4833                           ; BSR set to: 5
  4834  0072D8  0EC0               	movlw	192
  4835  0072DA  D00C               	goto	L5
  4836  0072DC                     l3362:
  4837                           
  4838                           ; BSR set to: 5
  4839                           ;keyboard1_hid.c: 50: if(USBActiveConfiguration == 1)
  4840  0072DC  0441               	decf	_USBActiveConfiguration,w,c
  4841  0072DE  A4D8               	btfss	status,2,c
  4842  0072E0  D015               	goto	l3376
  4843                           
  4844                           ; BSR set to: 5
  4845                           ;keyboard1_hid.c: 51: {;keyboard1_hid.c: 52: { inPipes[0].pSrc.bRom = (const BYTE*)&hid_
      +                          rpt01_k1; inPipes[0].wCount.Val = sizeof(hid_rpt01_k1); inPipes[0].info.Val = 0x40 | 0x8
      +                          0 | 0x00; };
  4846  0072E2  0E0F               	movlw	low _hid_rpt01_k1
  4847  0072E4  6E27               	movwf	_inPipes,c
  4848  0072E6  0E7F               	movlw	high _hid_rpt01_k1
  4849  0072E8  6E28               	movwf	_inPipes+1,c
  4850                           
  4851                           ; BSR set to: 5
  4852  0072EA  0E00               	movlw	0
  4853  0072EC  6E2C               	movwf	_inPipes+5,c
  4854  0072EE  0E3F               	movlw	63
  4855  0072F0  D7F2               	goto	L6
  4856  0072F2                     l3370:
  4857                           
  4858                           ; BSR set to: 5
  4859                           ;keyboard1_hid.c: 59: inPipes[0].info.Val = 0x00 | 0x80;
  4860  0072F2  0E80               	movlw	128
  4861  0072F4                     L5:
  4862  0072F4  6E2A               	movwf	_inPipes+3,c
  4863                           
  4864                           ;keyboard1_hid.c: 60: break;
  4865  0072F6  D00A               	goto	l3376
  4866  0072F8                     l3374:
  4867                           
  4868                           ; BSR set to: 5
  4869  0072F8  5103               	movf	3,w,b	;volatile
  4870                           
  4871                           ; Switch size 1, requested type "simple"
  4872                           ; Number of cases is 3, Range of values is 33 to 35
  4873                           ; switch strategies available:
  4874                           ; Name         Instructions Cycles
  4875                           ; simple_byte           10     6 (average)
  4876                           ;	Chosen strategy is simple_byte
  4877  0072FA  0A21               	xorlw	33	; case 33
  4878  0072FC  B4D8               	btfsc	status,2,c
  4879  0072FE  D7E1               	goto	l3354
  4880  007300  0A03               	xorlw	3	; case 34
  4881  007302  B4D8               	btfsc	status,2,c
  4882  007304  D7EB               	goto	l3362
  4883  007306  0A01               	xorlw	1	; case 35
  4884  007308  B4D8               	btfsc	status,2,c
  4885  00730A  D7F3               	goto	l3370
  4886  00730C                     l3376:
  4887                           
  4888                           ; BSR set to: 5
  4889                           ;keyboard1_hid.c: 62: };keyboard1_hid.c: 64: if(SetupPkt.RequestType != (0x20>>5))
  4890  00730C  3900               	swapf	0,w,b	;volatile
  4891  00730E  32E8               	rrcf	wreg,f,c
  4892  007310  0B03               	andlw	3
  4893  007312  06E8               	decf	wreg,f,c
  4894  007314  A4D8               	btfss	status,2,c
  4895  007316  0012               	return	
  4896  007318  D020               	goto	l3402
  4897  00731A                     l3380:
  4898                           
  4899                           ; BSR set to: 5
  4900                           ;keyboard1_hid.c: 82: { inPipes[0].pSrc.bRam = (BYTE*)&idle_rate_k1; inPipes[0].wCount.V
      +                          al = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
  4901  00731A  0E3A               	movlw	low _idle_rate_k1
  4902  00731C  6E27               	movwf	_inPipes,c
  4903  00731E  0E00               	movlw	high _idle_rate_k1
  4904  007320  6E28               	movwf	_inPipes+1,c
  4905                           
  4906                           ; BSR set to: 5
  4907  007322  0E00               	movlw	0
  4908  007324  6E2C               	movwf	_inPipes+5,c
  4909  007326  0E01               	movlw	1
  4910  007328  6E2B               	movwf	_inPipes+4,c
  4911                           
  4912                           ; BSR set to: 5
  4913  00732A  0EC1               	movlw	193
  4914  00732C  6E2A               	movwf	_inPipes+3,c
  4915                           
  4916                           ;keyboard1_hid.c: 86: break;
  4917  00732E  0012               	return	
  4918  007330                     l3386:
  4919                           
  4920                           ; BSR set to: 5
  4921                           ;keyboard1_hid.c: 88: inPipes[0].info.Val = 0x00 | 0x80;
  4922  007330  0E80               	movlw	128
  4923  007332  6E2A               	movwf	_inPipes+3,c
  4924                           
  4925                           ; BSR set to: 5
  4926                           ;keyboard1_hid.c: 89: idle_rate_k1 = SetupPkt.W_Value.byte.HB;
  4927  007334  C503 F03A          	movff	1283,_idle_rate_k1	;volatile
  4928                           
  4929                           ;keyboard1_hid.c: 90: break;
  4930  007338  0012               	return	
  4931  00733A                     l3390:
  4932                           
  4933                           ; BSR set to: 5
  4934                           ;keyboard1_hid.c: 92: { inPipes[0].pSrc.bRam = (BYTE*)&active_protocol_k1; inPipes[0].wC
      +                          ount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
  4935  00733A  0E39               	movlw	low _active_protocol_k1
  4936  00733C  6E27               	movwf	_inPipes,c
  4937  00733E  0E00               	movlw	high _active_protocol_k1
  4938  007340  6E28               	movwf	_inPipes+1,c
  4939                           
  4940                           ; BSR set to: 5
  4941  007342  0E00               	movlw	0
  4942  007344  6E2C               	movwf	_inPipes+5,c
  4943  007346  0E01               	movlw	1
  4944  007348  6E2B               	movwf	_inPipes+4,c
  4945                           
  4946                           ; BSR set to: 5
  4947  00734A  0E81               	movlw	129
  4948  00734C  6E2A               	movwf	_inPipes+3,c
  4949                           
  4950                           ;keyboard1_hid.c: 96: break;
  4951  00734E  0012               	return	
  4952  007350                     l3396:
  4953                           
  4954                           ; BSR set to: 5
  4955                           ;keyboard1_hid.c: 98: inPipes[0].info.Val = 0x00 | 0x80;
  4956  007350  0E80               	movlw	128
  4957  007352  6E2A               	movwf	_inPipes+3,c
  4958                           
  4959                           ; BSR set to: 5
  4960                           ;keyboard1_hid.c: 99: active_protocol_k1 = SetupPkt.W_Value.byte.LB;
  4961  007354  C502 F039          	movff	1282,_active_protocol_k1	;volatile
  4962                           
  4963                           ;keyboard1_hid.c: 100: break;
  4964  007358  0012               	return	
  4965  00735A                     l3402:
  4966                           
  4967                           ; BSR set to: 5
  4968  00735A  5101               	movf	1,w,b	;volatile
  4969                           
  4970                           ; Switch size 1, requested type "simple"
  4971                           ; Number of cases is 6, Range of values is 1 to 11
  4972                           ; switch strategies available:
  4973                           ; Name         Instructions Cycles
  4974                           ; simple_byte           19    10 (average)
  4975                           ;	Chosen strategy is simple_byte
  4976  00735C  0A01               	xorlw	1	; case 1
  4977  00735E  B4D8               	btfsc	status,2,c
  4978  007360  0012               	return	
  4979  007362  0A03               	xorlw	3	; case 2
  4980  007364  B4D8               	btfsc	status,2,c
  4981  007366  D7D9               	goto	l3380
  4982  007368  0A01               	xorlw	1	; case 3
  4983  00736A  B4D8               	btfsc	status,2,c
  4984  00736C  D7E6               	goto	l3390
  4985  00736E  0A0A               	xorlw	10	; case 9
  4986  007370  B4D8               	btfsc	status,2,c
  4987  007372  0012               	return	
  4988  007374  0A03               	xorlw	3	; case 10
  4989  007376  B4D8               	btfsc	status,2,c
  4990  007378  D7DB               	goto	l3386
  4991  00737A  0A01               	xorlw	1	; case 11
  4992  00737C  A4D8               	btfss	status,2,c
  4993  00737E  0012               	return	
  4994  007380  D7E7               	goto	l3396
  4995  007382                     __end_of_USBCheckHIDRequest_k1:
  4996                           	opt callstack 0
  4997                           
  4998 ;; *************** function _USBCheckHIDRequest_j2 *****************
  4999 ;; Defined at:
  5000 ;;		line 31 in file "../USB Stack/joystick2_hid.c"
  5001 ;; Parameters:    Size  Location     Type
  5002 ;;		None
  5003 ;; Auto vars:     Size  Location     Type
  5004 ;;		None
  5005 ;; Return value:  Size  Location     Type
  5006 ;;                  1    wreg      void 
  5007 ;; Registers used:
  5008 ;;		wreg, status,2, status,0
  5009 ;; Tracked objects:
  5010 ;;		On entry : 0/0
  5011 ;;		On exit  : 0/0
  5012 ;;		Unchanged: 0/0
  5013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  5014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  5015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0
  5016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  5017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0
  5018 ;;Total ram usage:        0 bytes
  5019 ;; Hardware stack levels used:    1
  5020 ;; This function calls:
  5021 ;;		Nothing
  5022 ;; This function is called by:
  5023 ;;		_USBCBCheckOtherReq
  5024 ;; This function uses a non-reentrant model
  5025 ;;
  5026                           
  5027                           	psect	text30
  5028  0071C8                     __ptext30:
  5029                           	opt callstack 0
  5030  0071C8                     _USBCheckHIDRequest_j2:
  5031                           	opt callstack 27
  5032                           
  5033                           ;joystick2_hid.c: 33: if(SetupPkt.Recipient != (0x01)) return;
  5034                           
  5035                           ; BSR set to: 5
  5036                           ;incstack = 0
  5037  0071C8  0105               	movlb	5	; () banked
  5038  0071CA  5100               	movf	0,w,b	;volatile
  5039  0071CC  0B1F               	andlw	31
  5040  0071CE  06E8               	decf	wreg,f,c
  5041  0071D0  A4D8               	btfss	status,2,c
  5042  0071D2  0012               	return	
  5043                           
  5044                           ; BSR set to: 5
  5045                           ;joystick2_hid.c: 34: if(SetupPkt.bIntfID != 0x01) return;
  5046  0071D4  0504               	decf	4,w,b	;volatile
  5047  0071D6  A4D8               	btfss	status,2,c
  5048  0071D8  0012               	return	
  5049                           
  5050                           ; BSR set to: 5
  5051                           ;joystick2_hid.c: 36: if(SetupPkt.bRequest == 6)
  5052  0071DA  0E06               	movlw	6
  5053  0071DC  1901               	xorwf	1,w,b	;volatile
  5054  0071DE  B4D8               	btfsc	status,2,c
  5055  0071E0  D01C               	goto	l3276
  5056  0071E2  D025               	goto	l3278
  5057  0071E4                     l3256:
  5058                           
  5059                           ; BSR set to: 5
  5060                           ;joystick2_hid.c: 41: if(USBActiveConfiguration == 1)
  5061  0071E4  0441               	decf	_USBActiveConfiguration,w,c
  5062  0071E6  A4D8               	btfss	status,2,c
  5063  0071E8  D022               	goto	l3278
  5064                           
  5065                           ; BSR set to: 5
  5066                           ;joystick2_hid.c: 42: {;joystick2_hid.c: 43: { inPipes[0].pSrc.bRom = (const BYTE*)&conf
      +                          igDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC_J2)+3; inPipes[0].info.Va
      +                          l = 0x40 | 0x80 | 0x00; };
  5067  0071EA  0E24               	movlw	low (_configDescriptor1+18)
  5068  0071EC  6E27               	movwf	_inPipes,c
  5069  0071EE  0E7E               	movlw	high (_configDescriptor1+18)
  5070  0071F0  6E28               	movwf	_inPipes+1,c
  5071                           
  5072                           ; BSR set to: 5
  5073  0071F2  0E00               	movlw	0
  5074  0071F4  6E2C               	movwf	_inPipes+5,c
  5075  0071F6  0E09               	movlw	9
  5076  0071F8  6E2B               	movwf	_inPipes+4,c
  5077                           
  5078                           ; BSR set to: 5
  5079  0071FA  0EC0               	movlw	192
  5080  0071FC  D00C               	goto	L7
  5081  0071FE                     l3264:
  5082                           
  5083                           ; BSR set to: 5
  5084                           ;joystick2_hid.c: 50: if(USBActiveConfiguration == 1)
  5085  0071FE  0441               	decf	_USBActiveConfiguration,w,c
  5086  007200  A4D8               	btfss	status,2,c
  5087  007202  D015               	goto	l3278
  5088                           
  5089                           ; BSR set to: 5
  5090                           ;joystick2_hid.c: 51: {;joystick2_hid.c: 52: { inPipes[0].pSrc.bRom = (const BYTE*)&hid_
      +                          rpt01_j2; inPipes[0].wCount.Val = sizeof(hid_rpt01_j2); inPipes[0].info.Val = 0x40 | 0x8
      +                          0 | 0x00; };
  5091  007204  0E7B               	movlw	low _hid_rpt01_j2
  5092  007206  6E27               	movwf	_inPipes,c
  5093  007208  0E7E               	movlw	high _hid_rpt01_j2
  5094  00720A  6E28               	movwf	_inPipes+1,c
  5095                           
  5096                           ; BSR set to: 5
  5097  00720C  0E00               	movlw	0
  5098  00720E  6E2C               	movwf	_inPipes+5,c
  5099  007210  0E4A               	movlw	74
  5100  007212  D7F2               	goto	L8
  5101  007214                     l3272:
  5102                           
  5103                           ; BSR set to: 5
  5104                           ;joystick2_hid.c: 59: inPipes[0].info.Val = 0x00 | 0x80;
  5105  007214  0E80               	movlw	128
  5106  007216                     L7:
  5107  007216  6E2A               	movwf	_inPipes+3,c
  5108                           
  5109                           ;joystick2_hid.c: 60: break;
  5110  007218  D00A               	goto	l3278
  5111  00721A                     l3276:
  5112                           
  5113                           ; BSR set to: 5
  5114  00721A  5103               	movf	3,w,b	;volatile
  5115                           
  5116                           ; Switch size 1, requested type "simple"
  5117                           ; Number of cases is 3, Range of values is 33 to 35
  5118                           ; switch strategies available:
  5119                           ; Name         Instructions Cycles
  5120                           ; simple_byte           10     6 (average)
  5121                           ;	Chosen strategy is simple_byte
  5122  00721C  0A21               	xorlw	33	; case 33
  5123  00721E  B4D8               	btfsc	status,2,c
  5124  007220  D7E1               	goto	l3256
  5125  007222  0A03               	xorlw	3	; case 34
  5126  007224  B4D8               	btfsc	status,2,c
  5127  007226  D7EB               	goto	l3264
  5128  007228  0A01               	xorlw	1	; case 35
  5129  00722A  B4D8               	btfsc	status,2,c
  5130  00722C  D7F3               	goto	l3272
  5131  00722E                     l3278:
  5132                           
  5133                           ; BSR set to: 5
  5134                           ;joystick2_hid.c: 62: };joystick2_hid.c: 64: if(SetupPkt.RequestType != (0x20>>5))
  5135  00722E  3900               	swapf	0,w,b	;volatile
  5136  007230  32E8               	rrcf	wreg,f,c
  5137  007232  0B03               	andlw	3
  5138  007234  06E8               	decf	wreg,f,c
  5139  007236  A4D8               	btfss	status,2,c
  5140  007238  0012               	return	
  5141  00723A  D020               	goto	l3304
  5142  00723C                     l3282:
  5143                           
  5144                           ; BSR set to: 5
  5145                           ;joystick2_hid.c: 82: { inPipes[0].pSrc.bRam = (BYTE*)&idle_rate_j2; inPipes[0].wCount.V
      +                          al = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
  5146  00723C  0E3E               	movlw	low _idle_rate_j2
  5147  00723E  6E27               	movwf	_inPipes,c
  5148  007240  0E00               	movlw	high _idle_rate_j2
  5149  007242  6E28               	movwf	_inPipes+1,c
  5150                           
  5151                           ; BSR set to: 5
  5152  007244  0E00               	movlw	0
  5153  007246  6E2C               	movwf	_inPipes+5,c
  5154  007248  0E01               	movlw	1
  5155  00724A  6E2B               	movwf	_inPipes+4,c
  5156                           
  5157                           ; BSR set to: 5
  5158  00724C  0EC1               	movlw	193
  5159  00724E  6E2A               	movwf	_inPipes+3,c
  5160                           
  5161                           ;joystick2_hid.c: 86: break;
  5162  007250  0012               	return	
  5163  007252                     l3288:
  5164                           
  5165                           ; BSR set to: 5
  5166                           ;joystick2_hid.c: 88: inPipes[0].info.Val = 0x00 | 0x80;
  5167  007252  0E80               	movlw	128
  5168  007254  6E2A               	movwf	_inPipes+3,c
  5169                           
  5170                           ; BSR set to: 5
  5171                           ;joystick2_hid.c: 89: idle_rate_j2 = SetupPkt.W_Value.byte.HB;
  5172  007256  C503 F03E          	movff	1283,_idle_rate_j2	;volatile
  5173                           
  5174                           ;joystick2_hid.c: 90: break;
  5175  00725A  0012               	return	
  5176  00725C                     l3292:
  5177                           
  5178                           ; BSR set to: 5
  5179                           ;joystick2_hid.c: 92: { inPipes[0].pSrc.bRam = (BYTE*)&active_protocol_j2; inPipes[0].wC
      +                          ount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
  5180  00725C  0E3D               	movlw	low _active_protocol_j2
  5181  00725E  6E27               	movwf	_inPipes,c
  5182  007260  0E00               	movlw	high _active_protocol_j2
  5183  007262  6E28               	movwf	_inPipes+1,c
  5184                           
  5185                           ; BSR set to: 5
  5186  007264  0E00               	movlw	0
  5187  007266  6E2C               	movwf	_inPipes+5,c
  5188  007268  0E01               	movlw	1
  5189  00726A  6E2B               	movwf	_inPipes+4,c
  5190                           
  5191                           ; BSR set to: 5
  5192  00726C  0E81               	movlw	129
  5193  00726E  6E2A               	movwf	_inPipes+3,c
  5194                           
  5195                           ;joystick2_hid.c: 96: break;
  5196  007270  0012               	return	
  5197  007272                     l3298:
  5198                           
  5199                           ; BSR set to: 5
  5200                           ;joystick2_hid.c: 98: inPipes[0].info.Val = 0x00 | 0x80;
  5201  007272  0E80               	movlw	128
  5202  007274  6E2A               	movwf	_inPipes+3,c
  5203                           
  5204                           ; BSR set to: 5
  5205                           ;joystick2_hid.c: 99: active_protocol_j2 = SetupPkt.W_Value.byte.LB;
  5206  007276  C502 F03D          	movff	1282,_active_protocol_j2	;volatile
  5207                           
  5208                           ;joystick2_hid.c: 100: break;
  5209  00727A  0012               	return	
  5210  00727C                     l3304:
  5211                           
  5212                           ; BSR set to: 5
  5213  00727C  5101               	movf	1,w,b	;volatile
  5214                           
  5215                           ; Switch size 1, requested type "simple"
  5216                           ; Number of cases is 6, Range of values is 1 to 11
  5217                           ; switch strategies available:
  5218                           ; Name         Instructions Cycles
  5219                           ; simple_byte           19    10 (average)
  5220                           ;	Chosen strategy is simple_byte
  5221  00727E  0A01               	xorlw	1	; case 1
  5222  007280  B4D8               	btfsc	status,2,c
  5223  007282  0012               	return	
  5224  007284  0A03               	xorlw	3	; case 2
  5225  007286  B4D8               	btfsc	status,2,c
  5226  007288  D7D9               	goto	l3282
  5227  00728A  0A01               	xorlw	1	; case 3
  5228  00728C  B4D8               	btfsc	status,2,c
  5229  00728E  D7E6               	goto	l3292
  5230  007290  0A0A               	xorlw	10	; case 9
  5231  007292  B4D8               	btfsc	status,2,c
  5232  007294  0012               	return	
  5233  007296  0A03               	xorlw	3	; case 10
  5234  007298  B4D8               	btfsc	status,2,c
  5235  00729A  D7DB               	goto	l3288
  5236  00729C  0A01               	xorlw	1	; case 11
  5237  00729E  A4D8               	btfss	status,2,c
  5238  0072A0  0012               	return	
  5239  0072A2  D7E7               	goto	l3298
  5240  0072A4                     __end_of_USBCheckHIDRequest_j2:
  5241                           	opt callstack 0
  5242                           
  5243 ;; *************** function _USBCheckHIDRequest_j1 *****************
  5244 ;; Defined at:
  5245 ;;		line 31 in file "../USB Stack/joystick1_hid.c"
  5246 ;; Parameters:    Size  Location     Type
  5247 ;;		None
  5248 ;; Auto vars:     Size  Location     Type
  5249 ;;		None
  5250 ;; Return value:  Size  Location     Type
  5251 ;;                  1    wreg      void 
  5252 ;; Registers used:
  5253 ;;		wreg, status,2, status,0
  5254 ;; Tracked objects:
  5255 ;;		On entry : 0/0
  5256 ;;		On exit  : 0/0
  5257 ;;		Unchanged: 0/0
  5258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  5259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  5260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0
  5261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  5262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0
  5263 ;;Total ram usage:        0 bytes
  5264 ;; Hardware stack levels used:    1
  5265 ;; This function calls:
  5266 ;;		Nothing
  5267 ;; This function is called by:
  5268 ;;		_USBCBCheckOtherReq
  5269 ;; This function uses a non-reentrant model
  5270 ;;
  5271                           
  5272                           	psect	text31
  5273  0070EC                     __ptext31:
  5274                           	opt callstack 0
  5275  0070EC                     _USBCheckHIDRequest_j1:
  5276                           	opt callstack 27
  5277                           
  5278                           ;joystick1_hid.c: 33: if(SetupPkt.Recipient != (0x01)) return;
  5279                           
  5280                           ; BSR set to: 5
  5281                           ;incstack = 0
  5282  0070EC  0105               	movlb	5	; () banked
  5283  0070EE  5100               	movf	0,w,b	;volatile
  5284  0070F0  0B1F               	andlw	31
  5285  0070F2  06E8               	decf	wreg,f,c
  5286  0070F4  A4D8               	btfss	status,2,c
  5287  0070F6  0012               	return	
  5288                           
  5289                           ; BSR set to: 5
  5290                           ;joystick1_hid.c: 34: if(SetupPkt.bIntfID != 0x00) return;
  5291  0070F8  5104               	movf	4,w,b	;volatile
  5292  0070FA  A4D8               	btfss	status,2,c
  5293  0070FC  0012               	return	
  5294                           
  5295                           ; BSR set to: 5
  5296                           ;joystick1_hid.c: 36: if(SetupPkt.bRequest == 6)
  5297  0070FE  0E06               	movlw	6
  5298  007100  1901               	xorwf	1,w,b	;volatile
  5299  007102  B4D8               	btfsc	status,2,c
  5300  007104  D01C               	goto	l3214
  5301  007106  D025               	goto	l3216
  5302  007108                     l3194:
  5303                           
  5304                           ; BSR set to: 5
  5305                           ;joystick1_hid.c: 41: if(USBActiveConfiguration == 1)
  5306  007108  0441               	decf	_USBActiveConfiguration,w,c
  5307  00710A  A4D8               	btfss	status,2,c
  5308  00710C  D022               	goto	l3216
  5309                           
  5310                           ; BSR set to: 5
  5311                           ;joystick1_hid.c: 42: {;joystick1_hid.c: 43: { inPipes[0].pSrc.bRom = (const BYTE*)&conf
      +                          igDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC_J1)+3; inPipes[0].info.Va
      +                          l = 0x40 | 0x80 | 0x00; };
  5312  00710E  0E24               	movlw	low (_configDescriptor1+18)
  5313  007110  6E27               	movwf	_inPipes,c
  5314  007112  0E7E               	movlw	high (_configDescriptor1+18)
  5315  007114  6E28               	movwf	_inPipes+1,c
  5316                           
  5317                           ; BSR set to: 5
  5318  007116  0E00               	movlw	0
  5319  007118  6E2C               	movwf	_inPipes+5,c
  5320  00711A  0E09               	movlw	9
  5321  00711C  6E2B               	movwf	_inPipes+4,c
  5322                           
  5323                           ; BSR set to: 5
  5324  00711E  0EC0               	movlw	192
  5325  007120  D00C               	goto	L9
  5326  007122                     l3202:
  5327                           
  5328                           ; BSR set to: 5
  5329                           ;joystick1_hid.c: 50: if(USBActiveConfiguration == 1)
  5330  007122  0441               	decf	_USBActiveConfiguration,w,c
  5331  007124  A4D8               	btfss	status,2,c
  5332  007126  D015               	goto	l3216
  5333                           
  5334                           ; BSR set to: 5
  5335                           ;joystick1_hid.c: 51: {;joystick1_hid.c: 52: { inPipes[0].pSrc.bRom = (const BYTE*)&hid_
      +                          rpt01_j1; inPipes[0].wCount.Val = sizeof(hid_rpt01_j1); inPipes[0].info.Val = 0x40 | 0x8
      +                          0 | 0x00; };
  5336  007128  0EC5               	movlw	low _hid_rpt01_j1
  5337  00712A  6E27               	movwf	_inPipes,c
  5338  00712C  0E7E               	movlw	high _hid_rpt01_j1
  5339  00712E  6E28               	movwf	_inPipes+1,c
  5340                           
  5341                           ; BSR set to: 5
  5342  007130  0E00               	movlw	0
  5343  007132  6E2C               	movwf	_inPipes+5,c
  5344  007134  0E4A               	movlw	74
  5345  007136  D7F2               	goto	L10
  5346  007138                     l3210:
  5347                           
  5348                           ; BSR set to: 5
  5349                           ;joystick1_hid.c: 59: inPipes[0].info.Val = 0x00 | 0x80;
  5350  007138  0E80               	movlw	128
  5351  00713A                     L9:
  5352  00713A  6E2A               	movwf	_inPipes+3,c
  5353                           
  5354                           ;joystick1_hid.c: 60: break;
  5355  00713C  D00A               	goto	l3216
  5356  00713E                     l3214:
  5357                           
  5358                           ; BSR set to: 5
  5359  00713E  5103               	movf	3,w,b	;volatile
  5360                           
  5361                           ; Switch size 1, requested type "simple"
  5362                           ; Number of cases is 3, Range of values is 33 to 35
  5363                           ; switch strategies available:
  5364                           ; Name         Instructions Cycles
  5365                           ; simple_byte           10     6 (average)
  5366                           ;	Chosen strategy is simple_byte
  5367  007140  0A21               	xorlw	33	; case 33
  5368  007142  B4D8               	btfsc	status,2,c
  5369  007144  D7E1               	goto	l3194
  5370  007146  0A03               	xorlw	3	; case 34
  5371  007148  B4D8               	btfsc	status,2,c
  5372  00714A  D7EB               	goto	l3202
  5373  00714C  0A01               	xorlw	1	; case 35
  5374  00714E  B4D8               	btfsc	status,2,c
  5375  007150  D7F3               	goto	l3210
  5376  007152                     l3216:
  5377                           
  5378                           ; BSR set to: 5
  5379                           ;joystick1_hid.c: 62: };joystick1_hid.c: 64: if(SetupPkt.RequestType != (0x20>>5))
  5380  007152  3900               	swapf	0,w,b	;volatile
  5381  007154  32E8               	rrcf	wreg,f,c
  5382  007156  0B03               	andlw	3
  5383  007158  06E8               	decf	wreg,f,c
  5384  00715A  A4D8               	btfss	status,2,c
  5385  00715C  0012               	return	
  5386  00715E  D020               	goto	l3242
  5387  007160                     l3220:
  5388                           
  5389                           ; BSR set to: 5
  5390                           ;joystick1_hid.c: 82: { inPipes[0].pSrc.bRam = (BYTE*)&idle_rate_j1; inPipes[0].wCount.V
      +                          al = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
  5391  007160  0E40               	movlw	low _idle_rate_j1
  5392  007162  6E27               	movwf	_inPipes,c
  5393  007164  0E00               	movlw	high _idle_rate_j1
  5394  007166  6E28               	movwf	_inPipes+1,c
  5395                           
  5396                           ; BSR set to: 5
  5397  007168  0E00               	movlw	0
  5398  00716A  6E2C               	movwf	_inPipes+5,c
  5399  00716C  0E01               	movlw	1
  5400  00716E  6E2B               	movwf	_inPipes+4,c
  5401                           
  5402                           ; BSR set to: 5
  5403  007170  0EC1               	movlw	193
  5404  007172  6E2A               	movwf	_inPipes+3,c
  5405                           
  5406                           ;joystick1_hid.c: 86: break;
  5407  007174  0012               	return	
  5408  007176                     l3226:
  5409                           
  5410                           ; BSR set to: 5
  5411                           ;joystick1_hid.c: 88: inPipes[0].info.Val = 0x00 | 0x80;
  5412  007176  0E80               	movlw	128
  5413  007178  6E2A               	movwf	_inPipes+3,c
  5414                           
  5415                           ; BSR set to: 5
  5416                           ;joystick1_hid.c: 89: idle_rate_j1 = SetupPkt.W_Value.byte.HB;
  5417  00717A  C503 F040          	movff	1283,_idle_rate_j1	;volatile
  5418                           
  5419                           ;joystick1_hid.c: 90: break;
  5420  00717E  0012               	return	
  5421  007180                     l3230:
  5422                           
  5423                           ; BSR set to: 5
  5424                           ;joystick1_hid.c: 92: { inPipes[0].pSrc.bRam = (BYTE*)&active_protocol_j1; inPipes[0].wC
      +                          ount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
  5425  007180  0E3F               	movlw	low _active_protocol_j1
  5426  007182  6E27               	movwf	_inPipes,c
  5427  007184  0E00               	movlw	high _active_protocol_j1
  5428  007186  6E28               	movwf	_inPipes+1,c
  5429                           
  5430                           ; BSR set to: 5
  5431  007188  0E00               	movlw	0
  5432  00718A  6E2C               	movwf	_inPipes+5,c
  5433  00718C  0E01               	movlw	1
  5434  00718E  6E2B               	movwf	_inPipes+4,c
  5435                           
  5436                           ; BSR set to: 5
  5437  007190  0E81               	movlw	129
  5438  007192  6E2A               	movwf	_inPipes+3,c
  5439                           
  5440                           ;joystick1_hid.c: 96: break;
  5441  007194  0012               	return	
  5442  007196                     l3236:
  5443                           
  5444                           ; BSR set to: 5
  5445                           ;joystick1_hid.c: 98: inPipes[0].info.Val = 0x00 | 0x80;
  5446  007196  0E80               	movlw	128
  5447  007198  6E2A               	movwf	_inPipes+3,c
  5448                           
  5449                           ; BSR set to: 5
  5450                           ;joystick1_hid.c: 99: active_protocol_j1 = SetupPkt.W_Value.byte.LB;
  5451  00719A  C502 F03F          	movff	1282,_active_protocol_j1	;volatile
  5452                           
  5453                           ;joystick1_hid.c: 100: break;
  5454  00719E  0012               	return	
  5455  0071A0                     l3242:
  5456                           
  5457                           ; BSR set to: 5
  5458  0071A0  5101               	movf	1,w,b	;volatile
  5459                           
  5460                           ; Switch size 1, requested type "simple"
  5461                           ; Number of cases is 6, Range of values is 1 to 11
  5462                           ; switch strategies available:
  5463                           ; Name         Instructions Cycles
  5464                           ; simple_byte           19    10 (average)
  5465                           ;	Chosen strategy is simple_byte
  5466  0071A2  0A01               	xorlw	1	; case 1
  5467  0071A4  B4D8               	btfsc	status,2,c
  5468  0071A6  0012               	return	
  5469  0071A8  0A03               	xorlw	3	; case 2
  5470  0071AA  B4D8               	btfsc	status,2,c
  5471  0071AC  D7D9               	goto	l3220
  5472  0071AE  0A01               	xorlw	1	; case 3
  5473  0071B0  B4D8               	btfsc	status,2,c
  5474  0071B2  D7E6               	goto	l3230
  5475  0071B4  0A0A               	xorlw	10	; case 9
  5476  0071B6  B4D8               	btfsc	status,2,c
  5477  0071B8  0012               	return	
  5478  0071BA  0A03               	xorlw	3	; case 10
  5479  0071BC  B4D8               	btfsc	status,2,c
  5480  0071BE  D7DB               	goto	l3226
  5481  0071C0  0A01               	xorlw	1	; case 11
  5482  0071C2  A4D8               	btfss	status,2,c
  5483  0071C4  0012               	return	
  5484  0071C6  D7E7               	goto	l3236
  5485  0071C8                     __end_of_USBCheckHIDRequest_j1:
  5486                           	opt callstack 0
  5487                           
  5488 ;; *************** function _USBStdGetStatusHandler *****************
  5489 ;; Defined at:
  5490 ;;		line 1829 in file "../USB Stack/usb_device.c"
  5491 ;; Parameters:    Size  Location     Type
  5492 ;;		None
  5493 ;; Auto vars:     Size  Location     Type
  5494 ;;  p               2    1[COMRAM] PTR struct __BDT
  5495 ;;		 -> BDT(64), 
  5496 ;; Return value:  Size  Location     Type
  5497 ;;                  1    wreg      void 
  5498 ;; Registers used:
  5499 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5500 ;; Tracked objects:
  5501 ;;		On entry : 0/0
  5502 ;;		On exit  : 0/0
  5503 ;;		Unchanged: 0/0
  5504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  5505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  5506 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0
  5507 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0
  5508 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0
  5509 ;;Total ram usage:        3 bytes
  5510 ;; Hardware stack levels used:    1
  5511 ;; This function calls:
  5512 ;;		Nothing
  5513 ;; This function is called by:
  5514 ;;		_USBCheckStdRequest
  5515 ;; This function uses a non-reentrant model
  5516 ;;
  5517                           
  5518                           	psect	text32
  5519  006E42                     __ptext32:
  5520                           	opt callstack 0
  5521  006E42                     _USBStdGetStatusHandler:
  5522                           	opt callstack 26
  5523                           
  5524                           ;usb_device.c: 1831: CtrlTrfData[0] = 0;
  5525                           
  5526                           ; BSR set to: 5
  5527                           ;incstack = 0
  5528  006E42  0E00               	movlw	0
  5529  006E44  0105               	movlb	5	; () banked
  5530  006E46  6F20               	movwf	32,b	;volatile
  5531                           
  5532                           ;usb_device.c: 1832: CtrlTrfData[1] = 0;
  5533  006E48  0E00               	movlw	0
  5534  006E4A  6F21               	movwf	33,b	;volatile
  5535                           
  5536                           ;usb_device.c: 1834: switch(SetupPkt.Recipient)
  5537  006E4C  D02D               	goto	l3566
  5538  006E4E                     l361:
  5539                           
  5540                           ; BSR set to: 5
  5541                           ;usb_device.c: 1837: inPipes[0].info.bits.busy = 1;
  5542  006E4E  8E2A               	bsf	_inPipes+3,7,c
  5543                           
  5544                           ; BSR set to: 5
  5545                           ;usb_device.c: 1845: };usb_device.c: 1847: if(RemoteWakeup == TRUE)
  5546                           
  5547                           ;usb_device.c: 1842: if(0 == 1)
  5548  006E50  0435               	decf	_RemoteWakeup,w,c
  5549  006E52  A4D8               	btfss	status,2,c
  5550  006E54  D034               	goto	l364
  5551                           
  5552                           ; BSR set to: 5
  5553                           ;usb_device.c: 1848: {;usb_device.c: 1849: CtrlTrfData[0]|=0x02;
  5554  006E56  8320               	bsf	32,1,b	;volatile
  5555  006E58  D032               	goto	l364
  5556  006E5A                     l365:
  5557                           
  5558                           ; BSR set to: 5
  5559                           ;usb_device.c: 1853: inPipes[0].info.bits.busy = 1;
  5560  006E5A  8E2A               	bsf	_inPipes+3,7,c
  5561                           
  5562                           ;usb_device.c: 1854: break;
  5563  006E5C  D030               	goto	l364
  5564  006E5E                     l366:
  5565                           
  5566                           ; BSR set to: 5
  5567                           ;usb_device.c: 1856: inPipes[0].info.bits.busy = 1;
  5568  006E5E  8E2A               	bsf	_inPipes+3,7,c
  5569                           
  5570                           ;usb_device.c: 1860: {;usb_device.c: 1861: BDT_ENTRY *p;;usb_device.c: 1863: if(SetupPkt
      +                          .EPDir == 0)
  5571  006E60  BF04               	btfsc	4,7,b	;volatile
  5572  006E62  D00A               	goto	l3558
  5573                           
  5574                           ; BSR set to: 5
  5575                           ;usb_device.c: 1864: {;usb_device.c: 1865: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  5576  006E64  5104               	movf	4,w,b	;volatile
  5577  006E66  0B0F               	andlw	15
  5578  006E68  6E42               	movwf	??_USBStdGetStatusHandler& (0+255),c
  5579  006E6A  5042               	movf	??_USBStdGetStatusHandler,w,c
  5580  006E6C  0D02               	mullw	2
  5581  006E6E  0EC2               	movlw	low _pBDTEntryOut
  5582  006E70  24F3               	addwf	prodl,w,c
  5583  006E72  6ED9               	movwf	fsr2l,c
  5584  006E74  0E00               	movlw	high _pBDTEntryOut
  5585  006E76  D009               	goto	L11
  5586  006E78                     l3558:
  5587                           
  5588                           ; BSR set to: 5
  5589                           ;usb_device.c: 1867: else;usb_device.c: 1868: {;usb_device.c: 1869: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
  5590  006E78  5104               	movf	4,w,b	;volatile
  5591  006E7A  0B0F               	andlw	15
  5592  006E7C  6E42               	movwf	??_USBStdGetStatusHandler& (0+255),c
  5593  006E7E  5042               	movf	??_USBStdGetStatusHandler,w,c
  5594  006E80  0D02               	mullw	2
  5595  006E82  0E1F               	movlw	low _pBDTEntryIn
  5596  006E84  24F3               	addwf	prodl,w,c
  5597  006E86  6ED9               	movwf	fsr2l,c
  5598  006E88  0E00               	movlw	high _pBDTEntryIn
  5599  006E8A                     L11:
  5600  006E8A  20F4               	addwfc	prodh,w,c
  5601  006E8C  6EDA               	movwf	fsr2h,c
  5602  006E8E  CFDE F043          	movff	postinc2,USBStdGetStatusHandler@p
  5603  006E92  CFDD F044          	movff	postdec2,USBStdGetStatusHandler@p+1
  5604                           
  5605                           ; BSR set to: 5
  5606                           ;usb_device.c: 1870: };usb_device.c: 1872: if(p->STAT.Val & 0x04)
  5607  006E96  C043  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
  5608  006E9A  C044  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
  5609  006E9E  A4DF               	btfss	indf2,2,c
  5610  006EA0  D00E               	goto	l364
  5611                           
  5612                           ; BSR set to: 5
  5613                           ;usb_device.c: 1873: CtrlTrfData[0]=0x01;
  5614  006EA2  0E01               	movlw	1
  5615  006EA4  6F20               	movwf	32,b	;volatile
  5616  006EA6  D00B               	goto	l364
  5617  006EA8                     l3566:
  5618                           
  5619                           ; BSR set to: 5
  5620  006EA8  5100               	movf	0,w,b	;volatile
  5621  006EAA  0B1F               	andlw	31
  5622                           
  5623                           ; Switch size 1, requested type "simple"
  5624                           ; Number of cases is 3, Range of values is 0 to 2
  5625                           ; switch strategies available:
  5626                           ; Name         Instructions Cycles
  5627                           ; simple_byte           10     6 (average)
  5628                           ;	Chosen strategy is simple_byte
  5629  006EAC  0A00               	xorlw	0	; case 0
  5630  006EAE  B4D8               	btfsc	status,2,c
  5631  006EB0  D7CE               	goto	l361
  5632  006EB2  0A01               	xorlw	1	; case 1
  5633  006EB4  B4D8               	btfsc	status,2,c
  5634  006EB6  D7D1               	goto	l365
  5635  006EB8  0A03               	xorlw	3	; case 2
  5636  006EBA  B4D8               	btfsc	status,2,c
  5637  006EBC  D7D0               	goto	l366
  5638  006EBE                     l364:
  5639                           
  5640                           ; BSR set to: 5
  5641                           ;usb_device.c: 1878: if(inPipes[0].info.bits.busy == 1)
  5642  006EBE  AE2A               	btfss	_inPipes+3,7,c
  5643  006EC0  0012               	return	
  5644                           
  5645                           ; BSR set to: 5
  5646                           ;usb_device.c: 1879: {;usb_device.c: 1880: inPipes[0].pSrc.bRam = (BYTE*)&CtrlTrfData;
  5647  006EC2  0E20               	movlw	32
  5648  006EC4  6E27               	movwf	_inPipes,c
  5649  006EC6  0E05               	movlw	5
  5650  006EC8  6E28               	movwf	_inPipes+1,c
  5651                           
  5652                           ; BSR set to: 5
  5653                           ;usb_device.c: 1881: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  5654  006ECA  802A               	bsf	_inPipes+3,0,c
  5655                           
  5656                           ; BSR set to: 5
  5657                           ;usb_device.c: 1882: inPipes[0].wCount.v[0] = 2;
  5658  006ECC  0E02               	movlw	2
  5659  006ECE  6E2B               	movwf	_inPipes+4,c
  5660                           
  5661                           ; BSR set to: 5
  5662  006ED0  0012               	return		;funcret
  5663  006ED2                     __end_of_USBStdGetStatusHandler:
  5664                           	opt callstack 0
  5665                           
  5666 ;; *************** function _USBStdGetDscHandler *****************
  5667 ;; Defined at:
  5668 ;;		line 1767 in file "../USB Stack/usb_device.c"
  5669 ;; Parameters:    Size  Location     Type
  5670 ;;		None
  5671 ;; Auto vars:     Size  Location     Type
  5672 ;;		None
  5673 ;; Return value:  Size  Location     Type
  5674 ;;                  1    wreg      void 
  5675 ;; Registers used:
  5676 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  5677 ;; Tracked objects:
  5678 ;;		On entry : 0/0
  5679 ;;		On exit  : 0/0
  5680 ;;		Unchanged: 0/0
  5681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  5682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  5683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0
  5684 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0
  5685 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0
  5686 ;;Total ram usage:        2 bytes
  5687 ;; Hardware stack levels used:    1
  5688 ;; This function calls:
  5689 ;;		Nothing
  5690 ;; This function is called by:
  5691 ;;		_USBCheckStdRequest
  5692 ;; This function uses a non-reentrant model
  5693 ;;
  5694                           
  5695                           	psect	text33
  5696  007382                     __ptext33:
  5697                           	opt callstack 0
  5698  007382                     _USBStdGetDscHandler:
  5699                           	opt callstack 26
  5700                           
  5701                           ;usb_device.c: 1769: if(SetupPkt.bmRequestType == 0x80)
  5702                           
  5703                           ; BSR set to: 5
  5704                           ;incstack = 0
  5705  007382  0E80               	movlw	128
  5706  007384  0105               	movlb	5	; () banked
  5707  007386  1900               	xorwf	0,w,b	;volatile
  5708  007388  A4D8               	btfss	status,2,c
  5709  00738A  0012               	return	
  5710                           
  5711                           ; BSR set to: 5
  5712                           ;usb_device.c: 1770: {;usb_device.c: 1771: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  5713  00738C  0EC0               	movlw	192
  5714  00738E  6E2A               	movwf	_inPipes+3,c
  5715                           
  5716                           ;usb_device.c: 1773: switch(SetupPkt.bDescriptorType)
  5717  007390  D05E               	goto	l3532
  5718  007392                     l3512:
  5719                           
  5720                           ; BSR set to: 5
  5721                           ;usb_device.c: 1779: inPipes[0].pSrc.bRom = (const BYTE*)&device_dsc;
  5722  007392  0EE8               	movlw	low _device_dsc
  5723  007394  6E27               	movwf	_inPipes,c
  5724  007396  0E7F               	movlw	high _device_dsc
  5725  007398  6E28               	movwf	_inPipes+1,c
  5726                           
  5727                           ; BSR set to: 5
  5728                           ;usb_device.c: 1781: inPipes[0].wCount.Val = sizeof(device_dsc);
  5729  00739A  0E00               	movlw	0
  5730  00739C  6E2C               	movwf	_inPipes+5,c
  5731  00739E  0E12               	movlw	18
  5732  0073A0  6E2B               	movwf	_inPipes+4,c
  5733                           
  5734                           ;usb_device.c: 1782: break;
  5735  0073A2  0012               	return	
  5736  0073A4                     l3516:
  5737                           
  5738                           ; BSR set to: 5
  5739                           ;usb_device.c: 1787: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  5740  0073A4  5102               	movf	2,w,b	;volatile
  5741  0073A6  0D02               	mullw	2
  5742  0073A8  0E10               	movlw	low _USB_CD_Ptr
  5743  0073AA  24F3               	addwf	prodl,w,c
  5744  0073AC  6EF6               	movwf	tblptrl,c
  5745  0073AE  0E7E               	movlw	high _USB_CD_Ptr
  5746  0073B0  20F4               	addwfc	prodh,w,c
  5747  0073B2  6EF7               	movwf	tblptrh,c
  5748  0073B4                     	if	0	;There are less than 3 active tblptr bytes
  5749  0073B4                     	endif
  5750  0073B4  0009               	tblrd		*+
  5751  0073B6  CFF5 F027          	movff	tablat,_inPipes
  5752  0073BA  000A               	tblrd		*-
  5753  0073BC  CFF5 F028          	movff	tablat,_inPipes+1
  5754                           
  5755                           ; BSR set to: 5
  5756                           ;usb_device.c: 1789: inPipes[0].wCount.Val = *(inPipes[0].pSrc.wRom+1);
  5757  0073C0  0E02               	movlw	2
  5758  0073C2  2427               	addwf	_inPipes,w,c
  5759  0073C4  6E42               	movwf	??_USBStdGetDscHandler& (0+255),c
  5760  0073C6  0E00               	movlw	0
  5761  0073C8  2028               	addwfc	_inPipes+1,w,c
  5762  0073CA  6E43               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
  5763  0073CC  C042  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
  5764  0073D0  C043  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
  5765  0073D4  6AF8               	clrf	tblptru,c
  5766  0073D6  0E07               	movlw	(high __ramtop+-1)
  5767  0073D8  64F7               	cpfsgt	tblptrh,c
  5768  0073DA  D007               	bra	u2687
  5769  0073DC  0009               	tblrd		*+
  5770  0073DE  CFF5 F02B          	movff	tablat,_inPipes+4
  5771  0073E2  0009               	tblrd		*+
  5772  0073E4  CFF5 F02C          	movff	tablat,_inPipes+5
  5773  0073E8  D008               	bra	u2680
  5774  0073EA                     u2687:
  5775  0073EA  CFF6 FFE9          	movff	tblptrl,fsr0l
  5776  0073EE  CFF7 FFEA          	movff	tblptrh,fsr0h
  5777  0073F2  CFEE F02B          	movff	postinc0,_inPipes+4
  5778  0073F6  CFEE F02C          	movff	postinc0,_inPipes+5
  5779  0073FA                     u2680:
  5780                           
  5781                           ;usb_device.c: 1790: break;
  5782  0073FA  0012               	return	
  5783  0073FC                     l3520:
  5784                           
  5785                           ; BSR set to: 5
  5786                           ;usb_device.c: 1795: if(SetupPkt.bDscIndex<7)
  5787  0073FC  0E07               	movlw	7
  5788  0073FE  6102               	cpfslt	2,b	;volatile
  5789  007400  D023               	goto	l3526
  5790                           
  5791                           ; BSR set to: 5
  5792                           ;usb_device.c: 1796: {;usb_device.c: 1798: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
  5793  007402  5102               	movf	2,w,b	;volatile
  5794  007404  0D02               	mullw	2
  5795  007406  0E04               	movlw	low _USB_SD_Ptr
  5796  007408  24F3               	addwf	prodl,w,c
  5797  00740A  6EF6               	movwf	tblptrl,c
  5798  00740C  0E7E               	movlw	high _USB_SD_Ptr
  5799  00740E  20F4               	addwfc	prodh,w,c
  5800  007410  6EF7               	movwf	tblptrh,c
  5801  007412                     	if	0	;There are less than 3 active tblptr bytes
  5802  007412                     	endif
  5803  007412  0009               	tblrd		*+
  5804  007414  CFF5 F027          	movff	tablat,_inPipes
  5805  007418  000A               	tblrd		*-
  5806  00741A  CFF5 F028          	movff	tablat,_inPipes+1
  5807                           
  5808                           ; BSR set to: 5
  5809                           ;usb_device.c: 1800: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  5810  00741E  C027  FFF6         	movff	_inPipes,tblptrl
  5811  007422  C028  FFF7         	movff	_inPipes+1,tblptrh
  5812  007426  6AF8               	clrf	tblptru,c
  5813  007428  0E07               	movlw	(high __ramtop+-1)
  5814  00742A  64F7               	cpfsgt	tblptrh,c
  5815  00742C  D003               	bra	u2707
  5816  00742E  0008               	tblrd		*
  5817  007430  50F5               	movf	tablat,w,c
  5818  007432  D005               	bra	u2700
  5819  007434                     u2707:
  5820  007434  CFF6 FFE9          	movff	tblptrl,fsr0l
  5821  007438  CFF7 FFEA          	movff	tblptrh,fsr0h
  5822  00743C  50EF               	movf	indf0,w,c
  5823  00743E                     u2700:
  5824  00743E  6E42               	movwf	??_USBStdGetDscHandler& (0+255),c
  5825  007440  5042               	movf	??_USBStdGetDscHandler,w,c
  5826  007442  6E2B               	movwf	_inPipes+4,c
  5827  007444  6A2C               	clrf	_inPipes+5,c
  5828                           
  5829                           ;usb_device.c: 1801: }
  5830  007446  0012               	return	
  5831  007448                     l3526:
  5832                           
  5833                           ; BSR set to: 5
  5834                           ;usb_device.c: 1802: else;usb_device.c: 1803: {;usb_device.c: 1804: inPipes[0].info.Val 
      +                          = 0;
  5835  007448  0E00               	movlw	0
  5836  00744A  6E2A               	movwf	_inPipes+3,c
  5837  00744C  0012               	return	
  5838  00744E                     l3532:
  5839                           
  5840                           ; BSR set to: 5
  5841  00744E  5103               	movf	3,w,b	;volatile
  5842                           
  5843                           ; Switch size 1, requested type "simple"
  5844                           ; Number of cases is 3, Range of values is 1 to 3
  5845                           ; switch strategies available:
  5846                           ; Name         Instructions Cycles
  5847                           ; simple_byte           10     6 (average)
  5848                           ;	Chosen strategy is simple_byte
  5849  007450  0A01               	xorlw	1	; case 1
  5850  007452  B4D8               	btfsc	status,2,c
  5851  007454  D79E               	goto	l3512
  5852  007456  0A03               	xorlw	3	; case 2
  5853  007458  B4D8               	btfsc	status,2,c
  5854  00745A  D7A4               	goto	l3516
  5855  00745C  0A01               	xorlw	1	; case 3
  5856  00745E  B4D8               	btfsc	status,2,c
  5857  007460  D7CD               	goto	l3520
  5858  007462  D7F2               	goto	l3526
  5859  007464                     __end_of_USBStdGetDscHandler:
  5860                           	opt callstack 0
  5861                           
  5862 ;; *************** function _USBStdFeatureReqHandler *****************
  5863 ;; Defined at:
  5864 ;;		line 1628 in file "../USB Stack/usb_device.c"
  5865 ;; Parameters:    Size  Location     Type
  5866 ;;		None
  5867 ;; Auto vars:     Size  Location     Type
  5868 ;;  p               2    4[COMRAM] PTR struct __BDT
  5869 ;;		 -> BDT(64), 
  5870 ;;  pUEP            2    2[COMRAM] PTR unsigned int 
  5871 ;;		 -> UEP0(1), 
  5872 ;; Return value:  Size  Location     Type
  5873 ;;                  1    wreg      void 
  5874 ;; Registers used:
  5875 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5876 ;; Tracked objects:
  5877 ;;		On entry : 0/0
  5878 ;;		On exit  : 0/0
  5879 ;;		Unchanged: 0/0
  5880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  5881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  5882 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0
  5883 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0
  5884 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0
  5885 ;;Total ram usage:        6 bytes
  5886 ;; Hardware stack levels used:    1
  5887 ;; This function calls:
  5888 ;;		Nothing
  5889 ;; This function is called by:
  5890 ;;		_USBCheckStdRequest
  5891 ;; This function uses a non-reentrant model
  5892 ;;
  5893                           
  5894                           	psect	text34
  5895  00754A                     __ptext34:
  5896                           	opt callstack 0
  5897  00754A                     _USBStdFeatureReqHandler:
  5898                           	opt callstack 26
  5899                           
  5900                           ;usb_device.c: 1630: BDT_ENTRY *p;;usb_device.c: 1634: unsigned int* pUEP;;usb_device.c:
      +                           1668: if((SetupPkt.bFeature == 1)&&;usb_device.c: 1669: (SetupPkt.Recipient == (0x00)))
  5901                           
  5902                           ;incstack = 0
  5903  00754A  0105               	movlb	5	; () banked
  5904  00754C  0502               	decf	2,w,b	;volatile
  5905  00754E  A4D8               	btfss	status,2,c
  5906  007550  D00E               	goto	l335
  5907                           
  5908                           ; BSR set to: 5
  5909  007552  5100               	movf	0,w,b	;volatile
  5910  007554  0B1F               	andlw	31
  5911  007556  0900               	iorlw	0
  5912  007558  A4D8               	btfss	status,2,c
  5913  00755A  D009               	goto	l335
  5914                           
  5915                           ; BSR set to: 5
  5916                           ;usb_device.c: 1670: {;usb_device.c: 1671: inPipes[0].info.bits.busy = 1;
  5917  00755C  8E2A               	bsf	_inPipes+3,7,c
  5918                           
  5919                           ; BSR set to: 5
  5920                           ;usb_device.c: 1672: if(SetupPkt.bRequest == 3)
  5921  00755E  0E03               	movlw	3
  5922  007560  1901               	xorwf	1,w,b	;volatile
  5923  007562  A4D8               	btfss	status,2,c
  5924  007564  D002               	goto	l3584
  5925                           
  5926                           ; BSR set to: 5
  5927                           ;usb_device.c: 1673: RemoteWakeup = TRUE;
  5928  007566  0E01               	movlw	1
  5929  007568  D001               	goto	L12
  5930  00756A                     l3584:
  5931                           
  5932                           ; BSR set to: 5
  5933                           ;usb_device.c: 1674: else;usb_device.c: 1675: RemoteWakeup = FALSE;
  5934  00756A  0E00               	movlw	0
  5935  00756C                     L12:
  5936  00756C  6E35               	movwf	_RemoteWakeup,c
  5937  00756E                     l335:
  5938                           
  5939                           ; BSR set to: 5
  5940                           ;usb_device.c: 1676: };usb_device.c: 1678: if((SetupPkt.bFeature == 0)&&;usb_device.c: 1
      +                          679: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 1680: (SetupPkt.EPNum != 0))
  5941  00756E  5102               	movf	2,w,b	;volatile
  5942  007570  A4D8               	btfss	status,2,c
  5943  007572  0012               	return	
  5944                           
  5945                           ; BSR set to: 5
  5946  007574  5100               	movf	0,w,b	;volatile
  5947  007576  0B1F               	andlw	31
  5948  007578  0A02               	xorlw	2
  5949  00757A  A4D8               	btfss	status,2,c
  5950  00757C  0012               	return	
  5951                           
  5952                           ; BSR set to: 5
  5953  00757E  5104               	movf	4,w,b	;volatile
  5954  007580  0B0F               	andlw	15
  5955  007582  0900               	iorlw	0
  5956  007584  B4D8               	btfsc	status,2,c
  5957  007586  0012               	return	
  5958                           
  5959                           ; BSR set to: 5
  5960                           ;usb_device.c: 1681: {;usb_device.c: 1682: inPipes[0].info.bits.busy = 1;
  5961  007588  8E2A               	bsf	_inPipes+3,7,c
  5962                           
  5963                           ;usb_device.c: 1685: if(SetupPkt.EPDir == 0)
  5964  00758A  BF04               	btfsc	4,7,b	;volatile
  5965  00758C  D00A               	goto	l3594
  5966                           
  5967                           ; BSR set to: 5
  5968                           ;usb_device.c: 1686: {;usb_device.c: 1687: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  5969  00758E  5104               	movf	4,w,b	;volatile
  5970  007590  0B0F               	andlw	15
  5971  007592  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  5972  007594  5042               	movf	??_USBStdFeatureReqHandler,w,c
  5973  007596  0D02               	mullw	2
  5974  007598  0EC2               	movlw	low _pBDTEntryOut
  5975  00759A  24F3               	addwf	prodl,w,c
  5976  00759C  6ED9               	movwf	fsr2l,c
  5977  00759E  0E00               	movlw	high _pBDTEntryOut
  5978  0075A0  D009               	goto	L13
  5979  0075A2                     l3594:
  5980                           
  5981                           ; BSR set to: 5
  5982                           ;usb_device.c: 1689: else;usb_device.c: 1690: {;usb_device.c: 1691: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
  5983  0075A2  5104               	movf	4,w,b	;volatile
  5984  0075A4  0B0F               	andlw	15
  5985  0075A6  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  5986  0075A8  5042               	movf	??_USBStdFeatureReqHandler,w,c
  5987  0075AA  0D02               	mullw	2
  5988  0075AC  0E1F               	movlw	low _pBDTEntryIn
  5989  0075AE  24F3               	addwf	prodl,w,c
  5990  0075B0  6ED9               	movwf	fsr2l,c
  5991  0075B2  0E00               	movlw	high _pBDTEntryIn
  5992  0075B4                     L13:
  5993  0075B4  20F4               	addwfc	prodh,w,c
  5994  0075B6  6EDA               	movwf	fsr2h,c
  5995  0075B8  CFDE F046          	movff	postinc2,USBStdFeatureReqHandler@p
  5996  0075BC  CFDD F047          	movff	postdec2,USBStdFeatureReqHandler@p+1
  5997                           
  5998                           ; BSR set to: 5
  5999                           ;usb_device.c: 1692: };usb_device.c: 1695: if(SetupPkt.bRequest == 3)
  6000  0075C0  0E03               	movlw	3
  6001  0075C2  1901               	xorwf	1,w,b	;volatile
  6002  0075C4  A4D8               	btfss	status,2,c
  6003  0075C6  D007               	goto	l3600
  6004                           
  6005                           ; BSR set to: 5
  6006                           ;usb_device.c: 1696: {;usb_device.c: 1698: p->STAT.Val = 0x80|0x04;
  6007  0075C8  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  6008  0075CC  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  6009  0075D0  0E84               	movlw	132
  6010  0075D2  6EDF               	movwf	indf2,c
  6011                           
  6012                           ;usb_device.c: 1699: }
  6013  0075D4  0012               	return	
  6014  0075D6                     l3600:
  6015                           
  6016                           ; BSR set to: 5
  6017                           ;usb_device.c: 1700: else;usb_device.c: 1701: {;usb_device.c: 1708: pUEP = (unsigned int
      +                          *)(&UEP0+SetupPkt.EPNum);
  6018  0075D6  5104               	movf	4,w,b	;volatile
  6019  0075D8  0B0F               	andlw	15
  6020  0075DA  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  6021  0075DC  6A43               	clrf	(??_USBStdFeatureReqHandler+1)& (0+255),c
  6022  0075DE  0E70               	movlw	112
  6023  0075E0  2442               	addwf	??_USBStdFeatureReqHandler,w,c
  6024  0075E2  6E44               	movwf	USBStdFeatureReqHandler@pUEP,c
  6025  0075E4  0E0F               	movlw	15
  6026  0075E6  2043               	addwfc	??_USBStdFeatureReqHandler+1,w,c
  6027  0075E8  6E45               	movwf	USBStdFeatureReqHandler@pUEP+1,c
  6028                           
  6029                           ; BSR set to: 5
  6030                           ;usb_device.c: 1712: *pUEP &= ~0x0001;
  6031  0075EA  C044  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
  6032  0075EE  C045  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
  6033  0075F2  0EFE               	movlw	254
  6034  0075F4  16DE               	andwf	postinc2,f,c
  6035  0075F6  0EFF               	movlw	255
  6036  0075F8  16DD               	andwf	postdec2,f,c
  6037                           
  6038                           ; BSR set to: 5
  6039                           ;usb_device.c: 1714: if(SetupPkt.EPDir == 1)
  6040  0075FA  AF04               	btfss	4,7,b	;volatile
  6041  0075FC  D00F               	goto	l3612
  6042                           
  6043                           ; BSR set to: 5
  6044                           ;usb_device.c: 1715: {;usb_device.c: 1720: p->STAT.Val = 0x00|0x00;
  6045  0075FE  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  6046  007602  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  6047  007606  0E00               	movlw	0
  6048  007608  6EDF               	movwf	indf2,c
  6049                           
  6050                           ; BSR set to: 5
  6051                           ;usb_device.c: 1722: ((BYTE_VAL*)&p)->Val ^= 0x0004;
  6052  00760A  0E04               	movlw	4
  6053  00760C  1A46               	xorwf	USBStdFeatureReqHandler@p,f,c
  6054                           
  6055                           ; BSR set to: 5
  6056                           ;usb_device.c: 1723: p->STAT.Val = 0x00|0x40;
  6057  00760E  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  6058  007612  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  6059  007616  0E40               	movlw	64
  6060  007618  6EDF               	movwf	indf2,c
  6061                           
  6062                           ;usb_device.c: 1727: }
  6063  00761A  0012               	return	
  6064  00761C                     l3612:
  6065                           
  6066                           ; BSR set to: 5
  6067                           ;usb_device.c: 1728: else;usb_device.c: 1729: {;usb_device.c: 1737: p->STAT.Val = 0x80|0
      +                          x00|0x08;
  6068  00761C  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  6069  007620  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  6070  007624  0E88               	movlw	136
  6071  007626  6EDF               	movwf	indf2,c
  6072                           
  6073                           ; BSR set to: 5
  6074                           ;usb_device.c: 1739: ((BYTE_VAL*)&p)->Val ^= 0x0004;
  6075  007628  0E04               	movlw	4
  6076  00762A  1A46               	xorwf	USBStdFeatureReqHandler@p,f,c
  6077                           
  6078                           ; BSR set to: 5
  6079                           ;usb_device.c: 1740: p->STAT.Val = 0x80|0x40|0x08;
  6080  00762C  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  6081  007630  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  6082  007634  0EC8               	movlw	200
  6083  007636  6EDF               	movwf	indf2,c
  6084                           
  6085                           ; BSR set to: 5
  6086  007638  0012               	return		;funcret
  6087  00763A                     __end_of_USBStdFeatureReqHandler:
  6088                           	opt callstack 0
  6089                           
  6090 ;; *************** function _USBCtrlTrfOutHandler *****************
  6091 ;; Defined at:
  6092 ;;		line 1395 in file "../USB Stack/usb_device.c"
  6093 ;; Parameters:    Size  Location     Type
  6094 ;;		None
  6095 ;; Auto vars:     Size  Location     Type
  6096 ;;		None
  6097 ;; Return value:  Size  Location     Type
  6098 ;;                  1    wreg      void 
  6099 ;; Registers used:
  6100 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6101 ;; Tracked objects:
  6102 ;;		On entry : 0/0
  6103 ;;		On exit  : 0/0
  6104 ;;		Unchanged: 0/0
  6105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  6106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  6107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0
  6108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  6109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0
  6110 ;;Total ram usage:        0 bytes
  6111 ;; Hardware stack levels used:    1
  6112 ;; Hardware stack levels required when called:    1
  6113 ;; This function calls:
  6114 ;;		_USBCtrlTrfRxService
  6115 ;;		_USBPrepareForNextSetupTrf
  6116 ;; This function is called by:
  6117 ;;		_USBCtrlEPService
  6118 ;; This function uses a non-reentrant model
  6119 ;;
  6120                           
  6121                           	psect	text35
  6122  0069C8                     __ptext35:
  6123                           	opt callstack 0
  6124  0069C8                     _USBCtrlTrfOutHandler:
  6125                           	opt callstack 27
  6126                           
  6127                           ;usb_device.c: 1397: if(controlTransferState == 2)
  6128                           
  6129                           ; BSR set to: 5
  6130                           ;incstack = 0
  6131  0069C8  0E02               	movlw	2
  6132  0069CA  1836               	xorwf	_controlTransferState,w,c
  6133  0069CC  A4D8               	btfss	status,2,c
  6134  0069CE  D003               	goto	l3788
  6135                           
  6136                           ;usb_device.c: 1398: {;usb_device.c: 1399: USBCtrlTrfRxService();
  6137  0069D0  EC32  F03A         	call	_USBCtrlTrfRxService	;wreg free
  6138                           
  6139                           ;usb_device.c: 1400: }
  6140  0069D4  0012               	return	
  6141  0069D6                     l3788:
  6142                           
  6143                           ;usb_device.c: 1401: else;usb_device.c: 1402: {;usb_device.c: 1408: USBPrepareForNextSet
      +                          upTrf();
  6144  0069D6  EC57  F034         	call	_USBPrepareForNextSetupTrf	;wreg free
  6145                           
  6146                           ;usb_device.c: 1409: if(BothEP0OutUOWNsSet == FALSE)
  6147  0069DA  5034               	movf	_BothEP0OutUOWNsSet,w,c
  6148  0069DC  A4D8               	btfss	status,2,c
  6149  0069DE  D019               	goto	l3796
  6150                           
  6151                           ;usb_device.c: 1410: {;usb_device.c: 1411: pBDTEntryEP0OutNext->CNT = 8;
  6152  0069E0  EE20 F001          	lfsr	2,1
  6153  0069E4  502F               	movf	_pBDTEntryEP0OutNext,w,c
  6154  0069E6  26D9               	addwf	fsr2l,f,c
  6155  0069E8  5030               	movf	_pBDTEntryEP0OutNext+1,w,c
  6156  0069EA  22DA               	addwfc	fsr2h,f,c
  6157  0069EC  0E08               	movlw	8
  6158  0069EE  6EDF               	movwf	indf2,c
  6159                           
  6160                           ;usb_device.c: 1412: pBDTEntryEP0OutNext->ADR = (BYTE*)&SetupPkt;
  6161  0069F0  EE20 F002          	lfsr	2,2
  6162  0069F4  502F               	movf	_pBDTEntryEP0OutNext,w,c
  6163  0069F6  26D9               	addwf	fsr2l,f,c
  6164  0069F8  5030               	movf	_pBDTEntryEP0OutNext+1,w,c
  6165  0069FA  22DA               	addwfc	fsr2h,f,c
  6166  0069FC  0E00               	movlw	0
  6167  0069FE  6EDE               	movwf	postinc2,c
  6168  006A00  0E05               	movlw	5
  6169  006A02  6EDD               	movwf	postdec2,c
  6170                           
  6171                           ;usb_device.c: 1413: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x00|0x08|0x04;
  6172  006A04  C02F  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  6173  006A08  C030  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  6174  006A0C  0E8C               	movlw	140
  6175  006A0E  6EDF               	movwf	indf2,c
  6176                           
  6177                           ;usb_device.c: 1414: }
  6178  006A10  0012               	return	
  6179  006A12                     l3796:
  6180                           
  6181                           ;usb_device.c: 1415: else;usb_device.c: 1416: {;usb_device.c: 1417: BothEP0OutUOWNsSet =
      +                           FALSE;
  6182  006A12  0E00               	movlw	0
  6183  006A14  6E34               	movwf	_BothEP0OutUOWNsSet,c
  6184  006A16  0012               	return		;funcret
  6185  006A18                     __end_of_USBCtrlTrfOutHandler:
  6186                           	opt callstack 0
  6187                           
  6188 ;; *************** function _USBCtrlTrfRxService *****************
  6189 ;; Defined at:
  6190 ;;		line 2156 in file "../USB Stack/usb_device.c"
  6191 ;; Parameters:    Size  Location     Type
  6192 ;;		None
  6193 ;; Auto vars:     Size  Location     Type
  6194 ;;  byteToRead      1    1[COMRAM] unsigned char 
  6195 ;;  i               1    0[COMRAM] unsigned char 
  6196 ;; Return value:  Size  Location     Type
  6197 ;;                  1    wreg      void 
  6198 ;; Registers used:
  6199 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6200 ;; Tracked objects:
  6201 ;;		On entry : 0/0
  6202 ;;		On exit  : 0/0
  6203 ;;		Unchanged: 0/0
  6204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  6205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  6206 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0
  6207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  6208 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0
  6209 ;;Total ram usage:        2 bytes
  6210 ;; Hardware stack levels used:    1
  6211 ;; This function calls:
  6212 ;;		Nothing
  6213 ;; This function is called by:
  6214 ;;		_USBCtrlTrfOutHandler
  6215 ;; This function uses a non-reentrant model
  6216 ;;
  6217                           
  6218                           	psect	text36
  6219  007464                     __ptext36:
  6220                           	opt callstack 0
  6221  007464                     _USBCtrlTrfRxService:
  6222                           	opt callstack 27
  6223                           
  6224                           ;usb_device.c: 2158: BYTE byteToRead;;usb_device.c: 2159: BYTE i;;usb_device.c: 2161: by
      +                          teToRead = pBDTEntryEP0OutCurrent->CNT;
  6225                           
  6226                           ;incstack = 0
  6227  007464  EE20 F001          	lfsr	2,1
  6228  007468  5031               	movf	_pBDTEntryEP0OutCurrent,w,c
  6229  00746A  26D9               	addwf	fsr2l,f,c
  6230  00746C  5032               	movf	_pBDTEntryEP0OutCurrent+1,w,c
  6231  00746E  22DA               	addwfc	fsr2h,f,c
  6232  007470  50DF               	movf	indf2,w,c
  6233  007472  6E43               	movwf	USBCtrlTrfRxService@byteToRead,c
  6234                           
  6235                           ;usb_device.c: 2166: if(byteToRead > outPipes[0].wCount.Val)
  6236  007474  5043               	movf	USBCtrlTrfRxService@byteToRead,w,c
  6237  007476  0100               	movlb	0	; () banked
  6238  007478  5DBE               	subwf	(_outPipes+4)& (0+255),w,b
  6239  00747A  0E00               	movlw	0
  6240  00747C  59BF               	subwfb	(_outPipes+5)& (0+255),w,b
  6241  00747E  B0D8               	btfsc	status,0,c
  6242  007480  D003               	goto	l3726
  6243                           
  6244                           ; BSR set to: 0
  6245                           ;usb_device.c: 2167: {;usb_device.c: 2168: byteToRead = outPipes[0].wCount.Val;
  6246  007482  C0BE  F043         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
  6247                           
  6248                           ;usb_device.c: 2169: }
  6249  007486  D007               	goto	l3728
  6250  007488                     l3726:
  6251                           
  6252                           ; BSR set to: 0
  6253                           ;usb_device.c: 2170: else;usb_device.c: 2171: {;usb_device.c: 2172: outPipes[0].wCount.V
      +                          al = outPipes[0].wCount.Val - byteToRead;
  6254  007488  5043               	movf	USBCtrlTrfRxService@byteToRead,w,c
  6255  00748A  5DBE               	subwf	(_outPipes+4)& (0+255),w,b
  6256  00748C  6FBE               	movwf	(_outPipes+4)& (0+255),b
  6257  00748E  51BF               	movf	(_outPipes+5)& (0+255),w,b
  6258  007490  A0D8               	btfss	status,0,c
  6259  007492  05BF               	decf	(_outPipes+5)& (0+255),w,b
  6260  007494  6FBF               	movwf	(_outPipes+5)& (0+255),b
  6261  007496                     l3728:
  6262                           
  6263                           ; BSR set to: 0
  6264                           ;usb_device.c: 2173: };usb_device.c: 2175: for(i=0;i<byteToRead;i++)
  6265  007496  0E00               	movlw	0
  6266  007498  6E42               	movwf	USBCtrlTrfRxService@i,c
  6267  00749A  D00F               	goto	l3736
  6268  00749C                     l3730:
  6269                           
  6270                           ; BSR set to: 0
  6271                           ;usb_device.c: 2176: {;usb_device.c: 2177: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  6272  00749C  0E20               	movlw	32
  6273  00749E  2442               	addwf	USBCtrlTrfRxService@i,w,c
  6274  0074A0  6ED9               	movwf	fsr2l,c
  6275  0074A2  6ADA               	clrf	fsr2h,c
  6276  0074A4  0E05               	movlw	5
  6277  0074A6  22DA               	addwfc	fsr2h,f,c
  6278  0074A8  C0BA  FFE1         	movff	_outPipes,fsr1l
  6279  0074AC  C0BB  FFE2         	movff	_outPipes+1,fsr1h
  6280  0074B0  CFDF FFE7          	movff	indf2,indf1
  6281                           
  6282                           ; BSR set to: 0
  6283  0074B4  4BBA               	infsnz	_outPipes& (0+255),f,b
  6284  0074B6  2BBB               	incf	(_outPipes+1)& (0+255),f,b
  6285                           
  6286                           ; BSR set to: 0
  6287  0074B8  2A42               	incf	USBCtrlTrfRxService@i,f,c
  6288  0074BA                     l3736:
  6289                           
  6290                           ; BSR set to: 0
  6291  0074BA  5043               	movf	USBCtrlTrfRxService@byteToRead,w,c
  6292  0074BC  5C42               	subwf	USBCtrlTrfRxService@i,w,c
  6293  0074BE  A0D8               	btfss	status,0,c
  6294  0074C0  D7ED               	goto	l3730
  6295                           
  6296                           ; BSR set to: 0
  6297                           ;usb_device.c: 2178: };usb_device.c: 2181: if(outPipes[0].wCount.Val > 0)
  6298  0074C2  51BE               	movf	(_outPipes+4)& (0+255),w,b
  6299  0074C4  11BF               	iorwf	(_outPipes+5)& (0+255),w,b
  6300  0074C6  B4D8               	btfsc	status,2,c
  6301  0074C8  D026               	goto	l3748
  6302                           
  6303                           ; BSR set to: 0
  6304                           ;usb_device.c: 2182: {;usb_device.c: 2188: pBDTEntryEP0OutNext->CNT = 8;
  6305  0074CA  EE20 F001          	lfsr	2,1
  6306  0074CE  502F               	movf	_pBDTEntryEP0OutNext,w,c
  6307  0074D0  26D9               	addwf	fsr2l,f,c
  6308  0074D2  5030               	movf	_pBDTEntryEP0OutNext+1,w,c
  6309  0074D4  22DA               	addwfc	fsr2h,f,c
  6310  0074D6  0E08               	movlw	8
  6311  0074D8  6EDF               	movwf	indf2,c
  6312                           
  6313                           ;usb_device.c: 2189: pBDTEntryEP0OutNext->ADR = (BYTE*)&CtrlTrfData;
  6314  0074DA  EE20 F002          	lfsr	2,2
  6315  0074DE  502F               	movf	_pBDTEntryEP0OutNext,w,c
  6316  0074E0  26D9               	addwf	fsr2l,f,c
  6317  0074E2  5030               	movf	_pBDTEntryEP0OutNext+1,w,c
  6318  0074E4  22DA               	addwfc	fsr2h,f,c
  6319  0074E6  0E20               	movlw	32
  6320  0074E8  6EDE               	movwf	postinc2,c
  6321  0074EA  0E05               	movlw	5
  6322  0074EC  6EDD               	movwf	postdec2,c
  6323                           
  6324                           ; BSR set to: 0
  6325                           ;usb_device.c: 2190: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  6326  0074EE  C031  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  6327  0074F2  C032  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  6328  0074F6  BCDF               	btfsc	indf2,6,c
  6329  0074F8  D007               	goto	l3746
  6330                           
  6331                           ; BSR set to: 0
  6332                           ;usb_device.c: 2191: {;usb_device.c: 2192: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x40|0x0
      +                          8;
  6333  0074FA  C02F  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  6334  0074FE  C030  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  6335  007502  0EC8               	movlw	200
  6336  007504  6EDF               	movwf	indf2,c
  6337                           
  6338                           ;usb_device.c: 2193: }
  6339  007506  0012               	return	
  6340  007508                     l3746:
  6341                           
  6342                           ; BSR set to: 0
  6343                           ;usb_device.c: 2194: else;usb_device.c: 2195: {;usb_device.c: 2196: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x80|0x00|0x08;
  6344  007508  C02F  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  6345  00750C  C030  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  6346  007510  0E88               	movlw	136
  6347  007512  6EDF               	movwf	indf2,c
  6348  007514  0012               	return	
  6349  007516                     l3748:
  6350                           
  6351                           ; BSR set to: 0
  6352                           ;usb_device.c: 2199: else;usb_device.c: 2200: {;usb_device.c: 2201: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
  6353  007516  EE20 F001          	lfsr	2,1
  6354  00751A  502F               	movf	_pBDTEntryEP0OutNext,w,c
  6355  00751C  26D9               	addwf	fsr2l,f,c
  6356  00751E  5030               	movf	_pBDTEntryEP0OutNext+1,w,c
  6357  007520  22DA               	addwfc	fsr2h,f,c
  6358  007522  0E08               	movlw	8
  6359  007524  6EDF               	movwf	indf2,c
  6360                           
  6361                           ;usb_device.c: 2202: pBDTEntryEP0OutNext->ADR = (BYTE*)&SetupPkt;
  6362  007526  EE20 F002          	lfsr	2,2
  6363  00752A  502F               	movf	_pBDTEntryEP0OutNext,w,c
  6364  00752C  26D9               	addwf	fsr2l,f,c
  6365  00752E  5030               	movf	_pBDTEntryEP0OutNext+1,w,c
  6366  007530  22DA               	addwfc	fsr2h,f,c
  6367  007532  0E00               	movlw	0
  6368  007534  6EDE               	movwf	postinc2,c
  6369  007536  0E05               	movlw	5
  6370  007538  6EDD               	movwf	postdec2,c
  6371                           
  6372                           ; BSR set to: 0
  6373                           ;usb_device.c: 2206: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x04;
  6374  00753A  C02F  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  6375  00753E  C030  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  6376  007542  0E84               	movlw	132
  6377  007544  6EDF               	movwf	indf2,c
  6378                           
  6379                           ; BSR set to: 0
  6380                           ;usb_device.c: 2211: };usb_device.c: 2212: outPipes[0].info.bits.busy = 0;
  6381  007546  9FBD               	bcf	(_outPipes+3)& (0+255),7,b
  6382                           
  6383                           ; BSR set to: 0
  6384  007548  0012               	return		;funcret
  6385  00754A                     __end_of_USBCtrlTrfRxService:
  6386                           	opt callstack 0
  6387                           
  6388 ;; *************** function _USBCtrlTrfInHandler *****************
  6389 ;; Defined at:
  6390 ;;		line 1445 in file "../USB Stack/usb_device.c"
  6391 ;; Parameters:    Size  Location     Type
  6392 ;;		None
  6393 ;; Auto vars:     Size  Location     Type
  6394 ;;  lastDTS         1    2[COMRAM] unsigned char 
  6395 ;; Return value:  Size  Location     Type
  6396 ;;                  1    wreg      void 
  6397 ;; Registers used:
  6398 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6399 ;; Tracked objects:
  6400 ;;		On entry : 0/0
  6401 ;;		On exit  : 0/0
  6402 ;;		Unchanged: 0/0
  6403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  6404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  6405 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0
  6406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  6407 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0
  6408 ;;Total ram usage:        1 bytes
  6409 ;; Hardware stack levels used:    1
  6410 ;; Hardware stack levels required when called:    1
  6411 ;; This function calls:
  6412 ;;		_USBCtrlTrfTxService
  6413 ;;		_USBPrepareForNextSetupTrf
  6414 ;; This function is called by:
  6415 ;;		_USBCtrlEPService
  6416 ;; This function uses a non-reentrant model
  6417 ;;
  6418                           
  6419                           	psect	text37
  6420  006CA0                     __ptext37:
  6421                           	opt callstack 0
  6422  006CA0                     _USBCtrlTrfInHandler:
  6423                           	opt callstack 27
  6424                           
  6425                           ;usb_device.c: 1447: BYTE lastDTS;;usb_device.c: 1449: lastDTS = pBDTEntryIn[0]->STAT.DT
      +                          S;
  6426                           
  6427                           ; BSR set to: 0
  6428                           ;incstack = 0
  6429  006CA0  C01F  FFD9         	movff	_pBDTEntryIn,fsr2l
  6430  006CA4  C020  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  6431  006CA8  0E00               	movlw	0
  6432  006CAA  BCDF               	btfsc	indf2,6,c
  6433  006CAC  0E01               	movlw	1
  6434  006CAE  6E44               	movwf	USBCtrlTrfInHandler@lastDTS,c
  6435                           
  6436                           ;usb_device.c: 1452: ((BYTE_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  6437  006CB0  0E04               	movlw	4
  6438  006CB2  1A1F               	xorwf	_pBDTEntryIn,f,c
  6439                           
  6440                           ;usb_device.c: 1455: if(USBDeviceState == ADR_PENDING_STATE)
  6441  006CB4  0E08               	movlw	8
  6442  006CB6  1838               	xorwf	_USBDeviceState,w,c
  6443  006CB8  A4D8               	btfss	status,2,c
  6444  006CBA  D009               	goto	l3812
  6445                           
  6446                           ;usb_device.c: 1456: {;usb_device.c: 1457: UADDR = SetupPkt.bDevADR.Val;
  6447  006CBC  C502 FF6E          	movff	1282,3950	;volatile
  6448                           
  6449                           ;usb_device.c: 1458: if(UADDR > 0)
  6450  006CC0  506E               	movf	3950,w,c	;volatile
  6451  006CC2  B4D8               	btfsc	status,2,c
  6452  006CC4  D002               	goto	l3810
  6453                           
  6454                           ;usb_device.c: 1459: {;usb_device.c: 1460: USBDeviceState=ADDRESS_STATE;
  6455  006CC6  0E10               	movlw	16
  6456  006CC8  D001               	goto	L14
  6457  006CCA                     l3810:
  6458                           
  6459                           ;usb_device.c: 1462: else;usb_device.c: 1463: {;usb_device.c: 1464: USBDeviceState=DEFAU
      +                          LT_STATE;
  6460  006CCA  0E04               	movlw	4
  6461  006CCC                     L14:
  6462  006CCC  6E38               	movwf	_USBDeviceState,c
  6463  006CCE                     l3812:
  6464                           
  6465                           ;usb_device.c: 1465: };usb_device.c: 1466: };usb_device.c: 1469: if(controlTransferState
      +                           == 1)
  6466  006CCE  0436               	decf	_controlTransferState,w,c
  6467  006CD0  A4D8               	btfss	status,2,c
  6468  006CD2  D028               	goto	l3828
  6469                           
  6470                           ;usb_device.c: 1470: {;usb_device.c: 1471: pBDTEntryIn[0]->ADR = (BYTE *)CtrlTrfData;
  6471  006CD4  EE20 F002          	lfsr	2,2
  6472  006CD8  501F               	movf	_pBDTEntryIn,w,c
  6473  006CDA  26D9               	addwf	fsr2l,f,c
  6474  006CDC  5020               	movf	_pBDTEntryIn+1,w,c
  6475  006CDE  22DA               	addwfc	fsr2h,f,c
  6476  006CE0  0E20               	movlw	32
  6477  006CE2  6EDE               	movwf	postinc2,c
  6478  006CE4  0E05               	movlw	5
  6479  006CE6  6EDD               	movwf	postdec2,c
  6480                           
  6481                           ;usb_device.c: 1472: USBCtrlTrfTxService();
  6482  006CE8  EC1D  F03B         	call	_USBCtrlTrfTxService	;wreg free
  6483                           
  6484                           ;usb_device.c: 1475: if(shortPacketStatus == 2)
  6485  006CEC  0E02               	movlw	2
  6486  006CEE  1837               	xorwf	_shortPacketStatus,w,c
  6487  006CF0  A4D8               	btfss	status,2,c
  6488  006CF2  D007               	goto	l3822
  6489                           
  6490                           ;usb_device.c: 1476: {;usb_device.c: 1479: pBDTEntryIn[0]->STAT.Val = 0x80|0x04;
  6491  006CF4  C01F  FFD9         	movff	_pBDTEntryIn,fsr2l
  6492  006CF8  C020  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  6493  006CFC  0E84               	movlw	132
  6494  006CFE  6EDF               	movwf	indf2,c
  6495                           
  6496                           ;usb_device.c: 1480: }
  6497  006D00  0012               	return	
  6498  006D02                     l3822:
  6499                           
  6500                           ;usb_device.c: 1481: else;usb_device.c: 1482: {;usb_device.c: 1483: if(lastDTS == 0)
  6501  006D02  5044               	movf	USBCtrlTrfInHandler@lastDTS,w,c
  6502  006D04  A4D8               	btfss	status,2,c
  6503  006D06  D007               	goto	l3826
  6504                           
  6505                           ;usb_device.c: 1484: {;usb_device.c: 1485: pBDTEntryIn[0]->STAT.Val = 0x80|0x40|0x08;
  6506  006D08  C01F  FFD9         	movff	_pBDTEntryIn,fsr2l
  6507  006D0C  C020  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  6508  006D10  0EC8               	movlw	200
  6509  006D12  6EDF               	movwf	indf2,c
  6510                           
  6511                           ;usb_device.c: 1486: }
  6512  006D14  0012               	return	
  6513  006D16                     l3826:
  6514                           
  6515                           ;usb_device.c: 1487: else;usb_device.c: 1488: {;usb_device.c: 1489: pBDTEntryIn[0]->STAT
      +                          .Val = 0x80|0x00|0x08;
  6516  006D16  C01F  FFD9         	movff	_pBDTEntryIn,fsr2l
  6517  006D1A  C020  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  6518  006D1E  0E88               	movlw	136
  6519  006D20  6EDF               	movwf	indf2,c
  6520  006D22  0012               	return	
  6521  006D24                     l3828:
  6522                           
  6523                           ;usb_device.c: 1493: else;usb_device.c: 1494: {;usb_device.c: 1495: USBPrepareForNextSet
      +                          upTrf();
  6524  006D24  EC57  F034         	call	_USBPrepareForNextSetupTrf	;wreg free
  6525  006D28  0012               	return		;funcret
  6526  006D2A                     __end_of_USBCtrlTrfInHandler:
  6527                           	opt callstack 0
  6528                           
  6529 ;; *************** function _USBPrepareForNextSetupTrf *****************
  6530 ;; Defined at:
  6531 ;;		line 1517 in file "../USB Stack/usb_device.c"
  6532 ;; Parameters:    Size  Location     Type
  6533 ;;		None
  6534 ;; Auto vars:     Size  Location     Type
  6535 ;;  p               2    0[COMRAM] PTR struct __BDT
  6536 ;;		 -> RAM(2047), 
  6537 ;; Return value:  Size  Location     Type
  6538 ;;                  1    wreg      void 
  6539 ;; Registers used:
  6540 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6541 ;; Tracked objects:
  6542 ;;		On entry : 0/0
  6543 ;;		On exit  : 0/0
  6544 ;;		Unchanged: 0/0
  6545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  6546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  6547 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0
  6548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  6549 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0
  6550 ;;Total ram usage:        2 bytes
  6551 ;; Hardware stack levels used:    1
  6552 ;; This function calls:
  6553 ;;		Nothing
  6554 ;; This function is called by:
  6555 ;;		_USBCtrlTrfOutHandler
  6556 ;;		_USBCtrlTrfInHandler
  6557 ;; This function uses a non-reentrant model
  6558 ;;
  6559                           
  6560                           	psect	text38
  6561  0068AE                     __ptext38:
  6562                           	opt callstack 0
  6563  0068AE                     _USBPrepareForNextSetupTrf:
  6564                           	opt callstack 27
  6565                           
  6566                           ;usb_device.c: 1519: controlTransferState = 0;
  6567                           
  6568                           ;incstack = 0
  6569  0068AE  0E00               	movlw	0
  6570  0068B0  6E36               	movwf	_controlTransferState,c
  6571                           
  6572                           ;usb_device.c: 1526: pBDTEntryIn[0]->STAT.Val = 0x00;
  6573  0068B2  C01F  FFD9         	movff	_pBDTEntryIn,fsr2l
  6574  0068B6  C020  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  6575  0068BA  0E00               	movlw	0
  6576  0068BC  6EDF               	movwf	indf2,c
  6577                           
  6578                           ;usb_device.c: 1527: {;usb_device.c: 1528: BDT_ENTRY* p;;usb_device.c: 1530: p = (BDT_EN
      +                          TRY*)(((unsigned int)pBDTEntryIn[0])^0x0004);
  6579  0068BE  0E04               	movlw	4
  6580  0068C0  181F               	xorwf	_pBDTEntryIn,w,c
  6581  0068C2  6E42               	movwf	USBPrepareForNextSetupTrf@p,c
  6582  0068C4  5020               	movf	_pBDTEntryIn+1,w,c
  6583  0068C6  6E43               	movwf	USBPrepareForNextSetupTrf@p+1,c
  6584                           
  6585                           ;usb_device.c: 1531: p->STAT.Val = 0x00;
  6586  0068C8  C042  FFD9         	movff	USBPrepareForNextSetupTrf@p,fsr2l
  6587  0068CC  C043  FFDA         	movff	USBPrepareForNextSetupTrf@p+1,fsr2h
  6588  0068D0  0E00               	movlw	0
  6589  0068D2  6EDF               	movwf	indf2,c
  6590                           
  6591                           ;usb_device.c: 1532: };usb_device.c: 1537: if(outPipes[0].info.bits.busy == 1)
  6592  0068D4  0100               	movlb	0	; () banked
  6593  0068D6  AFBD               	btfss	(_outPipes+3)& (0+255),7,b
  6594  0068D8  0012               	return	
  6595                           
  6596                           ; BSR set to: 0
  6597                           ;usb_device.c: 1542: };usb_device.c: 1543: outPipes[0].info.bits.busy = 0;
  6598  0068DA  9FBD               	bcf	(_outPipes+3)& (0+255),7,b
  6599                           
  6600                           ; BSR set to: 0
  6601  0068DC  0012               	return		;funcret
  6602  0068DE                     __end_of_USBPrepareForNextSetupTrf:
  6603                           	opt callstack 0
  6604                           
  6605 ;; *************** function _USBCtrlTrfTxService *****************
  6606 ;; Defined at:
  6607 ;;		line 2061 in file "../USB Stack/usb_device.c"
  6608 ;; Parameters:    Size  Location     Type
  6609 ;;		None
  6610 ;; Auto vars:     Size  Location     Type
  6611 ;;  byteToSend      2    0[COMRAM] struct .
  6612 ;; Return value:  Size  Location     Type
  6613 ;;                  1    wreg      void 
  6614 ;; Registers used:
  6615 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6616 ;; Tracked objects:
  6617 ;;		On entry : 0/0
  6618 ;;		On exit  : 0/0
  6619 ;;		Unchanged: 0/0
  6620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  6621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  6622 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0
  6623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  6624 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0
  6625 ;;Total ram usage:        2 bytes
  6626 ;; Hardware stack levels used:    1
  6627 ;; This function calls:
  6628 ;;		Nothing
  6629 ;; This function is called by:
  6630 ;;		_USBCtrlTrfInHandler
  6631 ;;		_USBCtrlEPServiceComplete
  6632 ;; This function uses a non-reentrant model
  6633 ;;
  6634                           
  6635                           	psect	text39
  6636  00763A                     __ptext39:
  6637                           	opt callstack 0
  6638  00763A                     _USBCtrlTrfTxService:
  6639                           	opt callstack 26
  6640                           
  6641                           ;usb_device.c: 2063: WORD_VAL byteToSend;;usb_device.c: 2068: if(inPipes[0].wCount.Val <
      +                           8)
  6642                           
  6643                           ; BSR set to: 0
  6644                           ;incstack = 0
  6645  00763A  502C               	movf	_inPipes+5,w,c
  6646  00763C  E113               	bnz	l3470
  6647  00763E  0E08               	movlw	8
  6648  007640  5C2B               	subwf	_inPipes+4,w,c
  6649  007642  B0D8               	btfsc	status,0,c
  6650  007644  D00F               	goto	l3470
  6651                           
  6652                           ;usb_device.c: 2069: {;usb_device.c: 2070: byteToSend.Val = inPipes[0].wCount.Val;
  6653  007646  C02B  F042         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
  6654  00764A  C02C  F043         	movff	_inPipes+5,USBCtrlTrfTxService@byteToSend+1
  6655                           
  6656                           ;usb_device.c: 2073: if(shortPacketStatus == 0)
  6657  00764E  5037               	movf	_shortPacketStatus,w,c
  6658  007650  A4D8               	btfss	status,2,c
  6659  007652  D002               	goto	l3466
  6660                           
  6661                           ;usb_device.c: 2074: {;usb_device.c: 2075: shortPacketStatus = 1;
  6662  007654  0E01               	movlw	1
  6663  007656  D004               	goto	L15
  6664  007658                     l3466:
  6665                           
  6666                           ;usb_device.c: 2077: else if(shortPacketStatus == 1)
  6667  007658  0437               	decf	_shortPacketStatus,w,c
  6668  00765A  A4D8               	btfss	status,2,c
  6669  00765C  D007               	goto	l3472
  6670                           
  6671                           ;usb_device.c: 2078: {;usb_device.c: 2079: shortPacketStatus = 2;
  6672  00765E  0E02               	movlw	2
  6673  007660                     L15:
  6674  007660  6E37               	movwf	_shortPacketStatus,c
  6675  007662  D004               	goto	l3472
  6676  007664                     l3470:
  6677                           
  6678                           ;usb_device.c: 2083: else;usb_device.c: 2084: {;usb_device.c: 2085: byteToSend.Val = 8;
  6679  007664  0E00               	movlw	0
  6680  007666  6E43               	movwf	USBCtrlTrfTxService@byteToSend+1,c
  6681  007668  0E08               	movlw	8
  6682  00766A  6E42               	movwf	USBCtrlTrfTxService@byteToSend,c
  6683  00766C                     l3472:
  6684                           
  6685                           ;usb_device.c: 2086: };usb_device.c: 2092: pBDTEntryIn[0]->STAT.BC9 = 0;
  6686  00766C  C01F  FFD9         	movff	_pBDTEntryIn,fsr2l
  6687  007670  C020  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  6688  007674  92DF               	bcf	indf2,1,c
  6689                           
  6690                           ;usb_device.c: 2093: pBDTEntryIn[0]->STAT.BC8 = 0;
  6691  007676  C01F  FFD9         	movff	_pBDTEntryIn,fsr2l
  6692  00767A  C020  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  6693  00767E  90DF               	bcf	indf2,0,c
  6694                           
  6695                           ;usb_device.c: 2097: pBDTEntryIn[0]->STAT.Val |= byteToSend.byte.HB;
  6696  007680  C01F  FFD9         	movff	_pBDTEntryIn,fsr2l
  6697  007684  C020  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  6698  007688  5043               	movf	USBCtrlTrfTxService@byteToSend+1,w,c
  6699  00768A  12DF               	iorwf	indf2,f,c
  6700                           
  6701                           ;usb_device.c: 2098: pBDTEntryIn[0]->CNT = byteToSend.byte.LB;
  6702  00768C  EE20 F001          	lfsr	2,1
  6703  007690  501F               	movf	_pBDTEntryIn,w,c
  6704  007692  26D9               	addwf	fsr2l,f,c
  6705  007694  5020               	movf	_pBDTEntryIn+1,w,c
  6706  007696  22DA               	addwfc	fsr2h,f,c
  6707  007698  C042  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
  6708                           
  6709                           ;usb_device.c: 2108: inPipes[0].wCount.Val = inPipes[0].wCount.Val - byteToSend.Val;
  6710  00769C  5042               	movf	USBCtrlTrfTxService@byteToSend,w,c
  6711  00769E  5C2B               	subwf	_inPipes+4,w,c
  6712  0076A0  6E2B               	movwf	_inPipes+4,c
  6713  0076A2  5043               	movf	USBCtrlTrfTxService@byteToSend+1,w,c
  6714  0076A4  582C               	subwfb	_inPipes+5,w,c
  6715  0076A6  6E2C               	movwf	_inPipes+5,c
  6716                           
  6717                           ;usb_device.c: 2110: pDst = ( BYTE*)CtrlTrfData;
  6718  0076A8  0E20               	movlw	32
  6719  0076AA  6E2D               	movwf	_pDst,c
  6720  0076AC  0E05               	movlw	5
  6721  0076AE  6E2E               	movwf	_pDst+1,c
  6722                           
  6723                           ;usb_device.c: 2112: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
  6724  0076B0  A02A               	btfss	_inPipes+3,0,c
  6725  0076B2  D01D               	goto	l3496
  6726  0076B4  D03D               	goto	l3506
  6727  0076B6                     l3488:
  6728                           
  6729                           ;usb_device.c: 2115: {;usb_device.c: 2116: *pDst++ = *inPipes[0].pSrc.bRom++;
  6730  0076B6  C027  FFF6         	movff	_inPipes,tblptrl
  6731  0076BA  C028  FFF7         	movff	_inPipes+1,tblptrh
  6732  0076BE  6AF8               	clrf	tblptru,c
  6733  0076C0  C02D  FFD9         	movff	_pDst,fsr2l
  6734  0076C4  C02E  FFDA         	movff	_pDst+1,fsr2h
  6735  0076C8  0E07               	movlw	(high __ramtop+-1)
  6736  0076CA  64F7               	cpfsgt	tblptrh,c
  6737  0076CC  D003               	bra	u2637
  6738  0076CE  0008               	tblrd		*
  6739  0076D0  50F5               	movf	tablat,w,c
  6740  0076D2  D005               	bra	u2630
  6741  0076D4                     u2637:
  6742  0076D4  CFF6 FFE9          	movff	tblptrl,fsr0l
  6743  0076D8  CFF7 FFEA          	movff	tblptrh,fsr0h
  6744  0076DC  50EF               	movf	indf0,w,c
  6745  0076DE                     u2630:
  6746  0076DE  6EDF               	movwf	indf2,c
  6747  0076E0  4A27               	infsnz	_inPipes,f,c
  6748  0076E2  2A28               	incf	_inPipes+1,f,c
  6749  0076E4  4A2D               	infsnz	_pDst,f,c
  6750  0076E6  2A2E               	incf	_pDst+1,f,c
  6751                           
  6752                           ;usb_device.c: 2117: byteToSend.Val--;
  6753  0076E8  0642               	decf	USBCtrlTrfTxService@byteToSend,f,c
  6754  0076EA  A0D8               	btfss	status,0,c
  6755  0076EC  0643               	decf	USBCtrlTrfTxService@byteToSend+1,f,c
  6756  0076EE                     l3496:
  6757  0076EE  5042               	movf	USBCtrlTrfTxService@byteToSend,w,c
  6758  0076F0  1043               	iorwf	USBCtrlTrfTxService@byteToSend+1,w,c
  6759  0076F2  B4D8               	btfsc	status,2,c
  6760  0076F4  0012               	return	
  6761  0076F6  D7DF               	goto	l3488
  6762  0076F8                     l3498:
  6763                           
  6764                           ;usb_device.c: 2123: {;usb_device.c: 2124: *pDst++ = *inPipes[0].pSrc.bRam++;
  6765  0076F8  C027  FFF6         	movff	_inPipes,tblptrl
  6766  0076FC  C028  FFF7         	movff	_inPipes+1,tblptrh
  6767  007700  6AF8               	clrf	tblptru,c
  6768  007702  C02D  FFD9         	movff	_pDst,fsr2l
  6769  007706  C02E  FFDA         	movff	_pDst+1,fsr2h
  6770  00770A  0E07               	movlw	(high __ramtop+-1)
  6771  00770C  64F7               	cpfsgt	tblptrh,c
  6772  00770E  D003               	bra	u2657
  6773  007710  0008               	tblrd		*
  6774  007712  50F5               	movf	tablat,w,c
  6775  007714  D005               	bra	u2650
  6776  007716                     u2657:
  6777  007716  CFF6 FFE9          	movff	tblptrl,fsr0l
  6778  00771A  CFF7 FFEA          	movff	tblptrh,fsr0h
  6779  00771E  50EF               	movf	indf0,w,c
  6780  007720                     u2650:
  6781  007720  6EDF               	movwf	indf2,c
  6782  007722  4A27               	infsnz	_inPipes,f,c
  6783  007724  2A28               	incf	_inPipes+1,f,c
  6784  007726  4A2D               	infsnz	_pDst,f,c
  6785  007728  2A2E               	incf	_pDst+1,f,c
  6786                           
  6787                           ;usb_device.c: 2125: byteToSend.Val--;
  6788  00772A  0642               	decf	USBCtrlTrfTxService@byteToSend,f,c
  6789  00772C  A0D8               	btfss	status,0,c
  6790  00772E  0643               	decf	USBCtrlTrfTxService@byteToSend+1,f,c
  6791  007730                     l3506:
  6792  007730  5042               	movf	USBCtrlTrfTxService@byteToSend,w,c
  6793  007732  1043               	iorwf	USBCtrlTrfTxService@byteToSend+1,w,c
  6794  007734  B4D8               	btfsc	status,2,c
  6795  007736  0012               	return	
  6796  007738  D7DF               	goto	l3498
  6797  00773A                     __end_of_USBCtrlTrfTxService:
  6798                           	opt callstack 0
  6799                           
  6800                           	psect	rparam
  6801  0000                     tosu	equ	0xFFF
  6802                           tosh	equ	0xFFE
  6803                           tosl	equ	0xFFD
  6804                           stkptr	equ	0xFFC
  6805                           pclatu	equ	0xFFB
  6806                           pclath	equ	0xFFA
  6807                           pcl	equ	0xFF9
  6808                           tblptru	equ	0xFF8
  6809                           tblptrh	equ	0xFF7
  6810                           tblptrl	equ	0xFF6
  6811                           tablat	equ	0xFF5
  6812                           prodh	equ	0xFF4
  6813                           prodl	equ	0xFF3
  6814                           indf0	equ	0xFEF
  6815                           postinc0	equ	0xFEE
  6816                           postdec0	equ	0xFED
  6817                           preinc0	equ	0xFEC
  6818                           plusw0	equ	0xFEB
  6819                           fsr0h	equ	0xFEA
  6820                           fsr0l	equ	0xFE9
  6821                           wreg	equ	0xFE8
  6822                           indf1	equ	0xFE7
  6823                           postinc1	equ	0xFE6
  6824                           postdec1	equ	0xFE5
  6825                           preinc1	equ	0xFE4
  6826                           plusw1	equ	0xFE3
  6827                           fsr1h	equ	0xFE2
  6828                           fsr1l	equ	0xFE1
  6829                           bsr	equ	0xFE0
  6830                           indf2	equ	0xFDF
  6831                           postinc2	equ	0xFDE
  6832                           postdec2	equ	0xFDD
  6833                           preinc2	equ	0xFDC
  6834                           plusw2	equ	0xFDB
  6835                           fsr2h	equ	0xFDA
  6836                           fsr2l	equ	0xFD9
  6837                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    571
    Data        0
    BSS         317
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     29      94
    BANK0           160      0     122
    BANK1           256      0     130
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           176      0       0
    BANK5hl           8      0       0
    BANK5l           24      0       0
    BANK6h          125      0       0
    BANK6lh          29      0       0
    BANK6ll          38      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ?_USBTransferOnePacket.ADR	PTR unsigned char  size(2) Largest target is 8
		 -> hid_report_in_k1(BIGRAMhhhh[8]), hid_report_out_k1(BIGRAMhhhll[1]), joystick_input_j2(BIGRAMhhhll[7]), joystick_input_j1(ABS[7]), 
		 -> CtrlTrfData(BIGRAMhl[8]), SetupPkt(BIGRAMll[8]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 1
		 -> USTATcopy(COMRAM[1]), NULL(NULL[0]), USBActiveConfiguration(COMRAM[1]), 

    memset@p1	PTR void  size(2) Largest target is 1
		 -> USBAlternateInterface(COMRAM[1]), UEP1(SFR[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 1
		 -> USBAlternateInterface(COMRAM[1]), UEP1(SFR[1]), 

    lastINTransmission_k1	PTR void  size(2) Largest target is 80
		 -> NULL(NULL[0]), BDT(BIGRAMll[64]), 

    lastOUTTransmission_k1	PTR void  size(2) Largest target is 80
		 -> NULL(NULL[0]), BDT(BIGRAMll[64]), 

    lastTransmission_j2	PTR void  size(2) Largest target is 80
		 -> NULL(NULL[0]), BDT(BIGRAMll[64]), 

    lastTransmission_j1	PTR void  size(2) Largest target is 80
		 -> NULL(NULL[0]), BDT(BIGRAMll[64]), 

    sp__USBTransferOnePacket.ADR	PTR unsigned char  size(2) Largest target is 8
		 -> hid_report_in_k1(BIGRAMhhhh[8]), hid_report_out_k1(BIGRAMhhhll[1]), joystick_input_j2(BIGRAMhhhll[7]), joystick_input_j1(ABS[7]), 
		 -> CtrlTrfData(BIGRAMhl[8]), SetupPkt(BIGRAMll[8]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 80
		 -> BDT(BIGRAMll[64]), 

    USBTransferOnePacket@handle.ADR	PTR unsigned char  size(2) Largest target is 8
		 -> hid_report_in_k1(BIGRAMhhhh[8]), hid_report_out_k1(BIGRAMhhhll[1]), joystick_input_j2(BIGRAMhhhll[7]), joystick_input_j1(ABS[7]), 
		 -> CtrlTrfData(BIGRAMhl[8]), SetupPkt(BIGRAMll[8]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 8
		 -> hid_report_in_k1(BIGRAMhhhh[8]), hid_report_out_k1(BIGRAMhhhll[1]), joystick_input_j2(BIGRAMhhhll[7]), joystick_input_j1(ABS[7]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 80
		 -> BDT(BIGRAMll[64]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR[1]), 

    pBDTEntryOut.ADR	PTR unsigned char  size(2) Largest target is 8
		 -> hid_report_in_k1(BIGRAMhhhh[8]), hid_report_out_k1(BIGRAMhhhll[1]), joystick_input_j2(BIGRAMhhhll[7]), joystick_input_j1(ABS[7]), 
		 -> CtrlTrfData(BIGRAMhl[8]), SetupPkt(BIGRAMll[8]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 80
		 -> BDT(BIGRAMll[64]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 80
		 -> BDT(BIGRAMll[64]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned int  size(2) Largest target is 1
		 -> UEP0(SFR[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[4] size(2) Largest target is 80
		 -> BDT(BIGRAMll[64]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 80
		 -> BDT(BIGRAMll[64]), 

    USBPrepareForNextSetupTrf@p	PTR struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    pBDTEntryIn.ADR	PTR unsigned char  size(2) Largest target is 8
		 -> hid_report_in_k1(BIGRAMhhhh[8]), hid_report_out_k1(BIGRAMhhhll[1]), joystick_input_j2(BIGRAMhhhll[7]), joystick_input_j1(ABS[7]), 
		 -> CtrlTrfData(BIGRAMhl[8]), SetupPkt(BIGRAMll[8]), 

    pBDTEntryEP0OutCurrent.ADR	PTR unsigned char  size(2) Largest target is 8
		 -> hid_report_in_k1(BIGRAMhhhh[8]), hid_report_out_k1(BIGRAMhhhll[1]), joystick_input_j2(BIGRAMhhhll[7]), joystick_input_j1(ABS[7]), 
		 -> CtrlTrfData(BIGRAMhl[8]), SetupPkt(BIGRAMll[8]), 

    pBDTEntryEP0OutNext.ADR	PTR unsigned char  size(2) Largest target is 8
		 -> hid_report_in_k1(BIGRAMhhhh[8]), hid_report_out_k1(BIGRAMhhhll[1]), joystick_input_j2(BIGRAMhhhll[7]), joystick_input_j1(ABS[7]), 
		 -> CtrlTrfData(BIGRAMhl[8]), SetupPkt(BIGRAMll[8]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 80
		 -> NULL(NULL[0]), BDT(BIGRAMll[64]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 80
		 -> NULL(NULL[0]), BDT(BIGRAMll[64]), 

    S802$ADR	PTR unsigned char  size(2) Largest target is 8
		 -> hid_report_in_k1(BIGRAMhhhh[8]), hid_report_out_k1(BIGRAMhhhll[1]), joystick_input_j2(BIGRAMhhhll[7]), joystick_input_j1(ABS[7]), 
		 -> CtrlTrfData(BIGRAMhl[8]), SetupPkt(BIGRAMll[8]), 

    BDT.ADR	PTR unsigned char  size(2) Largest target is 8
		 -> hid_report_in_k1(BIGRAMhhhh[8]), hid_report_out_k1(BIGRAMhhhll[1]), joystick_input_j2(BIGRAMhhhll[7]), joystick_input_j1(ABS[7]), 
		 -> CtrlTrfData(BIGRAMhl[8]), SetupPkt(BIGRAMll[8]), 

    pBDTEntryIn	PTR volatile struct __BDT[4] size(2) Largest target is 80
		 -> BDT(BIGRAMll[64]), 

    S863$pFunc	PTR FTN()void  size(2) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0

    S853$wRam	PTR unsigned short  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned short  size(2) Largest target is 0

    S853$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 1
		 -> USBAlternateInterface(COMRAM[1]), UEP1(SFR[1]), 

    USB_SD_Ptr	const PTR const unsigned char [6] size(2) Largest target is 36
		 -> sd005(CODE[26]), sd004(CODE[36]), sd003(CODE[36]), sd002(CODE[34]), 
		 -> sd001(CODE[22]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 105
		 -> configDescriptor1(CODE[105]), 

    S322$wRom	PTR const unsigned short  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned short  size(2) Largest target is 0

    S322$wRam	PTR unsigned short  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned short  size(2) Largest target is 0

    S322$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S322$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _main->_processKeyboard
    _processKeyboard->_USBTransferOnePacket
    _initialise->_initialiseKeyboard
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlTrfSetupHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPServiceComplete->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCBInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfOutHandler->_USBPrepareForNextSetupTrf
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _USBCtrlTrfInHandler->_USBPrepareForNextSetupTrf

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5hl

    None.

Critical Paths under _main in BANK5l

    None.

Critical Paths under _main in BANK6h

    None.

Critical Paths under _main in BANK6lh

    None.

Critical Paths under _main in BANK6ll

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   33060
                      _USBDeviceInit
                     _USBDeviceTasks
                   _debounceKeyboard
                         _initialise
                   _keyboardBlocking
                    _processKeyboard
                  _readKeyboardState
 ---------------------------------------------------------------------------------
 (1) _readKeyboardState                                    4     4      0     563
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _processKeyboard                                     22    22      0    1884
                                              7 COMRAM    22    22      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (1) _keyboardBlocking                                     5     5      0     340
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _initialise                                           0     0      0     112
                 _initialiseKeyboard
 ---------------------------------------------------------------------------------
 (2) _initialiseKeyboard                                   1     1      0     112
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _debounceKeyboard                                     3     3      0     332
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       2     2      0   28864
                                             22 COMRAM     2     2      0
                   _USBCtrlEPService
                      _USBDeviceInit
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   0     0      0    4382
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           0     0      0    4382
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        1     1      0     965
                                              8 COMRAM     1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     3     3      0   14707
                                             19 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               0     0      0   14319
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             0     0      0     115
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   0     0      0    9822
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  0     0      0    5279
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6     897
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (2) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    4382
                                             11 COMRAM     8     2      6
                 _USBCBCheckOtherReq
                  _USBCBErrorHandler
                        _USBCBInitEP
              _USBCBStdSetDscHandler
                       _USBCBSuspend
               _USBCBWakeFromSuspend
                  _USBCB_SOF_Handler
 ---------------------------------------------------------------------------------
 (3) _USBCB_SOF_Handler                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBCBWakeFromSuspend                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBCBSuspend                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBCBStdSetDscHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBCBInitEP                                          0     0      0    2224
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (2) _USBTransferOnePacket                                 7     3      4    1356
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (4) _USBEnableEndpoint                                    4     3      1     868
                                              7 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (5) _USBConfigureEndpoint                                 7     6      1     446
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 (3) _USBCBErrorHandler                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBCBCheckOtherReq                                   2     2      0       0
                                              0 COMRAM     2     2      0
              _USBCheckHIDRequest_j1
              _USBCheckHIDRequest_j2
              _USBCheckHIDRequest_k1
 ---------------------------------------------------------------------------------
 (4) _USBCheckHIDRequest_k1                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _USBCheckHIDRequest_j2                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _USBCheckHIDRequest_j1                                0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               3     3      0      24
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              6     6      0     137
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 0     0      0     137
                _USBCtrlTrfRxService
          _USBPrepareForNextSetupTrf
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  2     2      0     114
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  1     1      0     161
                                              2 COMRAM     1     1      0
                _USBCtrlTrfTxService
          _USBPrepareForNextSetupTrf
 ---------------------------------------------------------------------------------
 (4) _USBPrepareForNextSetupTrf                            2     2      0      23
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBCtrlTrfTxService                                  2     2      0     115
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _USBDeviceInit
     _memset
   _USBDeviceTasks
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
         _USBPrepareForNextSetupTrf
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
         _USBPrepareForNextSetupTrf
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCBCheckOtherReq
                 _USBCheckHIDRequest_j1
                 _USBCheckHIDRequest_j2
                 _USBCheckHIDRequest_k1
               _USBCBErrorHandler
               _USBCBInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCBStdSetDscHandler
               _USBCBSuspend
               _USBCBWakeFromSuspend
               _USBCB_SOF_Handler
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _USBCBCheckOtherReq
               _USBCheckHIDRequest_j1
               _USBCheckHIDRequest_j2
               _USBCheckHIDRequest_k1
             _USBCBErrorHandler
             _USBCBInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCBStdSetDscHandler
             _USBCBSuspend
             _USBCBWakeFromSuspend
             _USBCB_SOF_Handler
         _USBCtrlEPServiceComplete
           _USBCtrlTrfTxService
         _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCBCheckOtherReq
             _USBCheckHIDRequest_j1
             _USBCheckHIDRequest_j2
             _USBCheckHIDRequest_k1
           _USBCBErrorHandler
           _USBCBInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _USBCBStdSetDscHandler
           _USBCBSuspend
           _USBCBWakeFromSuspend
           _USBCB_SOF_Handler
     _USBDeviceInit
       _memset
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCBCheckOtherReq
           _USBCheckHIDRequest_j1
           _USBCheckHIDRequest_j2
           _USBCheckHIDRequest_k1
         _USBCBErrorHandler
         _USBCBInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _USBCBStdSetDscHandler
         _USBCBSuspend
         _USBCBWakeFromSuspend
         _USBCB_SOF_Handler
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCBCheckOtherReq
           _USBCheckHIDRequest_j1
           _USBCheckHIDRequest_j2
           _USBCheckHIDRequest_k1
         _USBCBErrorHandler
         _USBCBInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _USBCBStdSetDscHandler
         _USBCBSuspend
         _USBCBWakeFromSuspend
         _USBCB_SOF_Handler
     _USER_USB_CALLBACK_EVENT_HANDLER
       _USBCBCheckOtherReq
         _USBCheckHIDRequest_j1
         _USBCheckHIDRequest_j2
         _USBCheckHIDRequest_k1
       _USBCBErrorHandler
       _USBCBInitEP
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBTransferOnePacket
       _USBCBStdSetDscHandler
       _USBCBSuspend
       _USBCBWakeFromSuspend
       _USBCB_SOF_Handler
   _debounceKeyboard
   _initialise
     _initialiseKeyboard
   _keyboardBlocking
   _processKeyboard
     _USBTransferOnePacket
   _readKeyboardState

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           3FF      0       0      33        0.0%
BIGRAMhhhh         17D      0       0      27        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      25        0.0%
BANK7              100      0       0      26        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      82       7       50.8%
BIGRAMlh            B0      0       0      32        0.0%
BITBANK4            B0      0       0      12        0.0%
BANK4               B0      0       0      13        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      7A       5       76.2%
BANK6h              7D      0       0      22        0.0%
BITBANK6h           7D      0       0      19        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1D      5E       1       98.9%
BIGRAMhhhll         26      0       0      29        0.0%
BITBANK6ll          26      0       0      21        0.0%
BANK6ll             26      0       0      24        0.0%
BIGRAMhhhlh         1D      0       0      28        0.0%
BANK6lh             1D      0       0      23        0.0%
BITBANK6lh          1D      0       0      20        0.0%
BIGRAMhl            18      0       0      31        0.0%
BITBANK5l           18      0       0      15        0.0%
BANK5l              18      0       0      17        0.0%
BIGRAMhhl            8      0       0      30        0.0%
BANK5hl              8      0       0      16        0.0%
BITBANK5hl           8      0       0      14        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     15A      18        0.0%
DATA                 0      0     15A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Apr  4 19:33:43 2019

                              _USB_SD_Ptr 7E04                             _USBDeviceInit 6DB4  
    USER_USB_CALLBACK_EVENT_HANDLER@event 004D      USER_USB_CALLBACK_EVENT_HANDLER@pdata 004F  
                                     l320 7038                                       l242 786A  
                                     l243 7868               __end_of_USBStdGetDscHandler 7464  
                                     l254 792C                                       l335 756E  
                                     l256 7934                                       l248 789E  
                                     l361 6E4E                                       l329 7078  
                                     l364 6EBE                                       l365 6E5A  
                                     l366 6E5E                                       l374 7CBE  
                                     l545 6B0C                                       l840 79A0  
                                     l850 79E6                                       l842 79AE  
                                     l844 79BC                                       l836 7986  
                                     _BDT 000400                                       l846 79CA  
                                     l838 7992                                       l768 6BC4  
                                     l848 79D8                                       l873 6C52  
                                     _RB0 007C08                                       _RB1 007C09  
                                     _RC0 007C10                                       _RA4 007C04  
                                     _RB2 007C0A                                       _RC1 007C11  
                                     _RA5 007C05                                       _RB3 007C0B  
                                     _RB4 007C0C                                       _RC2 007C12  
                                     _RB5 007C0D                                       _RB6 007C0E  
                                     _RB7 007C0F                                       _SE0 007B6D  
                                     _UIE 000F69                                       _UIR 000F68  
                              _USBSuspend 6806                                       prod 000FF3  
                                     wreg 000FE8                            _USBDeviceTasks 784C  
                          _USBDeviceState 0038                    ??_USBCBWakeFromSuspend 0042  
                   ??_USBCtrlTrfRxService 0042               __size_of_initialiseKeyboard 0058  
                USBEnableEndpoint@options 0049                              __CFG_LVP$OFF 000000  
                            __CFG_WDT$OFF 000000                                      l3210 7138  
                                    l3202 7122                                      l4002 78F4  
                                    l3220 7160                                      l2324 690E  
                                    l4100 7A1E                                      l3230 7180  
                                    l3214 713E                                      l2326 6910  
                                    l3216 7152                                      l3304 727C  
                                    l4016 7922                                      l4008 78FE  
                                    l4200 77A4                                      l4120 7A6E  
                                    l4112 7A4E                                      l4104 7A2E  
                                    l3226 7176                                      l3242 71A0  
                                    l3402 735A                                      l3410 695A  
                                    l3314 693C                                      l3322 6EE8  
                                    l4034 7950                                      l4210 780A  
                                    l3236 7196                                      l4036 796C  
                                    l4116 7A5E                                      l4108 7A3E  
                                    l4060 79A2                                      l4052 7988  
              USBConfigureEndpoint@handle 0047                                      l3406 694E  
                                    l3414 6960                                      l4214 7842  
                                    l4126 7A8E                                      l3600 75D6  
                                    l3520 73FC                                      l3512 7392  
                                    l3272 7214                                      l3264 71FE  
                                    l3256 71E4                                      l3408 6954  
                                    l3176 6D82                                      l3336 6F50  
                                    l3440 6BB2                                      l3432 6B9A  
                                    l3424 685E                                      l4208 77F8  
                                    l4152 6C24                                      l4224 7ADA  
                                    l4080 79E8                                      l4072 79CC  
                                    l4064 79B0                                      l4056 7994  
                                    l4048 797C                                      l4304 6B10  
                                    l3506 7730                                      l3194 7108  
                                    l3282 723C                                      l3370 72F2  
                                    l3362 72DC                                      l3354 72C2  
                                    l3442 6BB8                                      l3434 6BA0  
                                    l4170 6C64                                      l4146 6C1C  
                                    l4234 7B2A                                      l4138 7ABA  
                                    l3612 761C                                      l3516 73A4  
                                    l3532 744E                                      l3292 725C  
                                    l3276 721A                                      l3380 731A  
                                    l3444 6BBE                                      l3436 6BA6  
                                    l3428 686E                                      l4260 7B90  
                                    l4252 7B74                                      l4244 7B42  
                                    l4236 7B32                                      l4092 7A00  
                                    l4076 79DA                                      l4068 79BE  
                                    l3470 7664                                      l3526 7448  
                                    l3278 722E                                      l3390 733A  
                                    l3374 72F8                                      l3438 6BAC  
                                    l3630 7054                                      l4190 773E  
                                    l3472 766C                                      l3288 7252  
                                    l3376 730C                                      l3448 6BC8  
                                    l3544 6B76                                      l3640 706A  
                                    l3624 7040                                      l4264 7B9E  
                                    l4256 7B82                                      l4096 7A0E  
                                    l4088 79F2                                      l3466 7658  
                                    l3810 6CCA                                      l3730 749C  
                                    l3298 7272                                      l3386 7330  
                                    l4522 6BE0                                      l3650 708C  
                                    l3626 7046                                      l3812 6CCE  
                                    l3396 7350                                      l4524 6C0E  
                                    l3636 705E                                      l3628 704C  
                                    l3708 7D70                                      l4268 7BD0  
                                    l3822 6D02                                      l3726 7488  
                                    l3558 6E78                                      l3566 6EA8  
                                    l3638 7064                                      l3654 70AA  
                                    l3910 700C                                      l4198 7792  
                                    l3488 76B6                                      l3496 76EE  
                                    l3736 74BA                                      l3728 7496  
                                    l3584 756A                                      l3672 7C80  
                                    l3904 6FE8                                      l3912 7012  
                                    l3498 76F8                                      l3826 6D16  
                                    l3746 7508                                      l3594 75A2  
                                    l3770 6A30                                      l3914 7018  
                                    l4298 6AFA                                      l3828 6D24  
                                    l3748 7516                                      l3684 7CDE  
                                    l3852 6E16                                      l3844 6DF0  
                                    l3924 6A6E                                      l3854 6E18  
                                    l3872 684C                                      l3874 684E  
                                    l3796 6A12                                      l3788 69D6  
                                    l3948 7872                                      l3966 7896  
                                    l3958 788A                                      l3994 78D0  
                                    l3986 78C4                                      u3100 700C  
                                    u2700 743E                                      u3340 7974  
                                    u2630 76DE                                      u4127 79EA  
                                    u2650 7720                                      u2707 7434  
                                    u2637 76D4                                      u3710 7B20  
                                    u2680 73FA                                      u2657 7716  
                                    u3590 6C96                                      u3718 7B22  
                                    u2687 73EA                                      u3690 7B04  
                                    u3790 7BE0                     ??_USBCtrlTrfTxService 0042  
                                    _UCFG 000F6F                                      _UEP0 000F70  
                                    _RBPU 007F8F                                      _UEP1 000F71  
                                    _UEIE 000F6B                                      _UEIR 000F6A  
                                    _UCON 000F6D        __size_of_USBPrepareForNextSetupTrf 0030  
                                    _pDst 002D                                      _main 6AC2  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    indf0 000FEF                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf1 000FE7  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      prodh 000FF4  
                                    prodl 000FF3                                      start 0000  
                      _USBCBCheckOtherReq 694C                __end_of_USBCheckStdRequest 70EC  
                  ??_USBCtrlTrfOutHandler 0044                              ___param_bank 000000  
               ??_USBStdFeatureReqHandler 0042                  ??_USBStdGetStatusHandler 0042  
                          ?_USBDeviceInit 0042                       ?_USBCBCheckOtherReq 0042  
                           __CFG_PLLDIV$5 000000                        processKeyboard@key 005D  
                                   ?_main 0042         __size_of_USBCtrlEPServiceComplete 01A0  
                  __end_of_USBDeviceTasks 7978                 ?_USBCtrlEPServiceComplete 0042  
                                   _UADDR 000F6E                                     _PORTA 000F80  
                                   _PORTB 000F81                                     _PORTC 000F82  
                                   _PORTD 000F83                                     _PORTE 000F84  
                           __CFG_USBDIV$2 000000                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
                                   _USTAT 000F6C                                     _sd000 7FFA  
                                   _sd001 7FD2                                     _sd002 7F96  
                                   _sd003 7F72                                     _sd004 7F4E  
                                   _sd005 7FB8                      ??_USBCBCheckOtherReq 0042  
                                   tablat 000FF5                     _USBCheckHIDRequest_j1 70EC  
                   _USBCheckHIDRequest_j2 71C8                     _USBCheckHIDRequest_k1 72A4  
                                   status 000FD8                          _hid_report_in_j1 000570  
                        _hid_report_in_j2 0005F0                          _hid_report_in_k1 00067B  
            __size_of_USBStdSetCfgHandler 006C                           __initialization 6880  
                            __end_of_main 6B2C                         _readKeyboardState 7978  
                      ?_readKeyboardState 0042                 __size_of_USBCtrlEPService 00BA  
                                  ??_main 005F                             __activetblptr 000002  
                         ?_USBDeviceTasks 0042                               ?_USBSuspend 0042  
                     ??_readKeyboardState 0042                                    _ADCON0 000FC2  
                                  _ADCON1 000FC1                                    _ADCON2 000FC0  
                                  _ADRESH 000FC4                                    _ADRESL 000FC3  
                                  _GODONE 007E11                                    _PKTDIS 007B6C  
                                  _RESUME 007B6A                                    _TRISA4 007C94  
                                  _TRISA5 007C95                                    _TRISD0 007CA8  
                                  _TRISD1 007CA9                                    _TRISD2 007CAA  
                                  _TRISD3 007CAB                                    _TRISD4 007CAC  
                                  _TRISD5 007CAD                                    _TRISD6 007CAE  
                                  _TRISD7 007CAF                                    _SUSPND 007B69  
                          __CFG_VREGEN$ON 000000                      __end_of_hid_rpt01_j1 7F0F  
                    __end_of_hid_rpt01_j2 7EC5                      __end_of_hid_rpt01_k1 7F4E  
                       _shortPacketStatus 0037                 __end_of_readKeyboardState 7AC2  
          USBConfigureEndpoint@workaround 0045                           USBDeviceTasks@i 0059  
             USBStdFeatureReqHandler@pUEP 0044                  USBTransferOnePacket@data 0043  
              USBCtrlTrfInHandler@lastDTS 0044                           ??_USBDeviceInit 004A  
                       ?_debounceKeyboard 0042                              ?_USBCBInitEP 0042  
                                  _buffer 00B2                         _USBEnableEndpoint 6914  
         __size_of_USBStdGetStatusHandler 0090                 __size_of_keyboardBlocking 0088  
        debounceKeyboard@currentKeyNumber 0044                                    _keymap 7DC3  
                                  _memset 6854                        ??_debounceKeyboard 0042  
                      _active_protocol_j1 003F                        _active_protocol_j2 003D  
                      _active_protocol_k1 0039                                    clear_0 6886  
                                  clear_1 6892                                    clear_2 689E  
                      ?_USBEnableEndpoint 0049                     _USBCBStdSetDscHandler 67F8  
           __size_of_USBTransferOnePacket 009C                              __mediumconst 7DC2  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                       ??_USBEnableEndpoint 004A  
                     _lastTransmission_j1 00D4                       _lastTransmission_j2 00D2  
                      _USBInMaxPacketSize 00CA                               _CtrlTrfData 000520  
                  ?_USBCheckHIDRequest_j1 0042                    ?_USBCheckHIDRequest_j2 0042  
                  ?_USBCheckHIDRequest_k1 0042                      _controlTransferState 0036  
                              __accesstop 0060                   __end_of__initialization 68A4  
                         __CFG_PBADEN$OFF 000000                         _hid_report_out_j1 000530  
                       _hid_report_out_j2 0005B0                         _hid_report_out_k1 00067A  
                __size_of_processKeyboard 0160                             ___rparam_used 000001  
                __size_of_USBStallHandler 0036                       __size_of_USBSuspend 0024  
                          __pcstackCOMRAM 0042                 __end_of_USBEnableEndpoint 694C  
                           __end_of_sd000 7FFE                             __end_of_sd001 7FE8  
                           __end_of_sd002 7FB8                             __end_of_sd003 7F96  
                           __end_of_sd004 7F72                             __end_of_sd005 7FD2  
                       _USBCB_SOF_Handler 67FE             __size_of_USBConfigureEndpoint 008A  
             __end_of_USBCtrlTrfInHandler 6D2A                        ?_USBCB_SOF_Handler 0042  
                     ??_USBCB_SOF_Handler 0042                  ??_USBCtrlTrfSetupHandler 0055  
                  readKeyboardState@input 0043                    _USBStdGetStatusHandler 6E42  
                              __pbssBANK0 0060                                __pbssBANK1 0100  
             __size_of_USBWakeFromSuspend 002A                               _pBDTEntryIn 001F  
        __end_of_USBCtrlEPServiceComplete 7DC2                 __end_of_USBCB_SOF_Handler 6800  
                        _rawKeyboardState 0060                __size_of_readKeyboardState 014A  
                    USBCtrlTrfRxService@i 0042                                   ?_memset 0042  
                  ?_USBCBStdSetDscHandler 0042                                _device_dsc 7FE8  
                        _USBCtrlEPService 6F6E               __end_of_USBCtrlTrfRxService 754A  
                      _USBCheckStdRequest 7028                         _configDescriptor1 7E12  
              __end_of_initialiseKeyboard 6AC2               __end_of_USBCtrlTrfTxService 773A  
                     _USBStdSetCfgHandler 6B2C                       ?_USBCheckStdRequest 0042  
            __size_of_USBStdGetDscHandler 00E2                                   _UIEbits 000F69  
           __size_of_USBCBWakeFromSuspend 0002                                   _UIRbits 000F68  
                                 __Hparam 0000                      ?_USBStdSetCfgHandler 0042  
                                 __Lparam 0000                __size_of_USBEnableEndpoint 0038  
                    ??_USBCheckStdRequest 0055             __size_of_USBCtrlTrfOutHandler 0050  
                        ??_USBDeviceTasks 0058                         ??_processKeyboard 0049  
                       ??_USBStallHandler 0042                          _keyboardBlocking 6C18  
                                 __pcinit 6880                           __size_of_memset 002C  
               __end_of_configDescriptor1 7E7B                                   __ramtop 0800  
                              _initialise 6800                      __size_of_USBCBInitEP 003E  
                                 __ptext0 6AC2                                   __ptext1 7978  
                                 __ptext2 7AC2                                   __ptext3 6C18  
                                 __ptext4 6800                                   __ptext5 6A6A  
                                 __ptext6 773A                                   __ptext7 784C  
                                 __ptext8 682A                                   __ptext9 6806  
                                 _inPipes 0027                              ??_USBSuspend 0055  
                       _USBCBErrorHandler 67F6                              _hid_rpt01_j1 7EC5  
                            _hid_rpt01_j2 7E7B                              _hid_rpt01_k1 7F0F  
                      ?_USBCBErrorHandler 0042                             ?_USBCBSuspend 0042  
                      __end_of_USB_CD_Ptr 7E12           __size_of_USBCtrlTrfSetupHandler 0052  
                    end_of_initialization 68A4               __size_of_USBCBCheckOtherReq 003E  
                      __end_of_USB_SD_Ptr 7E10                       _pBDTEntryEP0OutNext 002F  
                            _idle_rate_j1 0040                              _idle_rate_j2 003E  
                            _idle_rate_k1 003A                       ??_USBCBErrorHandler 0042  
                                 memset@c 0044                                   memset@n 0046  
                                 memset@p 0048                             __Lmediumconst 7DC2  
                ?_USBStdFeatureReqHandler 0042                ?_USBPrepareForNextSetupTrf 0042  
                   ??_USBStdSetCfgHandler 0055                __size_of_USBCB_SOF_Handler 0002  
                      __end_of_USBSuspend 682A                                   postdec2 000FDD  
                   _lastINTransmission_k1 00D8                                   postinc0 000FEE  
                                 postinc1 000FE6                                   postinc2 000FDE  
                _USBCtrlEPServiceComplete 7C22                        USBEnableEndpoint@p 004A  
               __end_of_USBCBErrorHandler 67F8                                 _USBInData 00A1  
                 ??_USBCheckHIDRequest_j1 0042                   ??_USBCheckHIDRequest_j2 0042  
                 ??_USBCheckHIDRequest_k1 0042                            ??_USBCBSuspend 0042  
                      _BothEP0OutUOWNsSet 0034                 __size_of_debounceKeyboard 0112  
               USBConfigureEndpoint@EPNum 0046       USER_USB_CALLBACK_EVENT_HANDLER@size 0051  
                               _USTATcopy 003B              __end_of_USBTransferOnePacket 6F6E  
       __end_of_USBPrepareForNextSetupTrf 68DE                    _USBCtrlTrfSetupHandler 6A18  
                   __end_of_USBDeviceInit 6E42                               ?_initialise 0042  
                          __end_of_keymap 7E04                            __end_of_memset 6880  
                     start_initialization 6880                   ?_USBStdGetStatusHandler 0042  
           USBCtrlTrfRxService@byteToRead 0043                              _Keyboard_out 0033  
            __end_of_USBConfigureEndpoint 6DB4           __end_of_USBStdFeatureReqHandler 763A  
                __end_of_USBCtrlEPService 7028                            USBDeviceInit@i 004A  
                  _pBDTEntryEP0OutCurrent 0031                   USBTransferOnePacket@dir 0042  
                               _OutBuffer 00AA                   USBTransferOnePacket@len 0045  
                 ??_USBCBStdSetDscHandler 0042                       _USBStdGetDscHandler 7382  
                 readKeyboardState@column 0045                                  ??_memset 0048  
                   initialiseKeyboard@key 0042                __size_of_USBCBErrorHandler 0002  
              USBPrepareForNextSetupTrf@p 0042                    _USBActiveConfiguration 0041  
          __end_of_USBStdGetStatusHandler 6ED2                               __pbssCOMRAM 0001  
            __size_of_USBCtrlTrfInHandler 008A                      ?_USBStdGetDscHandler 0042  
                __end_of_keyboardBlocking 6CA0                __end_of_USBWakeFromSuspend 6854  
                         _processKeyboard 7AC2                           _USBStallHandler 68DE  
                     __size_of_initialise 0006                        _initialiseKeyboard 6A6A  
                            _pBDTEntryOut 00C2                      __end_of_USBCBSuspend 67FC  
                     ?_initialiseKeyboard 0042                             __pmediumconst 7DC2  
            __end_of_USBCBWakeFromSuspend 67FE                USBCBSendResume@delay_count 00D0  
                    _USBTransferOnePacket 6ED2                   processKeyboard@keyArray 004B  
        keyboardBlocking@adjacentRowCount 0043                          _debounceKeyboard 773A  
            __end_of_USBCtrlTrfOutHandler 6A18                      ??_initialiseKeyboard 0042  
                   ??_USBStdGetDscHandler 0042                   processKeyboard@modifier 0059  
            __size_of_USBCtrlTrfRxService 00E6             USBConfigureEndpoint@direction 0042  
             processKeyboard@keysDetected 005B              __size_of_USBCtrlTrfTxService 0100  
              ??_USBCtrlEPServiceComplete 0044               ??_USBPrepareForNextSetupTrf 0042  
                                _PIR2bits 000FA1                 USBCtrlEPService@setup_cnt 0057  
                                _UEP0bits 000F70                             ??_USBCBInitEP 004D  
             __size_of_USBCheckStdRequest 00C4                                  _UCONbits 000F6D  
                    _USBConfigureEndpoint 6D2A          __size_of_USBStdFeatureReqHandler 00F0  
                   ?_USBTransferOnePacket 0042          keyboardBlocking@currentKeyNumber 0045  
                  _lastOUTTransmission_k1 00D6                              _RemoteWakeup 0035  
              __end_of_USBCBCheckOtherReq 698A                   __end_of_processKeyboard 7C22  
                 __end_of_USBStallHandler 6914            __size_of_USBCheckHIDRequest_j1 00DC  
          __size_of_USBCheckHIDRequest_j2 00DC            __size_of_USBCheckHIDRequest_k1 00DE  
           __end_of_USBCheckHIDRequest_j1 71C8             __end_of_USBCheckHIDRequest_j2 72A4  
           __end_of_USBCheckHIDRequest_k1 7382               __end_of_USBStdSetCfgHandler 6B98  
                      __end_of_device_dsc 7FFA                   ?_USBCtrlTrfSetupHandler 0042  
                 USBStdGetStatusHandler@p 0043                                  __Hrparam 0000  
                                __Lrparam 0000                    USBTransferOnePacket@ep 0046  
                                _SetupPkt 000500                     ?_USBConfigureEndpoint 0042  
                            ??_initialise 0043                 _USBPrepareForNextSetupTrf 68AE  
                     __end_of_USBCBInitEP 69C8                      readKeyboardState@row 0044  
                 __size_of_USBDeviceTasks 012C                                  __ptext10 68DE  
                                __ptext11 6DB4                                  __ptext20 67FC  
                                __ptext12 6F6E                                  __ptext21 67FA  
                                __ptext13 6A18                                  __ptext30 71C8  
                                __ptext22 67F8                                  __ptext14 7C22  
                                __ptext31 70EC                                  __ptext23 698A  
                                __ptext15 7028                                  __ptext32 6E42  
                                __ptext24 6ED2                                  __ptext16 6B2C  
                                __ptext33 7382                                  __ptext25 6914  
                                __ptext17 6854                                  __ptext34 754A  
                                __ptext26 6D2A                                  __ptext18 6B98  
                                __ptext35 69C8                                  __ptext27 67F6  
                                __ptext19 67FE                                  __ptext36 7464  
                                __ptext28 694C                                  __ptext37 6CA0  
                                __ptext29 72A4                                  __ptext38 68AE  
                                __ptext39 763A                      _USBCBWakeFromSuspend 67FC  
                                _keyboard 0100            __end_of_USBCtrlTrfSetupHandler 6A6A  
                           __size_of_main 006A                         ?_USBCtrlEPService 0042  
                   __size_of_USBCBSuspend 0002                        __end_of_initialise 6806  
                     keyboardBlocking@row 0044                    keyboardBlocking@column 0046  
                      ??_USBCtrlEPService 0055                      _processKeyboard$3442 0057  
                     _USBCtrlTrfInHandler 6CA0                                  _joystick 0001  
                                _outPipes 00BA                      _USBCtrlTrfOutHandler 69C8  
          __size_of_USBCBStdSetDscHandler 0002             __end_of_USBCBStdSetDscHandler 67FA  
                  ??_USBTransferOnePacket 0046                      ?_USBCtrlTrfInHandler 0042  
           USBCtrlTrfTxService@byteToSend 0042                                  memset@p1 0042  
                        ?_processKeyboard 0042                              _USBCBSuspend 67FA  
                        ?_USBStallHandler 0042                  USBStdFeatureReqHandler@p 0046  
                   ?_USBCBWakeFromSuspend 0042                         ?_keyboardBlocking 0042  
                  __size_of_USBDeviceInit 008E   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 6C18  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 0080         ??_USER_USB_CALLBACK_EVENT_HANDLER 0053  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 004D           _USER_USB_CALLBACK_EVENT_HANDLER 6B98  
                      ??_keyboardBlocking 0042                  __end_of_debounceKeyboard 784C  
                  ??_USBConfigureEndpoint 0043                     ?_USBCtrlTrfOutHandler 0042  
                     _USBCtrlTrfRxService 7464                               _USBCBInitEP 698A  
                      _USBWakeFromSuspend 682A                   _USBStdFeatureReqHandler 754A  
                     _USBCtrlTrfTxService 763A                       ?_USBWakeFromSuspend 0042  
                   ??_USBCtrlTrfInHandler 0044                     _USBAlternateInterface 003C  
                     USBEnableEndpoint@ep 004C                      ?_USBCtrlTrfRxService 0042  
                      __CFG_FOSC$HSPLL_HS 000000                      ?_USBCtrlTrfTxService 0042  
       readKeyboardState@currentKeyNumber 0042                      ??_USBWakeFromSuspend 0055  
              USBTransferOnePacket@handle 0047                         _joystick_input_j1 000613  
                       _joystick_input_j2 000656                                _USB_CD_Ptr 7E10  
