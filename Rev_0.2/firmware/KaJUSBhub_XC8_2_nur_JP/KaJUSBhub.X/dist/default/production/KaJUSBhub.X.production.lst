

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Oct 15 11:47:53 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1
    55                           	psect	text44,global,reloc=2,class=CODE,delta=1
    56                           	psect	text45,global,reloc=2,class=CODE,delta=1
    57                           	psect	text46,global,reloc=2,class=CODE,delta=1
    58                           	psect	text47,global,reloc=2,class=CODE,delta=1
    59                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    60                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    61                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    62                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    63                           	dabs	1,0x613,7,_joystick_input_j1
    64                           	dabs	1,0x400,64,_BDT
    65                           	dabs	1,0x500,8,_SetupPkt
    66                           	dabs	1,0x520,8,_CtrlTrfData
    67                           	dabs	1,0x530,64,_hid_report_out_j1
    68                           	dabs	1,0x5F0,64,_hid_report_in_j2
    69                           	dabs	1,0x5B0,64,_hid_report_out_j2
    70                           	dabs	1,0x570,64,_hid_report_in_j1
    71                           	dabs	1,0x656,7,_joystick_input_j2
    72                           	dabs	1,0x67A,1,_hid_report_out_k1
    73                           	dabs	1,0x67B,8,_hid_report_in_k1
    74  0000                     
    75                           ; Version 2.20
    76                           ; Generated 12/02/2020 GMT
    77                           ; 
    78                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    79                           ; All rights reserved.
    80                           ; 
    81                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    82                           ; 
    83                           ; Redistribution and use in source and binary forms, with or without modification, are
    84                           ; permitted provided that the following conditions are met:
    85                           ; 
    86                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    87                           ;        conditions and the following disclaimer.
    88                           ; 
    89                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    90                           ;        of conditions and the following disclaimer in the documentation and/or other
    91                           ;        materials provided with the distribution.
    92                           ; 
    93                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    94                           ;        software without specific prior written permission.
    95                           ; 
    96                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    97                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    98                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    99                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   100                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   101                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   102                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   103                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   104                           ; 
   105                           ; 
   106                           ; Code-generator required, PIC18F4550 Definitions
   107                           ; 
   108                           ; SFR Addresses
   109  0000                     
   110                           	psect	mediumconst
   111  007DC2                     __pmediumconst:
   112                           	callstack 0
   113  007DC2  00                 	db	0
   114  007DC3                     _keymap:
   115                           	callstack 0
   116  007DC3  1E                 	db	30
   117  007DC4  35                 	db	53
   118  007DC5  E0                 	db	224
   119  007DC6  29                 	db	41
   120  007DC7  2C                 	db	44
   121  007DC8  E2                 	db	226
   122  007DC9  14                 	db	20
   123  007DCA  1F                 	db	31
   124  007DCB  20                 	db	32
   125  007DCC  1A                 	db	26
   126  007DCD  04                 	db	4
   127  007DCE  E1                 	db	225
   128  007DCF  1D                 	db	29
   129  007DD0  16                 	db	22
   130  007DD1  08                 	db	8
   131  007DD2  21                 	db	33
   132  007DD3  22                 	db	34
   133  007DD4  15                 	db	21
   134  007DD5  07                 	db	7
   135  007DD6  1B                 	db	27
   136  007DD7  06                 	db	6
   137  007DD8  09                 	db	9
   138  007DD9  17                 	db	23
   139  007DDA  23                 	db	35
   140  007DDB  24                 	db	36
   141  007DDC  1C                 	db	28
   142  007DDD  0A                 	db	10
   143  007DDE  19                 	db	25
   144  007DDF  05                 	db	5
   145  007DE0  0B                 	db	11
   146  007DE1  18                 	db	24
   147  007DE2  25                 	db	37
   148  007DE3  26                 	db	38
   149  007DE4  0C                 	db	12
   150  007DE5  0D                 	db	13
   151  007DE6  11                 	db	17
   152  007DE7  10                 	db	16
   153  007DE8  0E                 	db	14
   154  007DE9  12                 	db	18
   155  007DEA  27                 	db	39
   156  007DEB  43                 	db	67
   157  007DEC  13                 	db	19
   158  007DED  0F                 	db	15
   159  007DEE  36                 	db	54
   160  007DEF  37                 	db	55
   161  007DF0  33                 	db	51
   162  007DF1  2F                 	db	47
   163  007DF2  2D                 	db	45
   164  007DF3  42                 	db	66
   165  007DF4  30                 	db	48
   166  007DF5  34                 	db	52
   167  007DF6  38                 	db	56
   168  007DF7  E5                 	db	229
   169  007DF8  2E                 	db	46
   170  007DF9  31                 	db	49
   171  007DFA  4A                 	db	74
   172  007DFB  2A                 	db	42
   173  007DFC  28                 	db	40
   174  007DFD  4F                 	db	79
   175  007DFE  51                 	db	81
   176  007DFF  3A                 	db	58
   177  007E00  3C                 	db	60
   178  007E01  3E                 	db	62
   179  007E02  40                 	db	64
   180  007E03  44                 	db	68
   181  007E04                     __end_of_keymap:
   182                           	callstack 0
   183  007E04                     _USB_SD_Ptr:
   184                           	callstack 0
   185  007E04  FA                 	db	low _sd000
   186  007E05  7F                 	db	high _sd000
   187  007E06  D2                 	db	low _sd001
   188  007E07  7F                 	db	high _sd001
   189  007E08  96                 	db	low _sd002
   190  007E09  7F                 	db	high _sd002
   191  007E0A  72                 	db	low _sd003
   192  007E0B  7F                 	db	high _sd003
   193  007E0C  4E                 	db	low _sd004
   194  007E0D  7F                 	db	high _sd004
   195  007E0E  B8                 	db	low _sd005
   196  007E0F  7F                 	db	high _sd005
   197  007E10                     __end_of_USB_SD_Ptr:
   198                           	callstack 0
   199  007E10                     _USB_CD_Ptr:
   200                           	callstack 0
   201  007E10  12                 	db	low _configDescriptor1
   202  007E11  7E                 	db	high _configDescriptor1
   203  007E12                     __end_of_USB_CD_Ptr:
   204                           	callstack 0
   205  007E12                     _configDescriptor1:
   206                           	callstack 0
   207  007E12  09                 	db	9
   208  007E13  02                 	db	2
   209  007E14  69                 	db	105
   210  007E15  00                 	db	0
   211  007E16  03                 	db	3
   212  007E17  01                 	db	1
   213  007E18  00                 	db	0
   214  007E19  C0                 	db	192
   215  007E1A  32                 	db	50
   216  007E1B  09                 	db	9
   217  007E1C  04                 	db	4
   218  007E1D  00                 	db	0
   219  007E1E  00                 	db	0
   220  007E1F  02                 	db	2
   221  007E20  03                 	db	3
   222  007E21  00                 	db	0
   223  007E22  00                 	db	0
   224  007E23  03                 	db	3
   225  007E24  09                 	db	9
   226  007E25  21                 	db	33
   227  007E26  11                 	db	17
   228  007E27  01                 	db	1
   229  007E28  00                 	db	0
   230  007E29  01                 	db	1
   231  007E2A  22                 	db	34
   232  007E2B  4A                 	db	74
   233  007E2C  00                 	db	0
   234  007E2D  07                 	db	7
   235  007E2E  05                 	db	5
   236  007E2F  81                 	db	129
   237  007E30  03                 	db	3
   238  007E31  40                 	db	64
   239  007E32  00                 	db	0
   240  007E33  01                 	db	1
   241  007E34  07                 	db	7
   242  007E35  05                 	db	5
   243  007E36  01                 	db	1
   244  007E37  03                 	db	3
   245  007E38  40                 	db	64
   246  007E39  00                 	db	0
   247  007E3A  01                 	db	1
   248  007E3B  09                 	db	9
   249  007E3C  04                 	db	4
   250  007E3D  01                 	db	1
   251  007E3E  00                 	db	0
   252  007E3F  02                 	db	2
   253  007E40  03                 	db	3
   254  007E41  00                 	db	0
   255  007E42  00                 	db	0
   256  007E43  04                 	db	4
   257  007E44  09                 	db	9
   258  007E45  21                 	db	33
   259  007E46  11                 	db	17
   260  007E47  01                 	db	1
   261  007E48  00                 	db	0
   262  007E49  01                 	db	1
   263  007E4A  22                 	db	34
   264  007E4B  4A                 	db	74
   265  007E4C  00                 	db	0
   266  007E4D  07                 	db	7
   267  007E4E  05                 	db	5
   268  007E4F  82                 	db	130
   269  007E50  03                 	db	3
   270  007E51  40                 	db	64
   271  007E52  00                 	db	0
   272  007E53  01                 	db	1
   273  007E54  07                 	db	7
   274  007E55  05                 	db	5
   275  007E56  02                 	db	2
   276  007E57  03                 	db	3
   277  007E58  40                 	db	64
   278  007E59  00                 	db	0
   279  007E5A  01                 	db	1
   280  007E5B  09                 	db	9
   281  007E5C  04                 	db	4
   282  007E5D  02                 	db	2
   283  007E5E  00                 	db	0
   284  007E5F  02                 	db	2
   285  007E60  03                 	db	3
   286  007E61  01                 	db	1
   287  007E62  01                 	db	1
   288  007E63  05                 	db	5
   289  007E64  09                 	db	9
   290  007E65  21                 	db	33
   291  007E66  11                 	db	17
   292  007E67  01                 	db	1
   293  007E68  00                 	db	0
   294  007E69  01                 	db	1
   295  007E6A  22                 	db	34
   296  007E6B  3F                 	db	63
   297  007E6C  00                 	db	0
   298  007E6D  07                 	db	7
   299  007E6E  05                 	db	5
   300  007E6F  83                 	db	131
   301  007E70  03                 	db	3
   302  007E71  08                 	db	8
   303  007E72  00                 	db	0
   304  007E73  01                 	db	1
   305  007E74  07                 	db	7
   306  007E75  05                 	db	5
   307  007E76  03                 	db	3
   308  007E77  03                 	db	3
   309  007E78  08                 	db	8
   310  007E79  00                 	db	0
   311  007E7A  01                 	db	1
   312  007E7B                     __end_of_configDescriptor1:
   313                           	callstack 0
   314  007E7B                     _hid_rpt01_j2:
   315                           	callstack 0
   316  007E7B  05                 	db	5
   317  007E7C  01                 	db	1
   318  007E7D  09                 	db	9
   319  007E7E  05                 	db	5
   320  007E7F  A1                 	db	161
   321  007E80  01                 	db	1
   322  007E81  15                 	db	21
   323  007E82  00                 	db	0
   324  007E83  25                 	db	37
   325  007E84  01                 	db	1
   326  007E85  35                 	db	53
   327  007E86  00                 	db	0
   328  007E87  45                 	db	69
   329  007E88  01                 	db	1
   330  007E89  75                 	db	117
   331  007E8A  01                 	db	1
   332  007E8B  95                 	db	149
   333  007E8C  0D                 	db	13
   334  007E8D  05                 	db	5
   335  007E8E  09                 	db	9
   336  007E8F  19                 	db	25
   337  007E90  01                 	db	1
   338  007E91  29                 	db	41
   339  007E92  0D                 	db	13
   340  007E93  81                 	db	129
   341  007E94  02                 	db	2
   342  007E95  95                 	db	149
   343  007E96  03                 	db	3
   344  007E97  81                 	db	129
   345  007E98  01                 	db	1
   346  007E99  05                 	db	5
   347  007E9A  01                 	db	1
   348  007E9B  25                 	db	37
   349  007E9C  07                 	db	7
   350  007E9D  46                 	db	70
   351  007E9E  3B                 	db	59
   352  007E9F  01                 	db	1
   353  007EA0  75                 	db	117
   354  007EA1  04                 	db	4
   355  007EA2  95                 	db	149
   356  007EA3  01                 	db	1
   357  007EA4  65                 	db	101
   358  007EA5  14                 	db	20
   359  007EA6  09                 	db	9
   360  007EA7  39                 	db	57
   361  007EA8  81                 	db	129
   362  007EA9  42                 	db	66
   363  007EAA  65                 	db	101
   364  007EAB  00                 	db	0
   365  007EAC  95                 	db	149
   366  007EAD  01                 	db	1
   367  007EAE  81                 	db	129
   368  007EAF  01                 	db	1
   369  007EB0  26                 	db	38
   370  007EB1  FF                 	db	255
   371  007EB2  00                 	db	0
   372  007EB3  46                 	db	70
   373  007EB4  FF                 	db	255
   374  007EB5  00                 	db	0
   375  007EB6  09                 	db	9
   376  007EB7  30                 	db	48
   377  007EB8  09                 	db	9
   378  007EB9  31                 	db	49
   379  007EBA  09                 	db	9
   380  007EBB  32                 	db	50
   381  007EBC  09                 	db	9
   382  007EBD  35                 	db	53
   383  007EBE  75                 	db	117
   384  007EBF  08                 	db	8
   385  007EC0  95                 	db	149
   386  007EC1  04                 	db	4
   387  007EC2  81                 	db	129
   388  007EC3  02                 	db	2
   389  007EC4  C0                 	db	192
   390  007EC5                     __end_of_hid_rpt01_j2:
   391                           	callstack 0
   392  007EC5                     _hid_rpt01_j1:
   393                           	callstack 0
   394  007EC5  05                 	db	5
   395  007EC6  01                 	db	1
   396  007EC7  09                 	db	9
   397  007EC8  05                 	db	5
   398  007EC9  A1                 	db	161
   399  007ECA  01                 	db	1
   400  007ECB  15                 	db	21
   401  007ECC  00                 	db	0
   402  007ECD  25                 	db	37
   403  007ECE  01                 	db	1
   404  007ECF  35                 	db	53
   405  007ED0  00                 	db	0
   406  007ED1  45                 	db	69
   407  007ED2  01                 	db	1
   408  007ED3  75                 	db	117
   409  007ED4  01                 	db	1
   410  007ED5  95                 	db	149
   411  007ED6  0D                 	db	13
   412  007ED7  05                 	db	5
   413  007ED8  09                 	db	9
   414  007ED9  19                 	db	25
   415  007EDA  01                 	db	1
   416  007EDB  29                 	db	41
   417  007EDC  0D                 	db	13
   418  007EDD  81                 	db	129
   419  007EDE  02                 	db	2
   420  007EDF  95                 	db	149
   421  007EE0  03                 	db	3
   422  007EE1  81                 	db	129
   423  007EE2  01                 	db	1
   424  007EE3  05                 	db	5
   425  007EE4  01                 	db	1
   426  007EE5  25                 	db	37
   427  007EE6  07                 	db	7
   428  007EE7  46                 	db	70
   429  007EE8  3B                 	db	59
   430  007EE9  01                 	db	1
   431  007EEA  75                 	db	117
   432  007EEB  04                 	db	4
   433  007EEC  95                 	db	149
   434  007EED  01                 	db	1
   435  007EEE  65                 	db	101
   436  007EEF  14                 	db	20
   437  007EF0  09                 	db	9
   438  007EF1  39                 	db	57
   439  007EF2  81                 	db	129
   440  007EF3  42                 	db	66
   441  007EF4  65                 	db	101
   442  007EF5  00                 	db	0
   443  007EF6  95                 	db	149
   444  007EF7  01                 	db	1
   445  007EF8  81                 	db	129
   446  007EF9  01                 	db	1
   447  007EFA  26                 	db	38
   448  007EFB  FF                 	db	255
   449  007EFC  00                 	db	0
   450  007EFD  46                 	db	70
   451  007EFE  FF                 	db	255
   452  007EFF  00                 	db	0
   453  007F00  09                 	db	9
   454  007F01  30                 	db	48
   455  007F02  09                 	db	9
   456  007F03  31                 	db	49
   457  007F04  09                 	db	9
   458  007F05  32                 	db	50
   459  007F06  09                 	db	9
   460  007F07  35                 	db	53
   461  007F08  75                 	db	117
   462  007F09  08                 	db	8
   463  007F0A  95                 	db	149
   464  007F0B  04                 	db	4
   465  007F0C  81                 	db	129
   466  007F0D  02                 	db	2
   467  007F0E  C0                 	db	192
   468  007F0F                     __end_of_hid_rpt01_j1:
   469                           	callstack 0
   470  007F0F                     _hid_rpt01_k1:
   471                           	callstack 0
   472  007F0F  05                 	db	5
   473  007F10  01                 	db	1
   474  007F11  09                 	db	9
   475  007F12  06                 	db	6
   476  007F13  A1                 	db	161
   477  007F14  01                 	db	1
   478  007F15  05                 	db	5
   479  007F16  07                 	db	7
   480  007F17  19                 	db	25
   481  007F18  E0                 	db	224
   482  007F19  29                 	db	41
   483  007F1A  E7                 	db	231
   484  007F1B  15                 	db	21
   485  007F1C  00                 	db	0
   486  007F1D  25                 	db	37
   487  007F1E  01                 	db	1
   488  007F1F  75                 	db	117
   489  007F20  01                 	db	1
   490  007F21  95                 	db	149
   491  007F22  08                 	db	8
   492  007F23  81                 	db	129
   493  007F24  02                 	db	2
   494  007F25  95                 	db	149
   495  007F26  01                 	db	1
   496  007F27  75                 	db	117
   497  007F28  08                 	db	8
   498  007F29  81                 	db	129
   499  007F2A  03                 	db	3
   500  007F2B  95                 	db	149
   501  007F2C  05                 	db	5
   502  007F2D  75                 	db	117
   503  007F2E  01                 	db	1
   504  007F2F  05                 	db	5
   505  007F30  08                 	db	8
   506  007F31  19                 	db	25
   507  007F32  01                 	db	1
   508  007F33  29                 	db	41
   509  007F34  05                 	db	5
   510  007F35  91                 	db	145
   511  007F36  02                 	db	2
   512  007F37  95                 	db	149
   513  007F38  01                 	db	1
   514  007F39  75                 	db	117
   515  007F3A  03                 	db	3
   516  007F3B  91                 	db	145
   517  007F3C  03                 	db	3
   518  007F3D  95                 	db	149
   519  007F3E  06                 	db	6
   520  007F3F  75                 	db	117
   521  007F40  08                 	db	8
   522  007F41  15                 	db	21
   523  007F42  00                 	db	0
   524  007F43  25                 	db	37
   525  007F44  65                 	db	101
   526  007F45  05                 	db	5
   527  007F46  07                 	db	7
   528  007F47  19                 	db	25
   529  007F48  00                 	db	0
   530  007F49  29                 	db	41
   531  007F4A  65                 	db	101
   532  007F4B  81                 	db	129
   533  007F4C  00                 	db	0
   534  007F4D  C0                 	db	192
   535  007F4E                     __end_of_hid_rpt01_k1:
   536                           	callstack 0
   537  007F4E                     _sd004:
   538                           	callstack 0
   539  007F4E  24                 	db	36
   540  007F4F  03                 	db	3
   541  007F50  0043               	dw	67
   542  007F52  0036               	dw	54
   543  007F54  0034               	dw	52
   544  007F56  0020               	dw	32
   545  007F58  004A               	dw	74
   546  007F5A  006F               	dw	111
   547  007F5C  0079               	dw	121
   548  007F5E  0073               	dw	115
   549  007F60  0074               	dw	116
   550  007F62  0069               	dw	105
   551  007F64  0063               	dw	99
   552  007F66  006B               	dw	107
   553  007F68  0020               	dw	32
   554  007F6A  0050               	dw	80
   555  007F6C  006F               	dw	111
   556  007F6E  0072               	dw	114
   557  007F70  0074               	dw	116
   558  007F72                     __end_of_sd004:
   559                           	callstack 0
   560  007F72                     _sd003:
   561                           	callstack 0
   562  007F72  24                 	db	36
   563  007F73  03                 	db	3
   564  007F74  0043               	dw	67
   565  007F76  0036               	dw	54
   566  007F78  0034               	dw	52
   567  007F7A  0020               	dw	32
   568  007F7C  004A               	dw	74
   569  007F7E  006F               	dw	111
   570  007F80  0079               	dw	121
   571  007F82  0073               	dw	115
   572  007F84  0074               	dw	116
   573  007F86  0069               	dw	105
   574  007F88  0063               	dw	99
   575  007F8A  006B               	dw	107
   576  007F8C  0020               	dw	32
   577  007F8E  0050               	dw	80
   578  007F90  006F               	dw	111
   579  007F92  0072               	dw	114
   580  007F94  0074               	dw	116
   581  007F96                     __end_of_sd003:
   582                           	callstack 0
   583  007F96                     _sd002:
   584                           	callstack 0
   585  007F96  22                 	db	34
   586  007F97  03                 	db	3
   587  007F98  0043               	dw	67
   588  007F9A  006F               	dw	111
   589  007F9C  006D               	dw	109
   590  007F9E  006D               	dw	109
   591  007FA0  006F               	dw	111
   592  007FA2  0064               	dw	100
   593  007FA4  006F               	dw	111
   594  007FA6  0072               	dw	114
   595  007FA8  0065               	dw	101
   596  007FAA  0020               	dw	32
   597  007FAC  0036               	dw	54
   598  007FAE  0034               	dw	52
   599  007FB0  0020               	dw	32
   600  007FB2  0055               	dw	85
   601  007FB4  0053               	dw	83
   602  007FB6  0042               	dw	66
   603  007FB8                     __end_of_sd002:
   604                           	callstack 0
   605  007FB8                     _sd005:
   606                           	callstack 0
   607  007FB8  1A                 	db	26
   608  007FB9  03                 	db	3
   609  007FBA  0043               	dw	67
   610  007FBC  0036               	dw	54
   611  007FBE  0034               	dw	52
   612  007FC0  0020               	dw	32
   613  007FC2  004B               	dw	75
   614  007FC4  0065               	dw	101
   615  007FC6  0079               	dw	121
   616  007FC8  0062               	dw	98
   617  007FCA  006F               	dw	111
   618  007FCC  0061               	dw	97
   619  007FCE  0072               	dw	114
   620  007FD0  0064               	dw	100
   621  007FD2                     __end_of_sd005:
   622                           	callstack 0
   623  007FD2                     _sd001:
   624                           	callstack 0
   625  007FD2  16                 	db	22
   626  007FD3  03                 	db	3
   627  007FD4  0053               	dw	83
   628  007FD6  0069               	dw	105
   629  007FD8  006D               	dw	109
   630  007FDA  006F               	dw	111
   631  007FDC  006E               	dw	110
   632  007FDE  0020               	dw	32
   633  007FE0  0049               	dw	73
   634  007FE2  006E               	dw	110
   635  007FE4  006E               	dw	110
   636  007FE6  0073               	dw	115
   637  007FE8                     __end_of_sd001:
   638                           	callstack 0
   639  007FE8                     _device_dsc:
   640                           	callstack 0
   641  007FE8  12                 	db	18
   642  007FE9  01                 	db	1
   643  007FEA  0200               	dw	512
   644  007FEC  00                 	db	0
   645  007FED  00                 	db	0
   646  007FEE  00                 	db	0
   647  007FEF  08                 	db	8
   648  007FF0  04D8               	dw	1240
   649  007FF2  007A               	dw	122
   650  007FF4  0001               	dw	1
   651  007FF6  01                 	db	1
   652  007FF7  02                 	db	2
   653  007FF8  00                 	db	0
   654  007FF9  01                 	db	1
   655  007FFA                     __end_of_device_dsc:
   656                           	callstack 0
   657  007FFA                     _sd000:
   658                           	callstack 0
   659  007FFA  04                 	db	4
   660  007FFB  03                 	db	3
   661  007FFC  0409               	dw	1033
   662  007FFE                     __end_of_sd000:
   663                           	callstack 0
   664  0000                     _ADRESH	set	4036
   665  0000                     _ADRESL	set	4035
   666  0000                     _ADCON0	set	4034
   667  0000                     _PORTE	set	3972
   668  0000                     _PORTD	set	3971
   669  0000                     _PORTC	set	3970
   670  0000                     _PORTB	set	3969
   671  0000                     _PORTA	set	3968
   672  0000                     _TRISE	set	3990
   673  0000                     _TRISD	set	3989
   674  0000                     _TRISC	set	3988
   675  0000                     _TRISB	set	3987
   676  0000                     _TRISA	set	3986
   677  0000                     _ADCON2	set	4032
   678  0000                     _ADCON1	set	4033
   679  0000                     _UEP0bits	set	3952
   680  0000                     _USTAT	set	3948
   681  0000                     _UIEbits	set	3945
   682  0000                     _PIR2bits	set	4001
   683  0000                     _UCON	set	3949
   684  0000                     _UIRbits	set	3944
   685  0000                     _UADDR	set	3950
   686  0000                     _UCONbits	set	3949
   687  0000                     _UIE	set	3945
   688  0000                     _UEIE	set	3947
   689  0000                     _UCFG	set	3951
   690  0000                     _UIR	set	3944
   691  0000                     _UEIR	set	3946
   692  0000                     _UEP0	set	3952
   693  0000                     _UEP1	set	3953
   694  0000                     _RC2	set	31762
   695  0000                     _RB2	set	31754
   696  0000                     _RB1	set	31753
   697  0000                     _RB0	set	31752
   698  0000                     _TRISD7	set	31919
   699  0000                     _TRISD6	set	31918
   700  0000                     _TRISD5	set	31917
   701  0000                     _TRISD4	set	31916
   702  0000                     _TRISD3	set	31915
   703  0000                     _TRISD2	set	31914
   704  0000                     _TRISD1	set	31913
   705  0000                     _TRISD0	set	31912
   706  0000                     _RESUME	set	31594
   707  0000                     _GODONE	set	32273
   708  0000                     _RB4	set	31756
   709  0000                     _RB7	set	31759
   710  0000                     _RB6	set	31758
   711  0000                     _RB5	set	31757
   712  0000                     _RB3	set	31755
   713  0000                     _RA5	set	31749
   714  0000                     _RA4	set	31748
   715  0000                     _TRISA5	set	31893
   716  0000                     _TRISA4	set	31892
   717  0000                     _RC1	set	31761
   718  0000                     _RC0	set	31760
   719  0000                     _RBPU	set	32655
   720  0000                     _SUSPND	set	31593
   721  0000                     _SE0	set	31597
   722  0000                     _PKTDIS	set	31596
   723  007FFE  00                 	db	0	; dummy byte at the end
   724  0000                     
   725                           ; #config settings
   726                           
   727                           	psect	cinit
   728  005E0C                     __pcinit:
   729                           	callstack 0
   730  005E0C                     start_initialization:
   731                           	callstack 0
   732  005E0C                     __initialization:
   733                           	callstack 0
   734                           
   735                           ; Clear objects allocated to BANK1 (195 bytes)
   736  005E0C  EE01  F000         	lfsr	0,__pbssBANK1
   737  005E10  0EC3               	movlw	195
   738  005E12                     clear_0:
   739  005E12  6AEE               	clrf	postinc0,c
   740  005E14  06E8               	decf	wreg,f,c
   741  005E16  E1FD               	bnz	clear_0
   742                           
   743                           ; Clear objects allocated to BANK0 (104 bytes)
   744  005E18  EE00  F060         	lfsr	0,__pbssBANK0
   745  005E1C  0E68               	movlw	104
   746  005E1E                     clear_1:
   747  005E1E  6AEE               	clrf	postinc0,c
   748  005E20  06E8               	decf	wreg,f,c
   749  005E22  E1FD               	bnz	clear_1
   750                           
   751                           ; Clear objects allocated to COMRAM (18 bytes)
   752  005E24  EE00  F04E         	lfsr	0,__pbssCOMRAM
   753  005E28  0E12               	movlw	18
   754  005E2A                     clear_2:
   755  005E2A  6AEE               	clrf	postinc0,c
   756  005E2C  06E8               	decf	wreg,f,c
   757  005E2E  E1FD               	bnz	clear_2
   758  005E30                     end_of_initialization:
   759                           	callstack 0
   760  005E30                     __end_of__initialization:
   761                           	callstack 0
   762  005E30  0E00               	movlw	low (__Lmediumconst shr (0+16))
   763  005E32  6EF8               	movwf	tblptru,c
   764  005E34  0100               	movlb	0
   765  005E36  EF39  F030         	goto	_main	;jump to C main() function
   766                           
   767                           	psect	bssCOMRAM
   768  00004E                     __pbssCOMRAM:
   769                           	callstack 0
   770  00004E                     _inPipes:
   771                           	callstack 0
   772  00004E                     	ds	6
   773  000054                     _pBDTEntryEP0OutNext:
   774                           	callstack 0
   775  000054                     	ds	2
   776  000056                     _pBDTEntryEP0OutCurrent:
   777                           	callstack 0
   778  000056                     	ds	2
   779  000058                     _controlTransferState:
   780                           	callstack 0
   781  000058                     	ds	1
   782  000059                     _shortPacketStatus:
   783                           	callstack 0
   784  000059                     	ds	1
   785  00005A                     _USBDeviceState:
   786                           	callstack 0
   787  00005A                     	ds	1
   788  00005B                     _USTATcopy:
   789                           	callstack 0
   790  00005B                     	ds	1
   791  00005C                     _USBAlternateInterface:
   792                           	callstack 0
   793  00005C                     	ds	1
   794  00005D                     _active_protocol_j1:
   795                           	callstack 0
   796  00005D                     	ds	1
   797  00005E                     _idle_rate_j1:
   798                           	callstack 0
   799  00005E                     	ds	1
   800  00005F                     _USBActiveConfiguration:
   801                           	callstack 0
   802  00005F                     	ds	1
   803                           
   804                           	psect	bssBANK0
   805  000060                     __pbssBANK0:
   806                           	callstack 0
   807  000060                     _joystick:
   808                           	callstack 0
   809  000060                     	ds	30
   810  00007E                     _USBInData:
   811                           	callstack 0
   812  00007E                     	ds	9
   813  000087                     _OutBuffer:
   814                           	callstack 0
   815  000087                     	ds	8
   816  00008F                     _buffer:
   817                           	callstack 0
   818  00008F                     	ds	8
   819  000097                     _outPipes:
   820                           	callstack 0
   821  000097                     	ds	8
   822  00009F                     _pBDTEntryIn:
   823                           	callstack 0
   824  00009F                     	ds	8
   825  0000A7                     _pBDTEntryOut:
   826                           	callstack 0
   827  0000A7                     	ds	8
   828  0000AF                     _USBInMaxPacketSize:
   829                           	callstack 0
   830  0000AF                     	ds	6
   831  0000B5                     USBCBSendResume@delay_count:
   832                           	callstack 0
   833  0000B5                     	ds	2
   834  0000B7                     _lastOUTTransmission_k1:
   835                           	callstack 0
   836  0000B7                     	ds	2
   837  0000B9                     _lastINTransmission_k1:
   838                           	callstack 0
   839  0000B9                     	ds	2
   840  0000BB                     _lastTransmission_j2:
   841                           	callstack 0
   842  0000BB                     	ds	2
   843  0000BD                     _lastTransmission_j1:
   844                           	callstack 0
   845  0000BD                     	ds	2
   846  0000BF                     _pDst:
   847                           	callstack 0
   848  0000BF                     	ds	2
   849  0000C1                     _Keyboard_out:
   850                           	callstack 0
   851  0000C1                     	ds	1
   852  0000C2                     _BothEP0OutUOWNsSet:
   853                           	callstack 0
   854  0000C2                     	ds	1
   855  0000C3                     _RemoteWakeup:
   856                           	callstack 0
   857  0000C3                     	ds	1
   858  0000C4                     _active_protocol_k1:
   859                           	callstack 0
   860  0000C4                     	ds	1
   861  0000C5                     _idle_rate_k1:
   862                           	callstack 0
   863  0000C5                     	ds	1
   864  0000C6                     _active_protocol_j2:
   865                           	callstack 0
   866  0000C6                     	ds	1
   867  0000C7                     _idle_rate_j2:
   868                           	callstack 0
   869  0000C7                     	ds	1
   870                           
   871                           	psect	bssBANK1
   872  000100                     __pbssBANK1:
   873                           	callstack 0
   874  000100                     _keyboard:
   875                           	callstack 0
   876  000100                     	ds	130
   877  000182                     _rawKeyboardState:
   878                           	callstack 0
   879  000182                     	ds	65
   880                           
   881                           	psect	cstackCOMRAM
   882  000001                     __pcstackCOMRAM:
   883                           	callstack 0
   884  000001                     ??_USBStdGetDscHandler:
   885  000001                     ??_USBStdGetStatusHandler:
   886  000001                     ??_USBStdFeatureReqHandler:
   887  000001                     ??_USBCBCheckOtherReq:
   888  000001                     ?_USBTransferOnePacket:
   889                           	callstack 0
   890  000001                     ?___ftpack:
   891                           	callstack 0
   892  000001                     ?___fttol:
   893                           	callstack 0
   894  000001                     USBCtrlTrfRxService@i:
   895                           	callstack 0
   896  000001                     USBConfigureEndpoint@direction:
   897                           	callstack 0
   898  000001                     USBTransferOnePacket@dir:
   899                           	callstack 0
   900  000001                     USBPrepareForNextSetupTrf@p:
   901                           	callstack 0
   902  000001                     USBCtrlTrfTxService@byteToSend:
   903                           	callstack 0
   904  000001                     initialiseJoysticks@loop:
   905                           	callstack 0
   906  000001                     memset@p1:
   907                           	callstack 0
   908  000001                     ___ftpack@arg:
   909                           	callstack 0
   910  000001                     ___ftge@ff1:
   911                           	callstack 0
   912  000001                     ___fttol@f1:
   913                           	callstack 0
   914                           
   915                           ; 3 bytes @ 0x0
   916  000001                     	ds	1
   917  000002                     ??_USBConfigureEndpoint:
   918  000002                     USBCtrlTrfRxService@byteToRead:
   919                           	callstack 0
   920  000002                     USBStdGetStatusHandler@p:
   921                           	callstack 0
   922  000002                     USBTransferOnePacket@data:
   923                           	callstack 0
   924                           
   925                           ; 2 bytes @ 0x1
   926  000002                     	ds	1
   927  000003                     USBCtrlTrfInHandler@lastDTS:
   928                           	callstack 0
   929  000003                     USBStdFeatureReqHandler@pUEP:
   930                           	callstack 0
   931  000003                     memset@c:
   932                           	callstack 0
   933                           
   934                           ; 2 bytes @ 0x2
   935  000003                     	ds	1
   936  000004                     USBConfigureEndpoint@workaround:
   937                           	callstack 0
   938  000004                     USBTransferOnePacket@len:
   939                           	callstack 0
   940  000004                     ___ftpack@exp:
   941                           	callstack 0
   942  000004                     ___ftge@ff2:
   943                           	callstack 0
   944                           
   945                           ; 3 bytes @ 0x3
   946  000004                     	ds	1
   947  000005                     ??___fttol:
   948  000005                     USBConfigureEndpoint@EPNum:
   949                           	callstack 0
   950  000005                     USBTransferOnePacket@ep:
   951                           	callstack 0
   952  000005                     ___ftpack@sign:
   953                           	callstack 0
   954  000005                     USBStdFeatureReqHandler@p:
   955                           	callstack 0
   956  000005                     memset@n:
   957                           	callstack 0
   958                           
   959                           ; 2 bytes @ 0x4
   960  000005                     	ds	1
   961  000006                     ??___ftpack:
   962  000006                     USBConfigureEndpoint@handle:
   963                           	callstack 0
   964  000006                     USBTransferOnePacket@handle:
   965                           	callstack 0
   966                           
   967                           ; 2 bytes @ 0x5
   968  000006                     	ds	1
   969  000007                     ??___ftge:
   970  000007                     memset@p:
   971                           	callstack 0
   972                           
   973                           ; 2 bytes @ 0x6
   974  000007                     	ds	1
   975  000008                     ??_processJoystick_j1:
   976  000008                     ??_processJoystick_j2:
   977  000008                     USBEnableEndpoint@options:
   978                           	callstack 0
   979                           
   980                           ; 1 bytes @ 0x7
   981  000008                     	ds	1
   982  000009                     ?___awtoft:
   983                           	callstack 0
   984  000009                     USBDeviceInit@i:
   985                           	callstack 0
   986  000009                     USBEnableEndpoint@p:
   987                           	callstack 0
   988  000009                     _processJoystick_j1$3039:
   989                           	callstack 0
   990  000009                     _processJoystick_j2$3099:
   991                           	callstack 0
   992  000009                     ___awtoft@c:
   993                           	callstack 0
   994                           
   995                           ; 2 bytes @ 0x8
   996  000009                     	ds	1
   997  00000A                     ___fttol@sign1:
   998                           	callstack 0
   999                           
  1000                           ; 1 bytes @ 0x9
  1001  00000A                     	ds	1
  1002  00000B                     USBEnableEndpoint@ep:
  1003                           	callstack 0
  1004  00000B                     ___fttol@lval:
  1005                           	callstack 0
  1006                           
  1007                           ; 4 bytes @ 0xA
  1008  00000B                     	ds	1
  1009  00000C                     ___awtoft@sign:
  1010                           	callstack 0
  1011  00000C                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  1012                           	callstack 0
  1013                           
  1014                           ; 2 bytes @ 0xB
  1015  00000C                     	ds	1
  1016  00000D                     ?___ftdiv:
  1017                           	callstack 0
  1018  00000D                     ___ftdiv@f1:
  1019                           	callstack 0
  1020                           
  1021                           ; 3 bytes @ 0xC
  1022  00000D                     	ds	1
  1023  00000E                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  1024                           	callstack 0
  1025                           
  1026                           ; 2 bytes @ 0xD
  1027  00000E                     	ds	1
  1028  00000F                     ___fttol@exp1:
  1029                           	callstack 0
  1030                           
  1031                           ; 1 bytes @ 0xE
  1032  00000F                     	ds	1
  1033  000010                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  1034                           	callstack 0
  1035  000010                     ___ftdiv@f2:
  1036                           	callstack 0
  1037                           
  1038                           ; 3 bytes @ 0xF
  1039  000010                     	ds	2
  1040  000012                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  1041                           
  1042                           ; 1 bytes @ 0x11
  1043  000012                     	ds	1
  1044  000013                     ??___ftdiv:
  1045                           
  1046                           ; 1 bytes @ 0x12
  1047  000013                     	ds	1
  1048  000014                     ??_USBCtrlEPService:
  1049  000014                     
  1050                           ; 1 bytes @ 0x13
  1051  000014                     	ds	2
  1052  000016                     USBCtrlEPService@setup_cnt:
  1053                           	callstack 0
  1054  000016                     ___ftdiv@cntr:
  1055                           	callstack 0
  1056                           
  1057                           ; 1 bytes @ 0x15
  1058  000016                     	ds	1
  1059  000017                     ??_USBDeviceTasks:
  1060  000017                     ___ftdiv@f3:
  1061                           	callstack 0
  1062                           
  1063                           ; 3 bytes @ 0x16
  1064  000017                     	ds	1
  1065  000018                     USBDeviceTasks@i:
  1066                           	callstack 0
  1067                           
  1068                           ; 1 bytes @ 0x17
  1069  000018                     	ds	2
  1070  00001A                     ___ftdiv@exp:
  1071                           	callstack 0
  1072                           
  1073                           ; 1 bytes @ 0x19
  1074  00001A                     	ds	1
  1075  00001B                     ___ftdiv@sign:
  1076                           	callstack 0
  1077                           
  1078                           ; 1 bytes @ 0x1A
  1079  00001B                     	ds	1
  1080  00001C                     ?___ftmul:
  1081                           	callstack 0
  1082  00001C                     ___ftmul@f1:
  1083                           	callstack 0
  1084                           
  1085                           ; 3 bytes @ 0x1B
  1086  00001C                     	ds	3
  1087  00001F                     ___ftmul@f2:
  1088                           	callstack 0
  1089                           
  1090                           ; 3 bytes @ 0x1E
  1091  00001F                     	ds	3
  1092  000022                     ??___ftmul:
  1093                           
  1094                           ; 1 bytes @ 0x21
  1095  000022                     	ds	3
  1096  000025                     ___ftmul@exp:
  1097                           	callstack 0
  1098                           
  1099                           ; 1 bytes @ 0x24
  1100  000025                     	ds	1
  1101  000026                     ___ftmul@f3_as_product:
  1102                           	callstack 0
  1103                           
  1104                           ; 3 bytes @ 0x25
  1105  000026                     	ds	3
  1106  000029                     ___ftmul@cntr:
  1107                           	callstack 0
  1108                           
  1109                           ; 1 bytes @ 0x28
  1110  000029                     	ds	1
  1111  00002A                     ___ftmul@sign:
  1112                           	callstack 0
  1113                           
  1114                           ; 1 bytes @ 0x29
  1115  00002A                     	ds	1
  1116  00002B                     ?___ftadd:
  1117                           	callstack 0
  1118  00002B                     ___ftadd@f1:
  1119                           	callstack 0
  1120                           
  1121                           ; 3 bytes @ 0x2A
  1122  00002B                     	ds	3
  1123  00002E                     ___ftadd@f2:
  1124                           	callstack 0
  1125                           
  1126                           ; 3 bytes @ 0x2D
  1127  00002E                     	ds	3
  1128  000031                     ??___ftadd:
  1129                           
  1130                           ; 1 bytes @ 0x30
  1131  000031                     	ds	3
  1132  000034                     ___ftadd@sign:
  1133                           	callstack 0
  1134                           
  1135                           ; 1 bytes @ 0x33
  1136  000034                     	ds	1
  1137  000035                     ___ftadd@exp2:
  1138                           	callstack 0
  1139                           
  1140                           ; 1 bytes @ 0x34
  1141  000035                     	ds	1
  1142  000036                     ___ftadd@exp1:
  1143                           	callstack 0
  1144                           
  1145                           ; 1 bytes @ 0x35
  1146  000036                     	ds	1
  1147  000037                     ?___ftsub:
  1148                           	callstack 0
  1149  000037                     ___ftsub@f1:
  1150                           	callstack 0
  1151                           
  1152                           ; 3 bytes @ 0x36
  1153  000037                     	ds	3
  1154  00003A                     ___ftsub@f2:
  1155                           	callstack 0
  1156                           
  1157                           ; 3 bytes @ 0x39
  1158  00003A                     	ds	3
  1159  00003D                     ?_readADC:
  1160                           	callstack 0
  1161                           
  1162                           ; 2 bytes @ 0x3C
  1163  00003D                     	ds	2
  1164  00003F                     _readADC$4189:
  1165                           	callstack 0
  1166                           
  1167                           ; 3 bytes @ 0x3E
  1168  00003F                     	ds	3
  1169  000042                     _readADC$4190:
  1170                           	callstack 0
  1171                           
  1172                           ; 3 bytes @ 0x41
  1173  000042                     	ds	3
  1174  000045                     readADC@ADCnumber:
  1175                           	callstack 0
  1176                           
  1177                           ; 1 bytes @ 0x44
  1178  000045                     	ds	1
  1179  000046                     readADC@adcResult:
  1180                           	callstack 0
  1181                           
  1182                           ; 2 bytes @ 0x45
  1183  000046                     	ds	2
  1184  000048                     readADC@calc:
  1185                           	callstack 0
  1186                           
  1187                           ; 3 bytes @ 0x47
  1188  000048                     	ds	3
  1189  00004B                     ??_readJoystickState:
  1190                           
  1191                           ; 1 bytes @ 0x4A
  1192  00004B                     	ds	2
  1193  00004D                     readJoystickState@port:
  1194                           	callstack 0
  1195                           
  1196                           ; 1 bytes @ 0x4C
  1197  00004D                     	ds	1
  1198  00004E                     
  1199                           ; 1 bytes @ 0x4D
  1200 ;;
  1201 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1202 ;;
  1203 ;; *************** function _main *****************
  1204 ;; Defined at:
  1205 ;;		line 67 in file "../main.c"
  1206 ;; Parameters:    Size  Location     Type
  1207 ;;		None
  1208 ;; Auto vars:     Size  Location     Type
  1209 ;;		None
  1210 ;; Return value:  Size  Location     Type
  1211 ;;                  1    wreg      void 
  1212 ;; Registers used:
  1213 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1214 ;; Tracked objects:
  1215 ;;		On entry : 0/0
  1216 ;;		On exit  : 0/0
  1217 ;;		Unchanged: 0/0
  1218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  1219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  1220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0
  1221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  1222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0
  1223 ;;Total ram usage:        0 bytes
  1224 ;; Hardware stack levels required when called: 9
  1225 ;; This function calls:
  1226 ;;		_USBDeviceInit
  1227 ;;		_USBDeviceTasks
  1228 ;;		_initialise
  1229 ;;		_processJoystick_j1
  1230 ;;		_processJoystick_j2
  1231 ;;		_readJoystickState
  1232 ;; This function is called by:
  1233 ;;		Startup code after reset
  1234 ;; This function uses a non-reentrant model
  1235 ;;
  1236                           
  1237                           	psect	text0
  1238  006072                     __ptext0:
  1239                           	callstack 0
  1240  006072                     _main:
  1241                           	callstack 22
  1242                           
  1243                           ;main.c: 72: ADCON1 = 0b00001110;
  1244                           
  1245                           ;incstack = 0
  1246  006072  0E0E               	movlw	14
  1247  006074  6EC1               	movwf	193,c	;volatile
  1248                           
  1249                           ;main.c: 75: ADCON2 = 0b10110110;
  1250  006076  0EB6               	movlw	182
  1251  006078  6EC0               	movwf	192,c	;volatile
  1252                           
  1253                           ;main.c: 78: TRISA = 0b00111111;
  1254  00607A  0E3F               	movlw	63
  1255  00607C  6E92               	movwf	146,c	;volatile
  1256                           
  1257                           ;main.c: 79: TRISB = 0b11111111;
  1258  00607E  6893               	setf	147,c	;volatile
  1259                           
  1260                           ;main.c: 80: TRISC = 0b01000100;
  1261  006080  0E44               	movlw	68
  1262  006082  6E94               	movwf	148,c	;volatile
  1263                           
  1264                           ;main.c: 81: TRISD = 0b00000000;
  1265  006084  0E00               	movlw	0
  1266  006086  6E95               	movwf	149,c	;volatile
  1267                           
  1268                           ;main.c: 82: TRISE = 0b00000000;
  1269  006088  0E00               	movlw	0
  1270  00608A  6E96               	movwf	150,c	;volatile
  1271                           
  1272                           ;main.c: 85: PORTA = 0b00000000;
  1273  00608C  0E00               	movlw	0
  1274  00608E  6E80               	movwf	128,c	;volatile
  1275                           
  1276                           ;main.c: 86: PORTB = 0b00000000;
  1277  006090  0E00               	movlw	0
  1278  006092  6E81               	movwf	129,c	;volatile
  1279                           
  1280                           ;main.c: 87: PORTC = 0b00000000;
  1281  006094  0E00               	movlw	0
  1282  006096  6E82               	movwf	130,c	;volatile
  1283                           
  1284                           ;main.c: 88: PORTD = 0b00000000;
  1285  006098  0E00               	movlw	0
  1286  00609A  6E83               	movwf	131,c	;volatile
  1287                           
  1288                           ;main.c: 89: PORTE = 0b00000000;
  1289  00609C  0E00               	movlw	0
  1290  00609E  6E84               	movwf	132,c	;volatile
  1291                           
  1292                           ;main.c: 92: RBPU = 0;
  1293  0060A0  9EF1               	bcf	4081,7,c	;volatile
  1294                           
  1295                           ;main.c: 95: initialise();
  1296  0060A2  ECC6  F02E         	call	_initialise	;wreg free
  1297                           
  1298                           ;main.c: 96: USBDeviceInit();
  1299  0060A6  ECA7  F031         	call	_USBDeviceInit	;wreg free
  1300  0060AA                     l4942:
  1301                           
  1302                           ;main.c: 99: {;main.c: 101: USBDeviceTasks();
  1303  0060AA  EC5E  F039         	call	_USBDeviceTasks	;wreg free
  1304                           
  1305                           ;main.c: 105: if(USBDeviceState == CONFIGURED_STATE)
  1306  0060AE  0E20               	movlw	32
  1307  0060B0  185A               	xorwf	_USBDeviceState^0,w,c
  1308  0060B2  A4D8               	btfss	status,2,c
  1309  0060B4  D003               	goto	l539
  1310                           
  1311                           ;main.c: 106: {;main.c: 108: RC0 = 0;
  1312  0060B6  9082               	bcf	3970,0,c	;volatile
  1313                           
  1314                           ;main.c: 109: RC1 = 1;
  1315  0060B8  8282               	bsf	3970,1,c	;volatile
  1316                           
  1317                           ;main.c: 110: }
  1318  0060BA  D002               	goto	l4948
  1319  0060BC                     l539:
  1320                           
  1321                           ;main.c: 111: else;main.c: 112: {;main.c: 114: RC0 = 1;
  1322  0060BC  8082               	bsf	3970,0,c	;volatile
  1323                           
  1324                           ;main.c: 115: RC1 = 0;
  1325  0060BE  9282               	bcf	3970,1,c	;volatile
  1326  0060C0                     l4948:
  1327                           
  1328                           ;main.c: 116: };main.c: 119: if((USBDeviceState < CONFIGURED_STATE)||(SUSPND==1))
  1329  0060C0  0E1F               	movlw	31
  1330  0060C2  645A               	cpfsgt	_USBDeviceState^0,c
  1331  0060C4  D7F2               	goto	l4942
  1332  0060C6  B26D               	btfsc	3949,1,c	;volatile
  1333  0060C8  D7F0               	goto	l4942
  1334                           
  1335                           ;main.c: 123: else;main.c: 124: {;main.c: 126: readJoystickState();
  1336  0060CA  EC55  F03C         	call	_readJoystickState	;wreg free
  1337                           
  1338                           ;main.c: 141: processJoystick_j1();
  1339  0060CE  ECFF  F036         	call	_processJoystick_j1	;wreg free
  1340                           
  1341                           ;main.c: 142: processJoystick_j2();
  1342  0060D2  EC73  F037         	call	_processJoystick_j2	;wreg free
  1343  0060D6  D7E9               	goto	l4942
  1344  0060D8                     __end_of_main:
  1345                           	callstack 0
  1346                           
  1347 ;; *************** function _readJoystickState *****************
  1348 ;; Defined at:
  1349 ;;		line 67 in file "../joystick.c"
  1350 ;; Parameters:    Size  Location     Type
  1351 ;;		None
  1352 ;; Auto vars:     Size  Location     Type
  1353 ;;  port            1   76[COMRAM] unsigned char 
  1354 ;; Return value:  Size  Location     Type
  1355 ;;                  1    wreg      void 
  1356 ;; Registers used:
  1357 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1358 ;; Tracked objects:
  1359 ;;		On entry : 0/0
  1360 ;;		On exit  : 0/0
  1361 ;;		Unchanged: 0/0
  1362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  1363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  1364 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0
  1365 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0
  1366 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0
  1367 ;;Total ram usage:        3 bytes
  1368 ;; Hardware stack levels used: 1
  1369 ;; Hardware stack levels required when called: 4
  1370 ;; This function calls:
  1371 ;;		_readADC
  1372 ;; This function is called by:
  1373 ;;		_main
  1374 ;; This function uses a non-reentrant model
  1375 ;;
  1376                           
  1377                           	psect	text1
  1378  0078AA                     __ptext1:
  1379                           	callstack 0
  1380  0078AA                     _readJoystickState:
  1381                           	callstack 26
  1382                           
  1383                           ;joystick.c: 69: unsigned char port;;joystick.c: 71: for (port = 0; port < 2; port++)
  1384                           
  1385                           ;incstack = 0
  1386  0078AA  0E00               	movlw	0
  1387  0078AC  6E4D               	movwf	readJoystickState@port^0,c
  1388  0078AE                     l4680:
  1389                           
  1390                           ;joystick.c: 72: {;joystick.c: 79: if (port == 0)
  1391  0078AE  504D               	movf	readJoystickState@port^0,w,c
  1392  0078B0  A4D8               	btfss	status,2,c
  1393  0078B2  D008               	goto	l599
  1394                           
  1395                           ;joystick.c: 80: {;joystick.c: 81: TRISA4 = 0;
  1396  0078B4  9892               	bcf	3986,4,c	;volatile
  1397                           
  1398                           ;joystick.c: 82: TRISA5 = 1;
  1399  0078B6  8A92               	bsf	3986,5,c	;volatile
  1400  0078B8                     
  1401                           ;joystick.c: 83: RA4 = 0;
  1402  0078B8  9880               	bcf	3968,4,c	;volatile
  1403                           
  1404                           ;joystick.c: 84: RA5 = 0;
  1405  0078BA  9A80               	bcf	3968,5,c	;volatile
  1406                           
  1407                           ;joystick.c: 85: _delay((unsigned long)((2)*(48000000/4000000.0)));
  1408  0078BC  0E08               	movlw	8
  1409  0078BE                     u5737:
  1410  0078BE  2EE8               	decfsz	wreg,f,c
  1411  0078C0  D7FE               	bra	u5737
  1412                           
  1413                           ;joystick.c: 87: }
  1414  0078C2  D003               	goto	l4688
  1415  0078C4                     l599:
  1416                           
  1417                           ;joystick.c: 88: else;joystick.c: 89: {;joystick.c: 90: TRISA4 = 1;
  1418  0078C4  8892               	bsf	3986,4,c	;volatile
  1419                           
  1420                           ;joystick.c: 91: TRISA5 = 0;
  1421  0078C6  9A92               	bcf	3986,5,c	;volatile
  1422  0078C8  D7F7               	goto	L1
  1423  0078CA                     l4688:
  1424                           
  1425                           ;joystick.c: 95: };joystick.c: 98: if (RB3 == 0 && joystick[port].joystickSwitch[0].stat
      +                          e == 0)
  1426  0078CA  B681               	btfsc	3969,3,c	;volatile
  1427  0078CC  D02A               	goto	l4698
  1428  0078CE  504D               	movf	readJoystickState@port^0,w,c
  1429  0078D0  0D0F               	mullw	15
  1430  0078D2  0E60               	movlw	low _joystick
  1431  0078D4  24F3               	addwf	243,w,c
  1432  0078D6  6ED9               	movwf	fsr2l,c
  1433  0078D8  0E00               	movlw	high _joystick
  1434  0078DA  20F4               	addwfc	prodh,w,c
  1435  0078DC  6EDA               	movwf	fsr2h,c
  1436  0078DE  50DF               	movf	indf2,w,c
  1437  0078E0  A4D8               	btfss	status,2,c
  1438  0078E2  D01F               	goto	l4698
  1439                           
  1440                           ;joystick.c: 99: if (joystick[port].joystickSwitch[0].debounceCount > 5)
  1441  0078E4  504D               	movf	readJoystickState@port^0,w,c
  1442  0078E6  0D0F               	mullw	15
  1443  0078E8  0E61               	movlw	low (_joystick+1)
  1444  0078EA  24F3               	addwf	243,w,c
  1445  0078EC  6ED9               	movwf	fsr2l,c
  1446  0078EE  0E00               	movlw	high (_joystick+1)
  1447  0078F0  20F4               	addwfc	prodh,w,c
  1448  0078F2  6EDA               	movwf	fsr2h,c
  1449  0078F4  0E05               	movlw	5
  1450  0078F6  64DF               	cpfsgt	indf2,c
  1451  0078F8  D00B               	goto	l4696
  1452                           
  1453                           ;joystick.c: 100: joystick[port].joystickSwitch[0].state = 1;
  1454  0078FA  504D               	movf	readJoystickState@port^0,w,c
  1455  0078FC  0D0F               	mullw	15
  1456  0078FE  0E60               	movlw	low _joystick
  1457  007900  24F3               	addwf	243,w,c
  1458  007902  6ED9               	movwf	fsr2l,c
  1459  007904  0E00               	movlw	high _joystick
  1460  007906  20F4               	addwfc	prodh,w,c
  1461  007908  6EDA               	movwf	fsr2h,c
  1462  00790A  0E01               	movlw	1
  1463  00790C  6EDF               	movwf	indf2,c
  1464  00790E  D009               	goto	l4698
  1465  007910                     l4696:
  1466                           
  1467                           ;joystick.c: 101: else joystick[port].joystickSwitch[0].debounceCount++;
  1468  007910  504D               	movf	readJoystickState@port^0,w,c
  1469  007912  0D0F               	mullw	15
  1470  007914  0E61               	movlw	low (_joystick+1)
  1471  007916  24F3               	addwf	243,w,c
  1472  007918  6ED9               	movwf	fsr2l,c
  1473  00791A  0E00               	movlw	high (_joystick+1)
  1474  00791C  20F4               	addwfc	prodh,w,c
  1475  00791E  6EDA               	movwf	fsr2h,c
  1476  007920  2ADF               	incf	indf2,f,c
  1477  007922                     l4698:
  1478                           
  1479                           ;joystick.c: 103: if (RB3 == 1 && joystick[port].joystickSwitch[0].state == 1)
  1480  007922  A681               	btfss	3969,3,c	;volatile
  1481  007924  D02A               	goto	l604
  1482  007926  504D               	movf	readJoystickState@port^0,w,c
  1483  007928  0D0F               	mullw	15
  1484  00792A  0E60               	movlw	low _joystick
  1485  00792C  24F3               	addwf	243,w,c
  1486  00792E  6ED9               	movwf	fsr2l,c
  1487  007930  0E00               	movlw	high _joystick
  1488  007932  20F4               	addwfc	prodh,w,c
  1489  007934  6EDA               	movwf	fsr2h,c
  1490  007936  04DE               	decf	postinc2,w,c
  1491  007938  A4D8               	btfss	status,2,c
  1492  00793A  D01F               	goto	l604
  1493                           
  1494                           ;joystick.c: 104: if (joystick[port].joystickSwitch[0].debounceCount > 5)
  1495  00793C  504D               	movf	readJoystickState@port^0,w,c
  1496  00793E  0D0F               	mullw	15
  1497  007940  0E61               	movlw	low (_joystick+1)
  1498  007942  24F3               	addwf	243,w,c
  1499  007944  6ED9               	movwf	fsr2l,c
  1500  007946  0E00               	movlw	high (_joystick+1)
  1501  007948  20F4               	addwfc	prodh,w,c
  1502  00794A  6EDA               	movwf	fsr2h,c
  1503  00794C  0E05               	movlw	5
  1504  00794E  64DF               	cpfsgt	indf2,c
  1505  007950  D00B               	goto	l4706
  1506                           
  1507                           ;joystick.c: 105: joystick[port].joystickSwitch[0].state = 0;
  1508  007952  504D               	movf	readJoystickState@port^0,w,c
  1509  007954  0D0F               	mullw	15
  1510  007956  0E60               	movlw	low _joystick
  1511  007958  24F3               	addwf	243,w,c
  1512  00795A  6ED9               	movwf	fsr2l,c
  1513  00795C  0E00               	movlw	high _joystick
  1514  00795E  20F4               	addwfc	prodh,w,c
  1515  007960  6EDA               	movwf	fsr2h,c
  1516  007962  0E00               	movlw	0
  1517  007964  6EDF               	movwf	indf2,c
  1518  007966  D009               	goto	l604
  1519  007968                     l4706:
  1520                           
  1521                           ;joystick.c: 106: else joystick[port].joystickSwitch[0].debounceCount++;
  1522  007968  504D               	movf	readJoystickState@port^0,w,c
  1523  00796A  0D0F               	mullw	15
  1524  00796C  0E61               	movlw	low (_joystick+1)
  1525  00796E  24F3               	addwf	243,w,c
  1526  007970  6ED9               	movwf	fsr2l,c
  1527  007972  0E00               	movlw	high (_joystick+1)
  1528  007974  20F4               	addwfc	prodh,w,c
  1529  007976  6EDA               	movwf	fsr2h,c
  1530  007978  2ADF               	incf	indf2,f,c
  1531  00797A                     l604:
  1532                           
  1533                           ;joystick.c: 108: if (RB3 != joystick[port].joystickSwitch[0].state)
  1534  00797A  504D               	movf	readJoystickState@port^0,w,c
  1535  00797C  0D0F               	mullw	15
  1536  00797E  0E60               	movlw	low _joystick
  1537  007980  24F3               	addwf	243,w,c
  1538  007982  6ED9               	movwf	fsr2l,c
  1539  007984  0E00               	movlw	high _joystick
  1540  007986  20F4               	addwfc	prodh,w,c
  1541  007988  6EDA               	movwf	fsr2h,c
  1542  00798A  A681               	btfss	3969,3,c	;volatile
  1543  00798C  D003               	goto	u4530
  1544  00798E  6A4C               	clrf	(??_readJoystickState+1)^0,c
  1545  007990  2A4C               	incf	(??_readJoystickState+1)^0,f,c
  1546  007992  D001               	goto	u4548
  1547  007994                     u4530:
  1548  007994  6A4C               	clrf	(??_readJoystickState+1)^0,c
  1549  007996                     u4548:
  1550  007996  50DE               	movf	postinc2,w,c
  1551  007998  184C               	xorwf	(??_readJoystickState+1)^0,w,c
  1552  00799A  B4D8               	btfsc	status,2,c
  1553  00799C  D00A               	goto	l4710
  1554                           
  1555                           ;joystick.c: 109: joystick[port].joystickSwitch[0].debounceCount = 0;
  1556  00799E  504D               	movf	readJoystickState@port^0,w,c
  1557  0079A0  0D0F               	mullw	15
  1558  0079A2  0E61               	movlw	low (_joystick+1)
  1559  0079A4  24F3               	addwf	243,w,c
  1560  0079A6  6ED9               	movwf	fsr2l,c
  1561  0079A8  0E00               	movlw	high (_joystick+1)
  1562  0079AA  20F4               	addwfc	prodh,w,c
  1563  0079AC  6EDA               	movwf	fsr2h,c
  1564  0079AE  0E00               	movlw	0
  1565  0079B0  6EDF               	movwf	indf2,c
  1566  0079B2                     l4710:
  1567                           
  1568                           ;joystick.c: 112: if (RB5 == 0 && joystick[port].joystickSwitch[1].state == 0)
  1569  0079B2  BA81               	btfsc	3969,5,c	;volatile
  1570  0079B4  D02A               	goto	l4720
  1571  0079B6  504D               	movf	readJoystickState@port^0,w,c
  1572  0079B8  0D0F               	mullw	15
  1573  0079BA  0E62               	movlw	low (_joystick+2)
  1574  0079BC  24F3               	addwf	243,w,c
  1575  0079BE  6ED9               	movwf	fsr2l,c
  1576  0079C0  0E00               	movlw	high (_joystick+2)
  1577  0079C2  20F4               	addwfc	prodh,w,c
  1578  0079C4  6EDA               	movwf	fsr2h,c
  1579  0079C6  50DF               	movf	indf2,w,c
  1580  0079C8  A4D8               	btfss	status,2,c
  1581  0079CA  D01F               	goto	l4720
  1582                           
  1583                           ;joystick.c: 113: if (joystick[port].joystickSwitch[1].debounceCount > 5)
  1584  0079CC  504D               	movf	readJoystickState@port^0,w,c
  1585  0079CE  0D0F               	mullw	15
  1586  0079D0  0E63               	movlw	low (_joystick+3)
  1587  0079D2  24F3               	addwf	243,w,c
  1588  0079D4  6ED9               	movwf	fsr2l,c
  1589  0079D6  0E00               	movlw	high (_joystick+3)
  1590  0079D8  20F4               	addwfc	prodh,w,c
  1591  0079DA  6EDA               	movwf	fsr2h,c
  1592  0079DC  0E05               	movlw	5
  1593  0079DE  64DF               	cpfsgt	indf2,c
  1594  0079E0  D00B               	goto	l4718
  1595                           
  1596                           ;joystick.c: 114: joystick[port].joystickSwitch[1].state = 1;
  1597  0079E2  504D               	movf	readJoystickState@port^0,w,c
  1598  0079E4  0D0F               	mullw	15
  1599  0079E6  0E62               	movlw	low (_joystick+2)
  1600  0079E8  24F3               	addwf	243,w,c
  1601  0079EA  6ED9               	movwf	fsr2l,c
  1602  0079EC  0E00               	movlw	high (_joystick+2)
  1603  0079EE  20F4               	addwfc	prodh,w,c
  1604  0079F0  6EDA               	movwf	fsr2h,c
  1605  0079F2  0E01               	movlw	1
  1606  0079F4  6EDF               	movwf	indf2,c
  1607  0079F6  D009               	goto	l4720
  1608  0079F8                     l4718:
  1609                           
  1610                           ;joystick.c: 115: else joystick[port].joystickSwitch[1].debounceCount++;
  1611  0079F8  504D               	movf	readJoystickState@port^0,w,c
  1612  0079FA  0D0F               	mullw	15
  1613  0079FC  0E63               	movlw	low (_joystick+3)
  1614  0079FE  24F3               	addwf	243,w,c
  1615  007A00  6ED9               	movwf	fsr2l,c
  1616  007A02  0E00               	movlw	high (_joystick+3)
  1617  007A04  20F4               	addwfc	prodh,w,c
  1618  007A06  6EDA               	movwf	fsr2h,c
  1619  007A08  2ADF               	incf	indf2,f,c
  1620  007A0A                     l4720:
  1621                           
  1622                           ;joystick.c: 117: if (RB5 == 1 && joystick[port].joystickSwitch[1].state == 1)
  1623  007A0A  AA81               	btfss	3969,5,c	;volatile
  1624  007A0C  D02A               	goto	l611
  1625  007A0E  504D               	movf	readJoystickState@port^0,w,c
  1626  007A10  0D0F               	mullw	15
  1627  007A12  0E62               	movlw	low (_joystick+2)
  1628  007A14  24F3               	addwf	243,w,c
  1629  007A16  6ED9               	movwf	fsr2l,c
  1630  007A18  0E00               	movlw	high (_joystick+2)
  1631  007A1A  20F4               	addwfc	prodh,w,c
  1632  007A1C  6EDA               	movwf	fsr2h,c
  1633  007A1E  04DE               	decf	postinc2,w,c
  1634  007A20  A4D8               	btfss	status,2,c
  1635  007A22  D01F               	goto	l611
  1636                           
  1637                           ;joystick.c: 118: if (joystick[port].joystickSwitch[1].debounceCount > 5)
  1638  007A24  504D               	movf	readJoystickState@port^0,w,c
  1639  007A26  0D0F               	mullw	15
  1640  007A28  0E63               	movlw	low (_joystick+3)
  1641  007A2A  24F3               	addwf	243,w,c
  1642  007A2C  6ED9               	movwf	fsr2l,c
  1643  007A2E  0E00               	movlw	high (_joystick+3)
  1644  007A30  20F4               	addwfc	prodh,w,c
  1645  007A32  6EDA               	movwf	fsr2h,c
  1646  007A34  0E05               	movlw	5
  1647  007A36  64DF               	cpfsgt	indf2,c
  1648  007A38  D00B               	goto	l4728
  1649                           
  1650                           ;joystick.c: 119: joystick[port].joystickSwitch[1].state = 0;
  1651  007A3A  504D               	movf	readJoystickState@port^0,w,c
  1652  007A3C  0D0F               	mullw	15
  1653  007A3E  0E62               	movlw	low (_joystick+2)
  1654  007A40  24F3               	addwf	243,w,c
  1655  007A42  6ED9               	movwf	fsr2l,c
  1656  007A44  0E00               	movlw	high (_joystick+2)
  1657  007A46  20F4               	addwfc	prodh,w,c
  1658  007A48  6EDA               	movwf	fsr2h,c
  1659  007A4A  0E00               	movlw	0
  1660  007A4C  6EDF               	movwf	indf2,c
  1661  007A4E  D009               	goto	l611
  1662  007A50                     l4728:
  1663                           
  1664                           ;joystick.c: 120: else joystick[port].joystickSwitch[1].debounceCount++;
  1665  007A50  504D               	movf	readJoystickState@port^0,w,c
  1666  007A52  0D0F               	mullw	15
  1667  007A54  0E63               	movlw	low (_joystick+3)
  1668  007A56  24F3               	addwf	243,w,c
  1669  007A58  6ED9               	movwf	fsr2l,c
  1670  007A5A  0E00               	movlw	high (_joystick+3)
  1671  007A5C  20F4               	addwfc	prodh,w,c
  1672  007A5E  6EDA               	movwf	fsr2h,c
  1673  007A60  2ADF               	incf	indf2,f,c
  1674  007A62                     l611:
  1675                           
  1676                           ;joystick.c: 122: if (RB5 != joystick[port].joystickSwitch[1].state)
  1677  007A62  504D               	movf	readJoystickState@port^0,w,c
  1678  007A64  0D0F               	mullw	15
  1679  007A66  0E62               	movlw	low (_joystick+2)
  1680  007A68  24F3               	addwf	243,w,c
  1681  007A6A  6ED9               	movwf	fsr2l,c
  1682  007A6C  0E00               	movlw	high (_joystick+2)
  1683  007A6E  20F4               	addwfc	prodh,w,c
  1684  007A70  6EDA               	movwf	fsr2h,c
  1685  007A72  AA81               	btfss	3969,5,c	;volatile
  1686  007A74  D003               	goto	u4620
  1687  007A76  6A4C               	clrf	(??_readJoystickState+1)^0,c
  1688  007A78  2A4C               	incf	(??_readJoystickState+1)^0,f,c
  1689  007A7A  D001               	goto	u4638
  1690  007A7C                     u4620:
  1691  007A7C  6A4C               	clrf	(??_readJoystickState+1)^0,c
  1692  007A7E                     u4638:
  1693  007A7E  50DE               	movf	postinc2,w,c
  1694  007A80  184C               	xorwf	(??_readJoystickState+1)^0,w,c
  1695  007A82  B4D8               	btfsc	status,2,c
  1696  007A84  D00A               	goto	l4732
  1697                           
  1698                           ;joystick.c: 123: joystick[port].joystickSwitch[1].debounceCount = 0;
  1699  007A86  504D               	movf	readJoystickState@port^0,w,c
  1700  007A88  0D0F               	mullw	15
  1701  007A8A  0E63               	movlw	low (_joystick+3)
  1702  007A8C  24F3               	addwf	243,w,c
  1703  007A8E  6ED9               	movwf	fsr2l,c
  1704  007A90  0E00               	movlw	high (_joystick+3)
  1705  007A92  20F4               	addwfc	prodh,w,c
  1706  007A94  6EDA               	movwf	fsr2h,c
  1707  007A96  0E00               	movlw	0
  1708  007A98  6EDF               	movwf	indf2,c
  1709  007A9A                     l4732:
  1710                           
  1711                           ;joystick.c: 126: if (RB6 == 0 && joystick[port].joystickSwitch[2].state == 0)
  1712  007A9A  BC81               	btfsc	3969,6,c	;volatile
  1713  007A9C  D02A               	goto	l4742
  1714  007A9E  504D               	movf	readJoystickState@port^0,w,c
  1715  007AA0  0D0F               	mullw	15
  1716  007AA2  0E64               	movlw	low (_joystick+4)
  1717  007AA4  24F3               	addwf	243,w,c
  1718  007AA6  6ED9               	movwf	fsr2l,c
  1719  007AA8  0E00               	movlw	high (_joystick+4)
  1720  007AAA  20F4               	addwfc	prodh,w,c
  1721  007AAC  6EDA               	movwf	fsr2h,c
  1722  007AAE  50DF               	movf	indf2,w,c
  1723  007AB0  A4D8               	btfss	status,2,c
  1724  007AB2  D01F               	goto	l4742
  1725                           
  1726                           ;joystick.c: 127: if (joystick[port].joystickSwitch[2].debounceCount > 5)
  1727  007AB4  504D               	movf	readJoystickState@port^0,w,c
  1728  007AB6  0D0F               	mullw	15
  1729  007AB8  0E65               	movlw	low (_joystick+5)
  1730  007ABA  24F3               	addwf	243,w,c
  1731  007ABC  6ED9               	movwf	fsr2l,c
  1732  007ABE  0E00               	movlw	high (_joystick+5)
  1733  007AC0  20F4               	addwfc	prodh,w,c
  1734  007AC2  6EDA               	movwf	fsr2h,c
  1735  007AC4  0E05               	movlw	5
  1736  007AC6  64DF               	cpfsgt	indf2,c
  1737  007AC8  D00B               	goto	l4740
  1738                           
  1739                           ;joystick.c: 128: joystick[port].joystickSwitch[2].state = 1;
  1740  007ACA  504D               	movf	readJoystickState@port^0,w,c
  1741  007ACC  0D0F               	mullw	15
  1742  007ACE  0E64               	movlw	low (_joystick+4)
  1743  007AD0  24F3               	addwf	243,w,c
  1744  007AD2  6ED9               	movwf	fsr2l,c
  1745  007AD4  0E00               	movlw	high (_joystick+4)
  1746  007AD6  20F4               	addwfc	prodh,w,c
  1747  007AD8  6EDA               	movwf	fsr2h,c
  1748  007ADA  0E01               	movlw	1
  1749  007ADC  6EDF               	movwf	indf2,c
  1750  007ADE  D009               	goto	l4742
  1751  007AE0                     l4740:
  1752                           
  1753                           ;joystick.c: 129: else joystick[port].joystickSwitch[2].debounceCount++;
  1754  007AE0  504D               	movf	readJoystickState@port^0,w,c
  1755  007AE2  0D0F               	mullw	15
  1756  007AE4  0E65               	movlw	low (_joystick+5)
  1757  007AE6  24F3               	addwf	243,w,c
  1758  007AE8  6ED9               	movwf	fsr2l,c
  1759  007AEA  0E00               	movlw	high (_joystick+5)
  1760  007AEC  20F4               	addwfc	prodh,w,c
  1761  007AEE  6EDA               	movwf	fsr2h,c
  1762  007AF0  2ADF               	incf	indf2,f,c
  1763  007AF2                     l4742:
  1764                           
  1765                           ;joystick.c: 131: if (RB6 == 1 && joystick[port].joystickSwitch[2].state == 1)
  1766  007AF2  AC81               	btfss	3969,6,c	;volatile
  1767  007AF4  D02A               	goto	l618
  1768  007AF6  504D               	movf	readJoystickState@port^0,w,c
  1769  007AF8  0D0F               	mullw	15
  1770  007AFA  0E64               	movlw	low (_joystick+4)
  1771  007AFC  24F3               	addwf	243,w,c
  1772  007AFE  6ED9               	movwf	fsr2l,c
  1773  007B00  0E00               	movlw	high (_joystick+4)
  1774  007B02  20F4               	addwfc	prodh,w,c
  1775  007B04  6EDA               	movwf	fsr2h,c
  1776  007B06  04DE               	decf	postinc2,w,c
  1777  007B08  A4D8               	btfss	status,2,c
  1778  007B0A  D01F               	goto	l618
  1779                           
  1780                           ;joystick.c: 132: if (joystick[port].joystickSwitch[2].debounceCount > 5)
  1781  007B0C  504D               	movf	readJoystickState@port^0,w,c
  1782  007B0E  0D0F               	mullw	15
  1783  007B10  0E65               	movlw	low (_joystick+5)
  1784  007B12  24F3               	addwf	243,w,c
  1785  007B14  6ED9               	movwf	fsr2l,c
  1786  007B16  0E00               	movlw	high (_joystick+5)
  1787  007B18  20F4               	addwfc	prodh,w,c
  1788  007B1A  6EDA               	movwf	fsr2h,c
  1789  007B1C  0E05               	movlw	5
  1790  007B1E  64DF               	cpfsgt	indf2,c
  1791  007B20  D00B               	goto	l4750
  1792                           
  1793                           ;joystick.c: 133: joystick[port].joystickSwitch[2].state = 0;
  1794  007B22  504D               	movf	readJoystickState@port^0,w,c
  1795  007B24  0D0F               	mullw	15
  1796  007B26  0E64               	movlw	low (_joystick+4)
  1797  007B28  24F3               	addwf	243,w,c
  1798  007B2A  6ED9               	movwf	fsr2l,c
  1799  007B2C  0E00               	movlw	high (_joystick+4)
  1800  007B2E  20F4               	addwfc	prodh,w,c
  1801  007B30  6EDA               	movwf	fsr2h,c
  1802  007B32  0E00               	movlw	0
  1803  007B34  6EDF               	movwf	indf2,c
  1804  007B36  D009               	goto	l618
  1805  007B38                     l4750:
  1806                           
  1807                           ;joystick.c: 134: else joystick[port].joystickSwitch[2].debounceCount++;
  1808  007B38  504D               	movf	readJoystickState@port^0,w,c
  1809  007B3A  0D0F               	mullw	15
  1810  007B3C  0E65               	movlw	low (_joystick+5)
  1811  007B3E  24F3               	addwf	243,w,c
  1812  007B40  6ED9               	movwf	fsr2l,c
  1813  007B42  0E00               	movlw	high (_joystick+5)
  1814  007B44  20F4               	addwfc	prodh,w,c
  1815  007B46  6EDA               	movwf	fsr2h,c
  1816  007B48  2ADF               	incf	indf2,f,c
  1817  007B4A                     l618:
  1818                           
  1819                           ;joystick.c: 136: if (RB6 != joystick[port].joystickSwitch[2].state)
  1820  007B4A  504D               	movf	readJoystickState@port^0,w,c
  1821  007B4C  0D0F               	mullw	15
  1822  007B4E  0E64               	movlw	low (_joystick+4)
  1823  007B50  24F3               	addwf	243,w,c
  1824  007B52  6ED9               	movwf	fsr2l,c
  1825  007B54  0E00               	movlw	high (_joystick+4)
  1826  007B56  20F4               	addwfc	prodh,w,c
  1827  007B58  6EDA               	movwf	fsr2h,c
  1828  007B5A  AC81               	btfss	3969,6,c	;volatile
  1829  007B5C  D003               	goto	u4710
  1830  007B5E  6A4C               	clrf	(??_readJoystickState+1)^0,c
  1831  007B60  2A4C               	incf	(??_readJoystickState+1)^0,f,c
  1832  007B62  D001               	goto	u4728
  1833  007B64                     u4710:
  1834  007B64  6A4C               	clrf	(??_readJoystickState+1)^0,c
  1835  007B66                     u4728:
  1836  007B66  50DE               	movf	postinc2,w,c
  1837  007B68  184C               	xorwf	(??_readJoystickState+1)^0,w,c
  1838  007B6A  B4D8               	btfsc	status,2,c
  1839  007B6C  D00A               	goto	l4754
  1840                           
  1841                           ;joystick.c: 137: joystick[port].joystickSwitch[2].debounceCount = 0;
  1842  007B6E  504D               	movf	readJoystickState@port^0,w,c
  1843  007B70  0D0F               	mullw	15
  1844  007B72  0E65               	movlw	low (_joystick+5)
  1845  007B74  24F3               	addwf	243,w,c
  1846  007B76  6ED9               	movwf	fsr2l,c
  1847  007B78  0E00               	movlw	high (_joystick+5)
  1848  007B7A  20F4               	addwfc	prodh,w,c
  1849  007B7C  6EDA               	movwf	fsr2h,c
  1850  007B7E  0E00               	movlw	0
  1851  007B80  6EDF               	movwf	indf2,c
  1852  007B82                     l4754:
  1853                           
  1854                           ;joystick.c: 140: if (RB7 == 0 && joystick[port].joystickSwitch[3].state == 0)
  1855  007B82  BE81               	btfsc	3969,7,c	;volatile
  1856  007B84  D02A               	goto	l4764
  1857  007B86  504D               	movf	readJoystickState@port^0,w,c
  1858  007B88  0D0F               	mullw	15
  1859  007B8A  0E66               	movlw	low (_joystick+6)
  1860  007B8C  24F3               	addwf	243,w,c
  1861  007B8E  6ED9               	movwf	fsr2l,c
  1862  007B90  0E00               	movlw	high (_joystick+6)
  1863  007B92  20F4               	addwfc	prodh,w,c
  1864  007B94  6EDA               	movwf	fsr2h,c
  1865  007B96  50DF               	movf	indf2,w,c
  1866  007B98  A4D8               	btfss	status,2,c
  1867  007B9A  D01F               	goto	l4764
  1868                           
  1869                           ;joystick.c: 141: if (joystick[port].joystickSwitch[3].debounceCount > 5)
  1870  007B9C  504D               	movf	readJoystickState@port^0,w,c
  1871  007B9E  0D0F               	mullw	15
  1872  007BA0  0E67               	movlw	low (_joystick+7)
  1873  007BA2  24F3               	addwf	243,w,c
  1874  007BA4  6ED9               	movwf	fsr2l,c
  1875  007BA6  0E00               	movlw	high (_joystick+7)
  1876  007BA8  20F4               	addwfc	prodh,w,c
  1877  007BAA  6EDA               	movwf	fsr2h,c
  1878  007BAC  0E05               	movlw	5
  1879  007BAE  64DF               	cpfsgt	indf2,c
  1880  007BB0  D00B               	goto	l4762
  1881                           
  1882                           ;joystick.c: 142: joystick[port].joystickSwitch[3].state = 1;
  1883  007BB2  504D               	movf	readJoystickState@port^0,w,c
  1884  007BB4  0D0F               	mullw	15
  1885  007BB6  0E66               	movlw	low (_joystick+6)
  1886  007BB8  24F3               	addwf	243,w,c
  1887  007BBA  6ED9               	movwf	fsr2l,c
  1888  007BBC  0E00               	movlw	high (_joystick+6)
  1889  007BBE  20F4               	addwfc	prodh,w,c
  1890  007BC0  6EDA               	movwf	fsr2h,c
  1891  007BC2  0E01               	movlw	1
  1892  007BC4  6EDF               	movwf	indf2,c
  1893  007BC6  D009               	goto	l4764
  1894  007BC8                     l4762:
  1895                           
  1896                           ;joystick.c: 143: else joystick[port].joystickSwitch[3].debounceCount++;
  1897  007BC8  504D               	movf	readJoystickState@port^0,w,c
  1898  007BCA  0D0F               	mullw	15
  1899  007BCC  0E67               	movlw	low (_joystick+7)
  1900  007BCE  24F3               	addwf	243,w,c
  1901  007BD0  6ED9               	movwf	fsr2l,c
  1902  007BD2  0E00               	movlw	high (_joystick+7)
  1903  007BD4  20F4               	addwfc	prodh,w,c
  1904  007BD6  6EDA               	movwf	fsr2h,c
  1905  007BD8  2ADF               	incf	indf2,f,c
  1906  007BDA                     l4764:
  1907                           
  1908                           ;joystick.c: 145: if (RB7 == 1 && joystick[port].joystickSwitch[3].state == 1)
  1909  007BDA  AE81               	btfss	3969,7,c	;volatile
  1910  007BDC  D02A               	goto	l625
  1911  007BDE  504D               	movf	readJoystickState@port^0,w,c
  1912  007BE0  0D0F               	mullw	15
  1913  007BE2  0E66               	movlw	low (_joystick+6)
  1914  007BE4  24F3               	addwf	243,w,c
  1915  007BE6  6ED9               	movwf	fsr2l,c
  1916  007BE8  0E00               	movlw	high (_joystick+6)
  1917  007BEA  20F4               	addwfc	prodh,w,c
  1918  007BEC  6EDA               	movwf	fsr2h,c
  1919  007BEE  04DE               	decf	postinc2,w,c
  1920  007BF0  A4D8               	btfss	status,2,c
  1921  007BF2  D01F               	goto	l625
  1922                           
  1923                           ;joystick.c: 146: if (joystick[port].joystickSwitch[3].debounceCount > 5)
  1924  007BF4  504D               	movf	readJoystickState@port^0,w,c
  1925  007BF6  0D0F               	mullw	15
  1926  007BF8  0E67               	movlw	low (_joystick+7)
  1927  007BFA  24F3               	addwf	243,w,c
  1928  007BFC  6ED9               	movwf	fsr2l,c
  1929  007BFE  0E00               	movlw	high (_joystick+7)
  1930  007C00  20F4               	addwfc	prodh,w,c
  1931  007C02  6EDA               	movwf	fsr2h,c
  1932  007C04  0E05               	movlw	5
  1933  007C06  64DF               	cpfsgt	indf2,c
  1934  007C08  D00B               	goto	l4772
  1935                           
  1936                           ;joystick.c: 147: joystick[port].joystickSwitch[3].state = 0;
  1937  007C0A  504D               	movf	readJoystickState@port^0,w,c
  1938  007C0C  0D0F               	mullw	15
  1939  007C0E  0E66               	movlw	low (_joystick+6)
  1940  007C10  24F3               	addwf	243,w,c
  1941  007C12  6ED9               	movwf	fsr2l,c
  1942  007C14  0E00               	movlw	high (_joystick+6)
  1943  007C16  20F4               	addwfc	prodh,w,c
  1944  007C18  6EDA               	movwf	fsr2h,c
  1945  007C1A  0E00               	movlw	0
  1946  007C1C  6EDF               	movwf	indf2,c
  1947  007C1E  D009               	goto	l625
  1948  007C20                     l4772:
  1949                           
  1950                           ;joystick.c: 148: else joystick[port].joystickSwitch[3].debounceCount++;
  1951  007C20  504D               	movf	readJoystickState@port^0,w,c
  1952  007C22  0D0F               	mullw	15
  1953  007C24  0E67               	movlw	low (_joystick+7)
  1954  007C26  24F3               	addwf	243,w,c
  1955  007C28  6ED9               	movwf	fsr2l,c
  1956  007C2A  0E00               	movlw	high (_joystick+7)
  1957  007C2C  20F4               	addwfc	prodh,w,c
  1958  007C2E  6EDA               	movwf	fsr2h,c
  1959  007C30  2ADF               	incf	indf2,f,c
  1960  007C32                     l625:
  1961                           
  1962                           ;joystick.c: 150: if (RB7 != joystick[port].joystickSwitch[3].state)
  1963  007C32  504D               	movf	readJoystickState@port^0,w,c
  1964  007C34  0D0F               	mullw	15
  1965  007C36  0E66               	movlw	low (_joystick+6)
  1966  007C38  24F3               	addwf	243,w,c
  1967  007C3A  6ED9               	movwf	fsr2l,c
  1968  007C3C  0E00               	movlw	high (_joystick+6)
  1969  007C3E  20F4               	addwfc	prodh,w,c
  1970  007C40  6EDA               	movwf	fsr2h,c
  1971  007C42  AE81               	btfss	3969,7,c	;volatile
  1972  007C44  D003               	goto	u4800
  1973  007C46  6A4C               	clrf	(??_readJoystickState+1)^0,c
  1974  007C48  2A4C               	incf	(??_readJoystickState+1)^0,f,c
  1975  007C4A  D001               	goto	u4818
  1976  007C4C                     u4800:
  1977  007C4C  6A4C               	clrf	(??_readJoystickState+1)^0,c
  1978  007C4E                     u4818:
  1979  007C4E  50DE               	movf	postinc2,w,c
  1980  007C50  184C               	xorwf	(??_readJoystickState+1)^0,w,c
  1981  007C52  B4D8               	btfsc	status,2,c
  1982  007C54  D00A               	goto	l4776
  1983                           
  1984                           ;joystick.c: 151: joystick[port].joystickSwitch[3].debounceCount = 0;
  1985  007C56  504D               	movf	readJoystickState@port^0,w,c
  1986  007C58  0D0F               	mullw	15
  1987  007C5A  0E67               	movlw	low (_joystick+7)
  1988  007C5C  24F3               	addwf	243,w,c
  1989  007C5E  6ED9               	movwf	fsr2l,c
  1990  007C60  0E00               	movlw	high (_joystick+7)
  1991  007C62  20F4               	addwfc	prodh,w,c
  1992  007C64  6EDA               	movwf	fsr2h,c
  1993  007C66  0E00               	movlw	0
  1994  007C68  6EDF               	movwf	indf2,c
  1995  007C6A                     l4776:
  1996                           
  1997                           ;joystick.c: 154: if (RB4 == 0 && joystick[port].joystickSwitch[4].state == 0)
  1998  007C6A  B881               	btfsc	3969,4,c	;volatile
  1999  007C6C  D02A               	goto	l4786
  2000  007C6E  504D               	movf	readJoystickState@port^0,w,c
  2001  007C70  0D0F               	mullw	15
  2002  007C72  0E68               	movlw	low (_joystick+8)
  2003  007C74  24F3               	addwf	243,w,c
  2004  007C76  6ED9               	movwf	fsr2l,c
  2005  007C78  0E00               	movlw	high (_joystick+8)
  2006  007C7A  20F4               	addwfc	prodh,w,c
  2007  007C7C  6EDA               	movwf	fsr2h,c
  2008  007C7E  50DF               	movf	indf2,w,c
  2009  007C80  A4D8               	btfss	status,2,c
  2010  007C82  D01F               	goto	l4786
  2011                           
  2012                           ;joystick.c: 155: if (joystick[port].joystickSwitch[4].debounceCount > 5)
  2013  007C84  504D               	movf	readJoystickState@port^0,w,c
  2014  007C86  0D0F               	mullw	15
  2015  007C88  0E69               	movlw	low (_joystick+9)
  2016  007C8A  24F3               	addwf	243,w,c
  2017  007C8C  6ED9               	movwf	fsr2l,c
  2018  007C8E  0E00               	movlw	high (_joystick+9)
  2019  007C90  20F4               	addwfc	prodh,w,c
  2020  007C92  6EDA               	movwf	fsr2h,c
  2021  007C94  0E05               	movlw	5
  2022  007C96  64DF               	cpfsgt	indf2,c
  2023  007C98  D00B               	goto	l4784
  2024                           
  2025                           ;joystick.c: 156: joystick[port].joystickSwitch[4].state = 1;
  2026  007C9A  504D               	movf	readJoystickState@port^0,w,c
  2027  007C9C  0D0F               	mullw	15
  2028  007C9E  0E68               	movlw	low (_joystick+8)
  2029  007CA0  24F3               	addwf	243,w,c
  2030  007CA2  6ED9               	movwf	fsr2l,c
  2031  007CA4  0E00               	movlw	high (_joystick+8)
  2032  007CA6  20F4               	addwfc	prodh,w,c
  2033  007CA8  6EDA               	movwf	fsr2h,c
  2034  007CAA  0E01               	movlw	1
  2035  007CAC  6EDF               	movwf	indf2,c
  2036  007CAE  D009               	goto	l4786
  2037  007CB0                     l4784:
  2038                           
  2039                           ;joystick.c: 157: else joystick[port].joystickSwitch[4].debounceCount++;
  2040  007CB0  504D               	movf	readJoystickState@port^0,w,c
  2041  007CB2  0D0F               	mullw	15
  2042  007CB4  0E69               	movlw	low (_joystick+9)
  2043  007CB6  24F3               	addwf	243,w,c
  2044  007CB8  6ED9               	movwf	fsr2l,c
  2045  007CBA  0E00               	movlw	high (_joystick+9)
  2046  007CBC  20F4               	addwfc	prodh,w,c
  2047  007CBE  6EDA               	movwf	fsr2h,c
  2048  007CC0  2ADF               	incf	indf2,f,c
  2049  007CC2                     l4786:
  2050                           
  2051                           ;joystick.c: 159: if (RB4 == 1 && joystick[port].joystickSwitch[4].state == 1)
  2052  007CC2  A881               	btfss	3969,4,c	;volatile
  2053  007CC4  D02A               	goto	l632
  2054  007CC6  504D               	movf	readJoystickState@port^0,w,c
  2055  007CC8  0D0F               	mullw	15
  2056  007CCA  0E68               	movlw	low (_joystick+8)
  2057  007CCC  24F3               	addwf	243,w,c
  2058  007CCE  6ED9               	movwf	fsr2l,c
  2059  007CD0  0E00               	movlw	high (_joystick+8)
  2060  007CD2  20F4               	addwfc	prodh,w,c
  2061  007CD4  6EDA               	movwf	fsr2h,c
  2062  007CD6  04DE               	decf	postinc2,w,c
  2063  007CD8  A4D8               	btfss	status,2,c
  2064  007CDA  D01F               	goto	l632
  2065                           
  2066                           ;joystick.c: 160: if (joystick[port].joystickSwitch[4].debounceCount > 5)
  2067  007CDC  504D               	movf	readJoystickState@port^0,w,c
  2068  007CDE  0D0F               	mullw	15
  2069  007CE0  0E69               	movlw	low (_joystick+9)
  2070  007CE2  24F3               	addwf	243,w,c
  2071  007CE4  6ED9               	movwf	fsr2l,c
  2072  007CE6  0E00               	movlw	high (_joystick+9)
  2073  007CE8  20F4               	addwfc	prodh,w,c
  2074  007CEA  6EDA               	movwf	fsr2h,c
  2075  007CEC  0E05               	movlw	5
  2076  007CEE  64DF               	cpfsgt	indf2,c
  2077  007CF0  D00B               	goto	l4794
  2078                           
  2079                           ;joystick.c: 161: joystick[port].joystickSwitch[4].state = 0;
  2080  007CF2  504D               	movf	readJoystickState@port^0,w,c
  2081  007CF4  0D0F               	mullw	15
  2082  007CF6  0E68               	movlw	low (_joystick+8)
  2083  007CF8  24F3               	addwf	243,w,c
  2084  007CFA  6ED9               	movwf	fsr2l,c
  2085  007CFC  0E00               	movlw	high (_joystick+8)
  2086  007CFE  20F4               	addwfc	prodh,w,c
  2087  007D00  6EDA               	movwf	fsr2h,c
  2088  007D02  0E00               	movlw	0
  2089  007D04  6EDF               	movwf	indf2,c
  2090  007D06  D009               	goto	l632
  2091  007D08                     l4794:
  2092                           
  2093                           ;joystick.c: 162: else joystick[port].joystickSwitch[4].debounceCount++;
  2094  007D08  504D               	movf	readJoystickState@port^0,w,c
  2095  007D0A  0D0F               	mullw	15
  2096  007D0C  0E69               	movlw	low (_joystick+9)
  2097  007D0E  24F3               	addwf	243,w,c
  2098  007D10  6ED9               	movwf	fsr2l,c
  2099  007D12  0E00               	movlw	high (_joystick+9)
  2100  007D14  20F4               	addwfc	prodh,w,c
  2101  007D16  6EDA               	movwf	fsr2h,c
  2102  007D18  2ADF               	incf	indf2,f,c
  2103  007D1A                     l632:
  2104                           
  2105                           ;joystick.c: 164: if (RB4 != joystick[port].joystickSwitch[4].state)
  2106  007D1A  504D               	movf	readJoystickState@port^0,w,c
  2107  007D1C  0D0F               	mullw	15
  2108  007D1E  0E68               	movlw	low (_joystick+8)
  2109  007D20  24F3               	addwf	243,w,c
  2110  007D22  6ED9               	movwf	fsr2l,c
  2111  007D24  0E00               	movlw	high (_joystick+8)
  2112  007D26  20F4               	addwfc	prodh,w,c
  2113  007D28  6EDA               	movwf	fsr2h,c
  2114  007D2A  A881               	btfss	3969,4,c	;volatile
  2115  007D2C  D003               	goto	u4890
  2116  007D2E  6A4C               	clrf	(??_readJoystickState+1)^0,c
  2117  007D30  2A4C               	incf	(??_readJoystickState+1)^0,f,c
  2118  007D32  D001               	goto	u4908
  2119  007D34                     u4890:
  2120  007D34  6A4C               	clrf	(??_readJoystickState+1)^0,c
  2121  007D36                     u4908:
  2122  007D36  50DE               	movf	postinc2,w,c
  2123  007D38  184C               	xorwf	(??_readJoystickState+1)^0,w,c
  2124  007D3A  B4D8               	btfsc	status,2,c
  2125  007D3C  D00A               	goto	l4798
  2126                           
  2127                           ;joystick.c: 165: joystick[port].joystickSwitch[4].debounceCount = 0;
  2128  007D3E  504D               	movf	readJoystickState@port^0,w,c
  2129  007D40  0D0F               	mullw	15
  2130  007D42  0E69               	movlw	low (_joystick+9)
  2131  007D44  24F3               	addwf	243,w,c
  2132  007D46  6ED9               	movwf	fsr2l,c
  2133  007D48  0E00               	movlw	high (_joystick+9)
  2134  007D4A  20F4               	addwfc	prodh,w,c
  2135  007D4C  6EDA               	movwf	fsr2h,c
  2136  007D4E  0E00               	movlw	0
  2137  007D50  6EDF               	movwf	indf2,c
  2138  007D52                     l4798:
  2139  007D52  2A4D               	incf	readJoystickState@port^0,f,c
  2140  007D54  0E01               	movlw	1
  2141  007D56  644D               	cpfsgt	readJoystickState@port^0,c
  2142  007D58  D5AA               	goto	l4680
  2143                           
  2144                           ;joystick.c: 166: };joystick.c: 169: TRISA4 = 1;
  2145  007D5A  8892               	bsf	3986,4,c	;volatile
  2146                           
  2147                           ;joystick.c: 170: TRISA5 = 1;
  2148  007D5C  8A92               	bsf	3986,5,c	;volatile
  2149                           
  2150                           ;joystick.c: 173: joystick[0].paddleX = readADC(0);
  2151  007D5E  0E00               	movlw	0
  2152  007D60  ECF4  F039         	call	_readADC
  2153  007D64  C03D  F06B         	movff	?_readADC,_joystick+11
  2154  007D68  C03E  F06C         	movff	?_readADC+1,_joystick+12
  2155                           
  2156                           ;joystick.c: 174: joystick[0].paddleY = readADC(1);
  2157  007D6C  0E01               	movlw	1
  2158  007D6E  ECF4  F039         	call	_readADC
  2159  007D72  C03D  F06D         	movff	?_readADC,_joystick+13
  2160  007D76  C03E  F06E         	movff	?_readADC+1,_joystick+14
  2161                           
  2162                           ;joystick.c: 175: if (joystick[0].paddleX == -1) joystick[0].paddleConnected = FALSE;
  2163  007D7A  0100               	movlb	0	; () banked
  2164  007D7C  296B               	incf	(_joystick+11)& (0+255),w,b
  2165  007D7E  E105               	bnz	l4808
  2166  007D80  296C               	incf	(_joystick+12)& (0+255),w,b
  2167  007D82  A4D8               	btfss	status,2,c
  2168  007D84  D002               	goto	l4808
  2169                           
  2170                           ; BSR set to: 0
  2171  007D86  0E00               	movlw	0
  2172  007D88  D001               	goto	L2
  2173  007D8A                     l4808:
  2174                           
  2175                           ; BSR set to: 0
  2176                           ;joystick.c: 176: else joystick[0].paddleConnected = TRUE;
  2177  007D8A  0E01               	movlw	1
  2178  007D8C                     L2:
  2179  007D8C  6F6A               	movwf	(_joystick+10)& (0+255),b
  2180                           
  2181                           ; BSR set to: 0
  2182                           ;joystick.c: 178: joystick[1].paddleX = readADC(3);
  2183  007D8E  0E03               	movlw	3
  2184  007D90  ECF4  F039         	call	_readADC
  2185  007D94  C03D  F07A         	movff	?_readADC,_joystick+26
  2186  007D98  C03E  F07B         	movff	?_readADC+1,_joystick+27
  2187                           
  2188                           ;joystick.c: 179: joystick[1].paddleY = readADC(4);
  2189  007D9C  0E04               	movlw	4
  2190  007D9E  ECF4  F039         	call	_readADC
  2191  007DA2  C03D  F07C         	movff	?_readADC,_joystick+28
  2192  007DA6  C03E  F07D         	movff	?_readADC+1,_joystick+29
  2193                           
  2194                           ;joystick.c: 180: if (joystick[1].paddleX == -1) joystick[1].paddleConnected = FALSE;
  2195  007DAA  0100               	movlb	0	; () banked
  2196  007DAC  297A               	incf	(_joystick+26)& (0+255),w,b
  2197  007DAE  E106               	bnz	l4818
  2198  007DB0  297B               	incf	(_joystick+27)& (0+255),w,b
  2199  007DB2  A4D8               	btfss	status,2,c
  2200  007DB4  D003               	goto	l4818
  2201                           
  2202                           ; BSR set to: 0
  2203  007DB6  0E00               	movlw	0
  2204  007DB8  6F79               	movwf	(_joystick+25)& (0+255),b
  2205  007DBA  0012               	return	
  2206  007DBC                     l4818:
  2207                           
  2208                           ; BSR set to: 0
  2209                           ;joystick.c: 181: else joystick[1].paddleConnected = TRUE;
  2210  007DBC  0E01               	movlw	1
  2211  007DBE  6F79               	movwf	(_joystick+25)& (0+255),b
  2212                           
  2213                           ; BSR set to: 0
  2214  007DC0  0012               	return		;funcret
  2215  007DC2                     __end_of_readJoystickState:
  2216                           	callstack 0
  2217                           
  2218 ;; *************** function _readADC *****************
  2219 ;; Defined at:
  2220 ;;		line 315 in file "../joystick.c"
  2221 ;; Parameters:    Size  Location     Type
  2222 ;;  ADCnumber       1    wreg     unsigned char 
  2223 ;; Auto vars:     Size  Location     Type
  2224 ;;  ADCnumber       1   68[COMRAM] unsigned char 
  2225 ;;  calc            3   71[COMRAM] float 
  2226 ;;  adcResult       2   69[COMRAM] int 
  2227 ;; Return value:  Size  Location     Type
  2228 ;;                  2   60[COMRAM] int 
  2229 ;; Registers used:
  2230 ;;		wreg, status,2, status,0, cstack
  2231 ;; Tracked objects:
  2232 ;;		On entry : 0/0
  2233 ;;		On exit  : 0/0
  2234 ;;		Unchanged: 0/0
  2235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  2236 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0
  2237 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0
  2238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  2239 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0
  2240 ;;Total ram usage:       14 bytes
  2241 ;; Hardware stack levels used: 1
  2242 ;; Hardware stack levels required when called: 3
  2243 ;; This function calls:
  2244 ;;		___awtoft
  2245 ;;		___ftadd
  2246 ;;		___ftdiv
  2247 ;;		___ftge
  2248 ;;		___ftmul
  2249 ;;		___ftsub
  2250 ;;		___fttol
  2251 ;; This function is called by:
  2252 ;;		_readJoystickState
  2253 ;; This function uses a non-reentrant model
  2254 ;;
  2255                           
  2256                           	psect	text2
  2257  0073E8                     __ptext2:
  2258                           	callstack 0
  2259  0073E8                     _readADC:
  2260                           	callstack 26
  2261                           
  2262                           ; BSR set to: 0
  2263                           ;incstack = 0
  2264                           ;readADC@ADCnumber stored from wreg
  2265  0073E8  6E45               	movwf	readADC@ADCnumber^0,c
  2266                           
  2267                           ;joystick.c: 317: int adcResult;;joystick.c: 318: float calc;;joystick.c: 321: switch(AD
      +                          Cnumber)
  2268  0073EA  D009               	goto	l4548
  2269  0073EC                     l4538:
  2270  0073EC  0E03               	movlw	3
  2271  0073EE  D005               	goto	L5
  2272  0073F0                     l4540:
  2273  0073F0  0E07               	movlw	7
  2274  0073F2  D003               	goto	L5
  2275  0073F4                     l4542:
  2276  0073F4  0E0B               	movlw	11
  2277  0073F6  D001               	goto	L5
  2278  0073F8                     l4544:
  2279  0073F8  0E0F               	movlw	15
  2280  0073FA                     L5:
  2281  0073FA  6EC2               	movwf	194,c	;volatile
  2282                           
  2283                           ;joystick.c: 330: break;
  2284  0073FC  D00D               	goto	l681
  2285  0073FE                     l4548:
  2286  0073FE  5045               	movf	readADC@ADCnumber^0,w,c
  2287                           
  2288                           ; Switch size 1, requested type "simple"
  2289                           ; Number of cases is 4, Range of values is 0 to 4
  2290                           ; switch strategies available:
  2291                           ; Name         Instructions Cycles
  2292                           ; simple_byte           13     7 (average)
  2293                           ;	Chosen strategy is simple_byte
  2294  007400  0A00               	xorlw	0	; case 0
  2295  007402  B4D8               	btfsc	status,2,c
  2296  007404  D7F5               	goto	l4540
  2297  007406  0A01               	xorlw	1	; case 1
  2298  007408  B4D8               	btfsc	status,2,c
  2299  00740A  D7F0               	goto	l4538
  2300  00740C  0A02               	xorlw	2	; case 3
  2301  00740E  B4D8               	btfsc	status,2,c
  2302  007410  D7F1               	goto	l4542
  2303  007412  0A07               	xorlw	7	; case 4
  2304  007414  B4D8               	btfsc	status,2,c
  2305  007416  D7F0               	goto	l4544
  2306  007418                     l681:
  2307  007418  B2C2               	btfsc	4034,1,c	;volatile
  2308  00741A  D7FE               	goto	l681
  2309                           
  2310                           ;joystick.c: 337: adcResult = ADRESL;
  2311  00741C  CFC3 F046          	movff	4035,readADC@adcResult	;volatile
  2312  007420  6A47               	clrf	(readADC@adcResult+1)^0,c
  2313                           
  2314                           ;joystick.c: 338: adcResult += (ADRESH << 8);
  2315  007422  50C4               	movf	196,w,c	;volatile
  2316  007424  2647               	addwf	(readADC@adcResult+1)^0,f,c
  2317                           
  2318                           ;joystick.c: 340: if (adcResult != 0)
  2319  007426  5046               	movf	readADC@adcResult^0,w,c
  2320  007428  1047               	iorwf	(readADC@adcResult+1)^0,w,c
  2321  00742A  B4D8               	btfsc	status,2,c
  2322  00742C  D095               	goto	l684
  2323                           
  2324                           ;joystick.c: 341: {;joystick.c: 357: calc = (((1.023 / ((float)adcResult/1000.0)) * 100.
      +                          0) - 100.0) * 0.60;
  2325  00742E  0E00               	movlw	0
  2326  007430  6E10               	movwf	___ftdiv@f2^0,c
  2327  007432  0E7A               	movlw	122
  2328  007434  6E11               	movwf	(___ftdiv@f2+1)^0,c
  2329  007436  0E44               	movlw	68
  2330  007438  6E12               	movwf	(___ftdiv@f2+2)^0,c
  2331  00743A  C046  F009         	movff	readADC@adcResult,___awtoft@c
  2332  00743E  C047  F00A         	movff	readADC@adcResult+1,___awtoft@c+1
  2333  007442  EC6C  F02F         	call	___awtoft	;wreg free
  2334  007446  C009  F00D         	movff	?___awtoft,___ftdiv@f1
  2335  00744A  C00A  F00E         	movff	?___awtoft+1,___ftdiv@f1+1
  2336  00744E  C00B  F00F         	movff	?___awtoft+2,___ftdiv@f1+2
  2337  007452  EC8C  F036         	call	___ftdiv	;wreg free
  2338  007456  C00D  F03F         	movff	?___ftdiv,_readADC$4189
  2339  00745A  C00E  F040         	movff	?___ftdiv+1,_readADC$4189+1
  2340  00745E  C00F  F041         	movff	?___ftdiv+2,_readADC$4189+2
  2341                           
  2342                           ;joystick.c: 341: {;joystick.c: 357: calc = (((1.023 / ((float)adcResult/1000.0)) * 100.
      +                          0) - 100.0) * 0.60;
  2343  007462  0E00               	movlw	0
  2344  007464  6E2E               	movwf	___ftadd@f2^0,c
  2345  007466  0EC8               	movlw	200
  2346  007468  6E2F               	movwf	(___ftadd@f2+1)^0,c
  2347  00746A  0EC2               	movlw	194
  2348  00746C  6E30               	movwf	(___ftadd@f2+2)^0,c
  2349  00746E  0E00               	movlw	0
  2350  007470  6E1F               	movwf	___ftmul@f2^0,c
  2351  007472  0EC8               	movlw	200
  2352  007474  6E20               	movwf	(___ftmul@f2+1)^0,c
  2353  007476  0E42               	movlw	66
  2354  007478  6E21               	movwf	(___ftmul@f2+2)^0,c
  2355  00747A  C03F  F010         	movff	_readADC$4189,___ftdiv@f2
  2356  00747E  C040  F011         	movff	_readADC$4189+1,___ftdiv@f2+1
  2357  007482  C041  F012         	movff	_readADC$4189+2,___ftdiv@f2+2
  2358  007486  0EF2               	movlw	242
  2359  007488  6E0D               	movwf	___ftdiv@f1^0,c
  2360  00748A  0E82               	movlw	130
  2361  00748C  6E0E               	movwf	(___ftdiv@f1+1)^0,c
  2362  00748E  0E3F               	movlw	63
  2363  007490  6E0F               	movwf	(___ftdiv@f1+2)^0,c
  2364  007492  EC8C  F036         	call	___ftdiv	;wreg free
  2365  007496  C00D  F01C         	movff	?___ftdiv,___ftmul@f1
  2366  00749A  C00E  F01D         	movff	?___ftdiv+1,___ftmul@f1+1
  2367  00749E  C00F  F01E         	movff	?___ftdiv+2,___ftmul@f1+2
  2368  0074A2  EC61  F038         	call	___ftmul	;wreg free
  2369  0074A6  C01C  F02B         	movff	?___ftmul,___ftadd@f1
  2370  0074AA  C01D  F02C         	movff	?___ftmul+1,___ftadd@f1+1
  2371  0074AE  C01E  F02D         	movff	?___ftmul+2,___ftadd@f1+2
  2372  0074B2  EC81  F03B         	call	___ftadd	;wreg free
  2373  0074B6  C02B  F042         	movff	?___ftadd,_readADC$4190
  2374  0074BA  C02C  F043         	movff	?___ftadd+1,_readADC$4190+1
  2375  0074BE  C02D  F044         	movff	?___ftadd+2,_readADC$4190+2
  2376                           
  2377                           ;joystick.c: 341: {;joystick.c: 357: calc = (((1.023 / ((float)adcResult/1000.0)) * 100.
      +                          0) - 100.0) * 0.60;
  2378  0074C2  C042  F01C         	movff	_readADC$4190,___ftmul@f1
  2379  0074C6  C043  F01D         	movff	_readADC$4190+1,___ftmul@f1+1
  2380  0074CA  C044  F01E         	movff	_readADC$4190+2,___ftmul@f1+2
  2381  0074CE  0E9A               	movlw	154
  2382  0074D0  6E1F               	movwf	___ftmul@f2^0,c
  2383  0074D2  0E19               	movlw	25
  2384  0074D4  6E20               	movwf	(___ftmul@f2+1)^0,c
  2385  0074D6  0E3F               	movlw	63
  2386  0074D8  6E21               	movwf	(___ftmul@f2+2)^0,c
  2387  0074DA  EC61  F038         	call	___ftmul	;wreg free
  2388  0074DE  C01C  F048         	movff	?___ftmul,readADC@calc
  2389  0074E2  C01D  F049         	movff	?___ftmul+1,readADC@calc+1
  2390  0074E6  C01E  F04A         	movff	?___ftmul+2,readADC@calc+2
  2391                           
  2392                           ;joystick.c: 358: if (calc > 255) calc = 255;
  2393  0074EA  0E00               	movlw	0
  2394  0074EC  6E01               	movwf	___ftge@ff1^0,c
  2395  0074EE  0E7F               	movlw	127
  2396  0074F0  6E02               	movwf	(___ftge@ff1+1)^0,c
  2397  0074F2  0E43               	movlw	67
  2398  0074F4  6E03               	movwf	(___ftge@ff1+2)^0,c
  2399  0074F6  C048  F004         	movff	readADC@calc,___ftge@ff2
  2400  0074FA  C049  F005         	movff	readADC@calc+1,___ftge@ff2+1
  2401  0074FE  C04A  F006         	movff	readADC@calc+2,___ftge@ff2+2
  2402  007502  ECA2  F030         	call	___ftge	;wreg free
  2403  007506  B0D8               	btfsc	status,0,c
  2404  007508  D006               	goto	l4558
  2405  00750A  0E00               	movlw	0
  2406  00750C  6E48               	movwf	readADC@calc^0,c
  2407  00750E  0E7F               	movlw	127
  2408  007510  6E49               	movwf	(readADC@calc+1)^0,c
  2409  007512  0E43               	movlw	67
  2410  007514  6E4A               	movwf	(readADC@calc+2)^0,c
  2411  007516                     l4558:
  2412                           
  2413                           ;joystick.c: 362: calc = 255 - calc;
  2414  007516  0E00               	movlw	0
  2415  007518  6E37               	movwf	___ftsub@f1^0,c
  2416  00751A  0E7F               	movlw	127
  2417  00751C  6E38               	movwf	(___ftsub@f1+1)^0,c
  2418  00751E  0E43               	movlw	67
  2419  007520  6E39               	movwf	(___ftsub@f1+2)^0,c
  2420  007522  C048  F03A         	movff	readADC@calc,___ftsub@f2
  2421  007526  C049  F03B         	movff	readADC@calc+1,___ftsub@f2+1
  2422  00752A  C04A  F03C         	movff	readADC@calc+2,___ftsub@f2+2
  2423  00752E  ECC6  F02F         	call	___ftsub	;wreg free
  2424  007532  C037  F048         	movff	?___ftsub,readADC@calc
  2425  007536  C038  F049         	movff	?___ftsub+1,readADC@calc+1
  2426  00753A  C039  F04A         	movff	?___ftsub+2,readADC@calc+2
  2427                           
  2428                           ;joystick.c: 364: return (int)calc;
  2429  00753E  C048  F001         	movff	readADC@calc,___fttol@f1
  2430  007542  C049  F002         	movff	readADC@calc+1,___fttol@f1+1
  2431  007546  C04A  F003         	movff	readADC@calc+2,___fttol@f1+2
  2432  00754A  ECF4  F033         	call	___fttol	;wreg free
  2433  00754E  C001  F03D         	movff	?___fttol,?_readADC
  2434  007552  C002  F03E         	movff	?___fttol+1,?_readADC+1
  2435  007556  0012               	return	
  2436  007558                     l684:
  2437                           
  2438                           ;joystick.c: 366: else return -1;
  2439  007558  683D               	setf	?_readADC^0,c
  2440  00755A  683E               	setf	(?_readADC+1)^0,c
  2441  00755C  0012               	return		;funcret
  2442  00755E                     __end_of_readADC:
  2443                           	callstack 0
  2444                           
  2445 ;; *************** function ___fttol *****************
  2446 ;; Defined at:
  2447 ;;		line 44 in file "/Applications/microchip/xc8/v2.32/pic/sources/c90/common/fttol.c"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;  f1              3    0[COMRAM] float 
  2450 ;; Auto vars:     Size  Location     Type
  2451 ;;  lval            4   10[COMRAM] unsigned long 
  2452 ;;  exp1            1   14[COMRAM] unsigned char 
  2453 ;;  sign1           1    9[COMRAM] unsigned char 
  2454 ;; Return value:  Size  Location     Type
  2455 ;;                  4    0[COMRAM] long 
  2456 ;; Registers used:
  2457 ;;		wreg, status,2, status,0
  2458 ;; Tracked objects:
  2459 ;;		On entry : 0/0
  2460 ;;		On exit  : 0/0
  2461 ;;		Unchanged: 0/0
  2462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  2463 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0
  2464 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0
  2465 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0
  2466 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0
  2467 ;;Total ram usage:       15 bytes
  2468 ;; Hardware stack levels used: 1
  2469 ;; This function calls:
  2470 ;;		Nothing
  2471 ;; This function is called by:
  2472 ;;		_readADC
  2473 ;; This function uses a non-reentrant model
  2474 ;;
  2475                           
  2476                           	psect	text3
  2477  0067E8                     __ptext3:
  2478                           	callstack 0
  2479  0067E8                     ___fttol:
  2480                           	callstack 28
  2481                           
  2482                           ;incstack = 0
  2483  0067E8  C003  F005         	movff	___fttol@f1+2,??___fttol
  2484  0067EC  6A06               	clrf	(??___fttol+1)^0,c
  2485  0067EE  6A07               	clrf	(??___fttol+2)^0,c
  2486  0067F0  3402               	rlcf	(___fttol@f1+1)^0,w,c
  2487  0067F2  3605               	rlcf	??___fttol^0,f,c
  2488  0067F4  E301               	bnc	u4011
  2489  0067F6  8006               	bsf	(??___fttol+1)^0,0,c
  2490  0067F8                     u4011:
  2491  0067F8  5005               	movf	??___fttol^0,w,c
  2492  0067FA  6E0F               	movwf	___fttol@exp1^0,c
  2493  0067FC  500F               	movf	___fttol@exp1^0,w,c
  2494  0067FE  A4D8               	btfss	status,2,c
  2495  006800  D009               	goto	l4366
  2496  006802                     u4020:
  2497  006802  0E00               	movlw	0
  2498  006804  6E01               	movwf	?___fttol^0,c
  2499  006806  0E00               	movlw	0
  2500  006808  6E02               	movwf	(?___fttol+1)^0,c
  2501  00680A  0E00               	movlw	0
  2502  00680C  6E03               	movwf	(?___fttol+2)^0,c
  2503  00680E  0E00               	movlw	0
  2504  006810  6E04               	movwf	(?___fttol+3)^0,c
  2505  006812  0012               	return	
  2506  006814                     l4366:
  2507  006814  0E17               	movlw	23
  2508  006816  6E05               	movwf	??___fttol^0,c
  2509  006818  C001  F006         	movff	___fttol@f1,??___fttol+1
  2510  00681C  C002  F007         	movff	___fttol@f1+1,??___fttol+2
  2511  006820  C003  F008         	movff	___fttol@f1+2,??___fttol+3
  2512  006824  2805               	incf	??___fttol^0,w,c
  2513  006826  6E09               	movwf	(??___fttol+4)^0,c
  2514  006828  D004               	goto	u4030
  2515  00682A                     u4035:
  2516  00682A  90D8               	bcf	status,0,c
  2517  00682C  3208               	rrcf	(??___fttol+3)^0,f,c
  2518  00682E  3207               	rrcf	(??___fttol+2)^0,f,c
  2519  006830  3206               	rrcf	(??___fttol+1)^0,f,c
  2520  006832                     u4030:
  2521  006832  2E09               	decfsz	(??___fttol+4)^0,f,c
  2522  006834  D7FA               	goto	u4035
  2523  006836  5006               	movf	(??___fttol+1)^0,w,c
  2524  006838  6E0A               	movwf	___fttol@sign1^0,c
  2525  00683A  8E02               	bsf	(___fttol@f1+1)^0,7,c
  2526  00683C  0EFF               	movlw	255
  2527  00683E  1601               	andwf	___fttol@f1^0,f,c
  2528  006840  0EFF               	movlw	255
  2529  006842  1602               	andwf	(___fttol@f1+1)^0,f,c
  2530  006844  0E00               	movlw	0
  2531  006846  1603               	andwf	(___fttol@f1+2)^0,f,c
  2532  006848  5001               	movf	___fttol@f1^0,w,c
  2533  00684A  6E0B               	movwf	___fttol@lval^0,c
  2534  00684C  5002               	movf	(___fttol@f1+1)^0,w,c
  2535  00684E  6E0C               	movwf	(___fttol@lval+1)^0,c
  2536  006850  5003               	movf	(___fttol@f1+2)^0,w,c
  2537  006852  6E0D               	movwf	(___fttol@lval+2)^0,c
  2538  006854  6A0E               	clrf	(___fttol@lval+3)^0,c
  2539  006856  0E8E               	movlw	142
  2540  006858  5E0F               	subwf	___fttol@exp1^0,f,c
  2541  00685A  AE0F               	btfss	___fttol@exp1^0,7,c
  2542  00685C  D00D               	goto	l4388
  2543  00685E  500F               	movf	___fttol@exp1^0,w,c
  2544  006860  0A80               	xorlw	128
  2545  006862  0F8F               	addlw	143
  2546  006864  A0D8               	btfss	status,0,c
  2547  006866  D7CD               	goto	u4020
  2548  006868                     l4384:
  2549  006868  90D8               	bcf	status,0,c
  2550  00686A  320E               	rrcf	(___fttol@lval+3)^0,f,c
  2551  00686C  320D               	rrcf	(___fttol@lval+2)^0,f,c
  2552  00686E  320C               	rrcf	(___fttol@lval+1)^0,f,c
  2553  006870  320B               	rrcf	___fttol@lval^0,f,c
  2554  006872  3E0F               	incfsz	___fttol@exp1^0,f,c
  2555  006874  D7F9               	goto	l4384
  2556  006876  D00D               	goto	u4070
  2557  006878                     l4388:
  2558  006878  0E17               	movlw	23
  2559  00687A  640F               	cpfsgt	___fttol@exp1^0,c
  2560  00687C  D007               	goto	l4396
  2561  00687E  D7C1               	goto	u4020
  2562  006880                     l4394:
  2563  006880  90D8               	bcf	status,0,c
  2564  006882  360B               	rlcf	___fttol@lval^0,f,c
  2565  006884  360C               	rlcf	(___fttol@lval+1)^0,f,c
  2566  006886  360D               	rlcf	(___fttol@lval+2)^0,f,c
  2567  006888  360E               	rlcf	(___fttol@lval+3)^0,f,c
  2568  00688A  060F               	decf	___fttol@exp1^0,f,c
  2569  00688C                     l4396:
  2570  00688C  500F               	movf	___fttol@exp1^0,w,c
  2571  00688E  A4D8               	btfss	status,2,c
  2572  006890  D7F7               	goto	l4394
  2573  006892                     u4070:
  2574  006892  500A               	movf	___fttol@sign1^0,w,c
  2575  006894  B4D8               	btfsc	status,2,c
  2576  006896  D008               	goto	l4402
  2577  006898  1E0E               	comf	(___fttol@lval+3)^0,f,c
  2578  00689A  1E0D               	comf	(___fttol@lval+2)^0,f,c
  2579  00689C  1E0C               	comf	(___fttol@lval+1)^0,f,c
  2580  00689E  6C0B               	negf	___fttol@lval^0,c
  2581  0068A0  0E00               	movlw	0
  2582  0068A2  220C               	addwfc	(___fttol@lval+1)^0,f,c
  2583  0068A4  220D               	addwfc	(___fttol@lval+2)^0,f,c
  2584  0068A6  220E               	addwfc	(___fttol@lval+3)^0,f,c
  2585  0068A8                     l4402:
  2586  0068A8  C00B  F001         	movff	___fttol@lval,?___fttol
  2587  0068AC  C00C  F002         	movff	___fttol@lval+1,?___fttol+1
  2588  0068B0  C00D  F003         	movff	___fttol@lval+2,?___fttol+2
  2589  0068B4  C00E  F004         	movff	___fttol@lval+3,?___fttol+3
  2590  0068B8  0012               	return		;funcret
  2591  0068BA                     __end_of___fttol:
  2592                           	callstack 0
  2593                           
  2594 ;; *************** function ___ftsub *****************
  2595 ;; Defined at:
  2596 ;;		line 19 in file "/Applications/microchip/xc8/v2.32/pic/sources/c90/common/ftsub.c"
  2597 ;; Parameters:    Size  Location     Type
  2598 ;;  f1              3   54[COMRAM] float 
  2599 ;;  f2              3   57[COMRAM] float 
  2600 ;; Auto vars:     Size  Location     Type
  2601 ;;		None
  2602 ;; Return value:  Size  Location     Type
  2603 ;;                  3   54[COMRAM] float 
  2604 ;; Registers used:
  2605 ;;		wreg, status,2, status,0, cstack
  2606 ;; Tracked objects:
  2607 ;;		On entry : 0/0
  2608 ;;		On exit  : 0/0
  2609 ;;		Unchanged: 0/0
  2610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  2611 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0
  2612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0
  2613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  2614 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0
  2615 ;;Total ram usage:        6 bytes
  2616 ;; Hardware stack levels used: 1
  2617 ;; Hardware stack levels required when called: 2
  2618 ;; This function calls:
  2619 ;;		___ftadd
  2620 ;; This function is called by:
  2621 ;;		_readADC
  2622 ;; This function uses a non-reentrant model
  2623 ;;
  2624                           
  2625                           	psect	text4
  2626  005F8C                     __ptext4:
  2627                           	callstack 0
  2628  005F8C                     ___ftsub:
  2629                           	callstack 26
  2630                           
  2631                           ;incstack = 0
  2632  005F8C  503A               	movf	___ftsub@f2^0,w,c
  2633  005F8E  103B               	iorwf	(___ftsub@f2+1)^0,w,c
  2634  005F90  103C               	iorwf	(___ftsub@f2+2)^0,w,c
  2635  005F92  B4D8               	btfsc	status,2,c
  2636  005F94  D006               	goto	l4326
  2637  005F96  0E00               	movlw	0
  2638  005F98  1A3A               	xorwf	___ftsub@f2^0,f,c
  2639  005F9A  0E00               	movlw	0
  2640  005F9C  1A3B               	xorwf	(___ftsub@f2+1)^0,f,c
  2641  005F9E  0E80               	movlw	128
  2642  005FA0  1A3C               	xorwf	(___ftsub@f2+2)^0,f,c
  2643  005FA2                     l4326:
  2644  005FA2  C037  F02B         	movff	___ftsub@f1,___ftadd@f1
  2645  005FA6  C038  F02C         	movff	___ftsub@f1+1,___ftadd@f1+1
  2646  005FAA  C039  F02D         	movff	___ftsub@f1+2,___ftadd@f1+2
  2647  005FAE  C03A  F02E         	movff	___ftsub@f2,___ftadd@f2
  2648  005FB2  C03B  F02F         	movff	___ftsub@f2+1,___ftadd@f2+1
  2649  005FB6  C03C  F030         	movff	___ftsub@f2+2,___ftadd@f2+2
  2650  005FBA  EC81  F03B         	call	___ftadd	;wreg free
  2651  005FBE  C02B  F037         	movff	?___ftadd,?___ftsub
  2652  005FC2  C02C  F038         	movff	?___ftadd+1,?___ftsub+1
  2653  005FC6  C02D  F039         	movff	?___ftadd+2,?___ftsub+2
  2654  005FCA  0012               	return		;funcret
  2655  005FCC                     __end_of___ftsub:
  2656                           	callstack 0
  2657                           
  2658 ;; *************** function ___ftadd *****************
  2659 ;; Defined at:
  2660 ;;		line 86 in file "/Applications/microchip/xc8/v2.32/pic/sources/c90/common/ftadd.c"
  2661 ;; Parameters:    Size  Location     Type
  2662 ;;  f1              3   42[COMRAM] float 
  2663 ;;  f2              3   45[COMRAM] float 
  2664 ;; Auto vars:     Size  Location     Type
  2665 ;;  exp1            1   53[COMRAM] unsigned char 
  2666 ;;  exp2            1   52[COMRAM] unsigned char 
  2667 ;;  sign            1   51[COMRAM] unsigned char 
  2668 ;; Return value:  Size  Location     Type
  2669 ;;                  3   42[COMRAM] float 
  2670 ;; Registers used:
  2671 ;;		wreg, status,2, status,0, cstack
  2672 ;; Tracked objects:
  2673 ;;		On entry : 0/0
  2674 ;;		On exit  : 0/0
  2675 ;;		Unchanged: 0/0
  2676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  2677 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0
  2678 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0
  2679 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0
  2680 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0
  2681 ;;Total ram usage:       12 bytes
  2682 ;; Hardware stack levels used: 1
  2683 ;; Hardware stack levels required when called: 1
  2684 ;; This function calls:
  2685 ;;		___ftpack
  2686 ;; This function is called by:
  2687 ;;		_readADC
  2688 ;;		___ftsub
  2689 ;; This function uses a non-reentrant model
  2690 ;;
  2691                           
  2692                           	psect	text5
  2693  007702                     __ptext5:
  2694                           	callstack 0
  2695  007702                     ___ftadd:
  2696                           	callstack 26
  2697                           
  2698                           ;incstack = 0
  2699  007702  C02D  F031         	movff	___ftadd@f1+2,??___ftadd
  2700  007706  6A32               	clrf	(??___ftadd+1)^0,c
  2701  007708  6A33               	clrf	(??___ftadd+2)^0,c
  2702  00770A  342C               	rlcf	(___ftadd@f1+1)^0,w,c
  2703  00770C  3631               	rlcf	??___ftadd^0,f,c
  2704  00770E  E301               	bnc	u3561
  2705  007710  8032               	bsf	(??___ftadd+1)^0,0,c
  2706  007712                     u3561:
  2707  007712  5031               	movf	??___ftadd^0,w,c
  2708  007714  6E36               	movwf	___ftadd@exp1^0,c
  2709  007716  C030  F031         	movff	___ftadd@f2+2,??___ftadd
  2710  00771A  6A32               	clrf	(??___ftadd+1)^0,c
  2711  00771C  6A33               	clrf	(??___ftadd+2)^0,c
  2712  00771E  342F               	rlcf	(___ftadd@f2+1)^0,w,c
  2713  007720  3631               	rlcf	??___ftadd^0,f,c
  2714  007722  E301               	bnc	u3571
  2715  007724  8032               	bsf	(??___ftadd+1)^0,0,c
  2716  007726                     u3571:
  2717  007726  5031               	movf	??___ftadd^0,w,c
  2718  007728  6E35               	movwf	___ftadd@exp2^0,c
  2719  00772A  5036               	movf	___ftadd@exp1^0,w,c
  2720  00772C  B4D8               	btfsc	status,2,c
  2721  00772E  D00A               	goto	u3600
  2722  007730  5035               	movf	___ftadd@exp2^0,w,c
  2723  007732  5C36               	subwf	___ftadd@exp1^0,w,c
  2724  007734  B0D8               	btfsc	status,0,c
  2725  007736  D00D               	goto	l4102
  2726  007738  5036               	movf	___ftadd@exp1^0,w,c
  2727  00773A  5C35               	subwf	___ftadd@exp2^0,w,c
  2728  00773C  6E31               	movwf	??___ftadd^0,c
  2729  00773E  0E18               	movlw	24
  2730  007740  6431               	cpfsgt	??___ftadd^0,c
  2731  007742  D007               	goto	l4102
  2732  007744                     u3600:
  2733  007744  C02E  F02B         	movff	___ftadd@f2,?___ftadd
  2734  007748  C02F  F02C         	movff	___ftadd@f2+1,?___ftadd+1
  2735  00774C  C030  F02D         	movff	___ftadd@f2+2,?___ftadd+2
  2736  007750  0012               	return	
  2737  007752                     l4102:
  2738  007752  5035               	movf	___ftadd@exp2^0,w,c
  2739  007754  B4D8               	btfsc	status,2,c
  2740  007756  D00A               	goto	u3630
  2741  007758  5036               	movf	___ftadd@exp1^0,w,c
  2742  00775A  5C35               	subwf	___ftadd@exp2^0,w,c
  2743  00775C  B0D8               	btfsc	status,0,c
  2744  00775E  D00D               	goto	l4108
  2745  007760  5035               	movf	___ftadd@exp2^0,w,c
  2746  007762  5C36               	subwf	___ftadd@exp1^0,w,c
  2747  007764  6E31               	movwf	??___ftadd^0,c
  2748  007766  0E18               	movlw	24
  2749  007768  6431               	cpfsgt	??___ftadd^0,c
  2750  00776A  D007               	goto	l4108
  2751  00776C                     u3630:
  2752  00776C  C02B  F02B         	movff	___ftadd@f1,?___ftadd
  2753  007770  C02C  F02C         	movff	___ftadd@f1+1,?___ftadd+1
  2754  007774  C02D  F02D         	movff	___ftadd@f1+2,?___ftadd+2
  2755  007778  0012               	return	
  2756  00777A                     l4108:
  2757  00777A  0E06               	movlw	6
  2758  00777C  6E34               	movwf	___ftadd@sign^0,c
  2759  00777E  BE2D               	btfsc	(___ftadd@f1+2)^0,7,c
  2760  007780  8E34               	bsf	___ftadd@sign^0,7,c
  2761  007782  BE30               	btfsc	(___ftadd@f2+2)^0,7,c
  2762  007784  8C34               	bsf	___ftadd@sign^0,6,c
  2763  007786  8E2C               	bsf	(___ftadd@f1+1)^0,7,c
  2764  007788  0EFF               	movlw	255
  2765  00778A  162B               	andwf	___ftadd@f1^0,f,c
  2766  00778C  0EFF               	movlw	255
  2767  00778E  162C               	andwf	(___ftadd@f1+1)^0,f,c
  2768  007790  0E00               	movlw	0
  2769  007792  162D               	andwf	(___ftadd@f1+2)^0,f,c
  2770  007794  8E2F               	bsf	(___ftadd@f2+1)^0,7,c
  2771  007796  0EFF               	movlw	255
  2772  007798  162E               	andwf	___ftadd@f2^0,f,c
  2773  00779A  0EFF               	movlw	255
  2774  00779C  162F               	andwf	(___ftadd@f2+1)^0,f,c
  2775  00779E  0E00               	movlw	0
  2776  0077A0  1630               	andwf	(___ftadd@f2+2)^0,f,c
  2777  0077A2  5035               	movf	___ftadd@exp2^0,w,c
  2778  0077A4  5C36               	subwf	___ftadd@exp1^0,w,c
  2779  0077A6  B0D8               	btfsc	status,0,c
  2780  0077A8  D01B               	goto	l4134
  2781  0077AA                     u3660:
  2782  0077AA  90D8               	bcf	status,0,c
  2783  0077AC  362E               	rlcf	___ftadd@f2^0,f,c
  2784  0077AE  362F               	rlcf	(___ftadd@f2+1)^0,f,c
  2785  0077B0  3630               	rlcf	(___ftadd@f2+2)^0,f,c
  2786  0077B2  0635               	decf	___ftadd@exp2^0,f,c
  2787  0077B4  5036               	movf	___ftadd@exp1^0,w,c
  2788  0077B6  1835               	xorwf	___ftadd@exp2^0,w,c
  2789  0077B8  B4D8               	btfsc	status,2,c
  2790  0077BA  D00D               	goto	l4132
  2791  0077BC  0634               	decf	___ftadd@sign^0,f,c
  2792  0077BE  C034  F031         	movff	___ftadd@sign,??___ftadd
  2793  0077C2  0E07               	movlw	7
  2794  0077C4  1631               	andwf	??___ftadd^0,f,c
  2795  0077C6  B4D8               	btfsc	status,2,c
  2796  0077C8  D006               	goto	l4132
  2797  0077CA  D7EF               	goto	u3660
  2798  0077CC                     l4130:
  2799  0077CC  90D8               	bcf	status,0,c
  2800  0077CE  322D               	rrcf	(___ftadd@f1+2)^0,f,c
  2801  0077D0  322C               	rrcf	(___ftadd@f1+1)^0,f,c
  2802  0077D2  322B               	rrcf	___ftadd@f1^0,f,c
  2803  0077D4  2A36               	incf	___ftadd@exp1^0,f,c
  2804  0077D6                     l4132:
  2805  0077D6  5035               	movf	___ftadd@exp2^0,w,c
  2806  0077D8  1836               	xorwf	___ftadd@exp1^0,w,c
  2807  0077DA  B4D8               	btfsc	status,2,c
  2808  0077DC  D01F               	goto	u3730
  2809  0077DE  D7F6               	goto	l4130
  2810  0077E0                     l4134:
  2811  0077E0  5036               	movf	___ftadd@exp1^0,w,c
  2812  0077E2  5C35               	subwf	___ftadd@exp2^0,w,c
  2813  0077E4  B0D8               	btfsc	status,0,c
  2814  0077E6  D01A               	goto	u3730
  2815  0077E8                     u3700:
  2816  0077E8  90D8               	bcf	status,0,c
  2817  0077EA  362B               	rlcf	___ftadd@f1^0,f,c
  2818  0077EC  362C               	rlcf	(___ftadd@f1+1)^0,f,c
  2819  0077EE  362D               	rlcf	(___ftadd@f1+2)^0,f,c
  2820  0077F0  0636               	decf	___ftadd@exp1^0,f,c
  2821  0077F2  5036               	movf	___ftadd@exp1^0,w,c
  2822  0077F4  1835               	xorwf	___ftadd@exp2^0,w,c
  2823  0077F6  B4D8               	btfsc	status,2,c
  2824  0077F8  D00D               	goto	l4144
  2825  0077FA  0634               	decf	___ftadd@sign^0,f,c
  2826  0077FC  C034  F031         	movff	___ftadd@sign,??___ftadd
  2827  007800  0E07               	movlw	7
  2828  007802  1631               	andwf	??___ftadd^0,f,c
  2829  007804  B4D8               	btfsc	status,2,c
  2830  007806  D006               	goto	l4144
  2831  007808  D7EF               	goto	u3700
  2832  00780A                     l4142:
  2833  00780A  90D8               	bcf	status,0,c
  2834  00780C  3230               	rrcf	(___ftadd@f2+2)^0,f,c
  2835  00780E  322F               	rrcf	(___ftadd@f2+1)^0,f,c
  2836  007810  322E               	rrcf	___ftadd@f2^0,f,c
  2837  007812  2A35               	incf	___ftadd@exp2^0,f,c
  2838  007814                     l4144:
  2839  007814  5035               	movf	___ftadd@exp2^0,w,c
  2840  007816  1836               	xorwf	___ftadd@exp1^0,w,c
  2841  007818  A4D8               	btfss	status,2,c
  2842  00781A  D7F7               	goto	l4142
  2843  00781C                     u3730:
  2844  00781C  AE34               	btfss	___ftadd@sign^0,7,c
  2845  00781E  D00C               	goto	l1237
  2846  007820  0EFF               	movlw	255
  2847  007822  1A2B               	xorwf	___ftadd@f1^0,f,c
  2848  007824  0EFF               	movlw	255
  2849  007826  1A2C               	xorwf	(___ftadd@f1+1)^0,f,c
  2850  007828  0EFF               	movlw	255
  2851  00782A  1A2D               	xorwf	(___ftadd@f1+2)^0,f,c
  2852  00782C  0E01               	movlw	1
  2853  00782E  262B               	addwf	___ftadd@f1^0,f,c
  2854  007830  0E00               	movlw	0
  2855  007832  222C               	addwfc	(___ftadd@f1+1)^0,f,c
  2856  007834  0E00               	movlw	0
  2857  007836  222D               	addwfc	(___ftadd@f1+2)^0,f,c
  2858  007838                     l1237:
  2859  007838  AC34               	btfss	___ftadd@sign^0,6,c
  2860  00783A  D00C               	goto	l4150
  2861  00783C  0EFF               	movlw	255
  2862  00783E  1A2E               	xorwf	___ftadd@f2^0,f,c
  2863  007840  0EFF               	movlw	255
  2864  007842  1A2F               	xorwf	(___ftadd@f2+1)^0,f,c
  2865  007844  0EFF               	movlw	255
  2866  007846  1A30               	xorwf	(___ftadd@f2+2)^0,f,c
  2867  007848  0E01               	movlw	1
  2868  00784A  262E               	addwf	___ftadd@f2^0,f,c
  2869  00784C  0E00               	movlw	0
  2870  00784E  222F               	addwfc	(___ftadd@f2+1)^0,f,c
  2871  007850  0E00               	movlw	0
  2872  007852  2230               	addwfc	(___ftadd@f2+2)^0,f,c
  2873  007854                     l4150:
  2874  007854  0E00               	movlw	0
  2875  007856  6E34               	movwf	___ftadd@sign^0,c
  2876  007858  502B               	movf	___ftadd@f1^0,w,c
  2877  00785A  262E               	addwf	___ftadd@f2^0,f,c
  2878  00785C  502C               	movf	(___ftadd@f1+1)^0,w,c
  2879  00785E  222F               	addwfc	(___ftadd@f2+1)^0,f,c
  2880  007860  502D               	movf	(___ftadd@f1+2)^0,w,c
  2881  007862  2230               	addwfc	(___ftadd@f2+2)^0,f,c
  2882  007864  AE30               	btfss	(___ftadd@f2+2)^0,7,c
  2883  007866  D00E               	goto	l4160
  2884  007868  0EFF               	movlw	255
  2885  00786A  1A2E               	xorwf	___ftadd@f2^0,f,c
  2886  00786C  0EFF               	movlw	255
  2887  00786E  1A2F               	xorwf	(___ftadd@f2+1)^0,f,c
  2888  007870  0EFF               	movlw	255
  2889  007872  1A30               	xorwf	(___ftadd@f2+2)^0,f,c
  2890  007874  0E01               	movlw	1
  2891  007876  262E               	addwf	___ftadd@f2^0,f,c
  2892  007878  0E00               	movlw	0
  2893  00787A  222F               	addwfc	(___ftadd@f2+1)^0,f,c
  2894  00787C  0E00               	movlw	0
  2895  00787E  2230               	addwfc	(___ftadd@f2+2)^0,f,c
  2896  007880  0E01               	movlw	1
  2897  007882  6E34               	movwf	___ftadd@sign^0,c
  2898  007884                     l4160:
  2899  007884  C02E  F001         	movff	___ftadd@f2,___ftpack@arg
  2900  007888  C02F  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  2901  00788C  C030  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  2902  007890  C036  F004         	movff	___ftadd@exp1,___ftpack@exp
  2903  007894  C034  F005         	movff	___ftadd@sign,___ftpack@sign
  2904  007898  EC86  F032         	call	___ftpack	;wreg free
  2905  00789C  C001  F02B         	movff	?___ftpack,?___ftadd
  2906  0078A0  C002  F02C         	movff	?___ftpack+1,?___ftadd+1
  2907  0078A4  C003  F02D         	movff	?___ftpack+2,?___ftadd+2
  2908  0078A8  0012               	return		;funcret
  2909  0078AA                     __end_of___ftadd:
  2910                           	callstack 0
  2911                           
  2912 ;; *************** function ___ftmul *****************
  2913 ;; Defined at:
  2914 ;;		line 62 in file "/Applications/microchip/xc8/v2.32/pic/sources/c90/common/ftmul.c"
  2915 ;; Parameters:    Size  Location     Type
  2916 ;;  f1              3   27[COMRAM] float 
  2917 ;;  f2              3   30[COMRAM] float 
  2918 ;; Auto vars:     Size  Location     Type
  2919 ;;  f3_as_produc    3   37[COMRAM] unsigned um
  2920 ;;  sign            1   41[COMRAM] unsigned char 
  2921 ;;  cntr            1   40[COMRAM] unsigned char 
  2922 ;;  exp             1   36[COMRAM] unsigned char 
  2923 ;; Return value:  Size  Location     Type
  2924 ;;                  3   27[COMRAM] float 
  2925 ;; Registers used:
  2926 ;;		wreg, status,2, status,0, cstack
  2927 ;; Tracked objects:
  2928 ;;		On entry : 0/0
  2929 ;;		On exit  : 0/0
  2930 ;;		Unchanged: 0/0
  2931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  2932 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0
  2933 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0
  2934 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0
  2935 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0
  2936 ;;Total ram usage:       15 bytes
  2937 ;; Hardware stack levels used: 1
  2938 ;; Hardware stack levels required when called: 1
  2939 ;; This function calls:
  2940 ;;		___ftpack
  2941 ;; This function is called by:
  2942 ;;		_readADC
  2943 ;; This function uses a non-reentrant model
  2944 ;;
  2945                           
  2946                           	psect	text6
  2947  0070C2                     __ptext6:
  2948                           	callstack 0
  2949  0070C2                     ___ftmul:
  2950                           	callstack 27
  2951                           
  2952                           ;incstack = 0
  2953  0070C2  C01E  F022         	movff	___ftmul@f1+2,??___ftmul
  2954  0070C6  6A23               	clrf	(??___ftmul+1)^0,c
  2955  0070C8  6A24               	clrf	(??___ftmul+2)^0,c
  2956  0070CA  341D               	rlcf	(___ftmul@f1+1)^0,w,c
  2957  0070CC  3622               	rlcf	??___ftmul^0,f,c
  2958  0070CE  E301               	bnc	u3901
  2959  0070D0  8023               	bsf	(??___ftmul+1)^0,0,c
  2960  0070D2                     u3901:
  2961  0070D2  5022               	movf	??___ftmul^0,w,c
  2962  0070D4  6E25               	movwf	___ftmul@exp^0,c
  2963  0070D6  5025               	movf	___ftmul@exp^0,w,c
  2964  0070D8  A4D8               	btfss	status,2,c
  2965  0070DA  D007               	goto	l4280
  2966  0070DC  0E00               	movlw	0
  2967  0070DE  6E1C               	movwf	?___ftmul^0,c
  2968  0070E0  0E00               	movlw	0
  2969  0070E2  6E1D               	movwf	(?___ftmul+1)^0,c
  2970  0070E4  0E00               	movlw	0
  2971  0070E6  6E1E               	movwf	(?___ftmul+2)^0,c
  2972  0070E8  0012               	return	
  2973  0070EA                     l4280:
  2974  0070EA  C021  F022         	movff	___ftmul@f2+2,??___ftmul
  2975  0070EE  6A23               	clrf	(??___ftmul+1)^0,c
  2976  0070F0  6A24               	clrf	(??___ftmul+2)^0,c
  2977  0070F2  3420               	rlcf	(___ftmul@f2+1)^0,w,c
  2978  0070F4  3622               	rlcf	??___ftmul^0,f,c
  2979  0070F6  E301               	bnc	u3921
  2980  0070F8  8023               	bsf	(??___ftmul+1)^0,0,c
  2981  0070FA                     u3921:
  2982  0070FA  5022               	movf	??___ftmul^0,w,c
  2983  0070FC  6E2A               	movwf	___ftmul@sign^0,c
  2984  0070FE  502A               	movf	___ftmul@sign^0,w,c
  2985  007100  A4D8               	btfss	status,2,c
  2986  007102  D007               	goto	l4286
  2987  007104  0E00               	movlw	0
  2988  007106  6E1C               	movwf	?___ftmul^0,c
  2989  007108  0E00               	movlw	0
  2990  00710A  6E1D               	movwf	(?___ftmul+1)^0,c
  2991  00710C  0E00               	movlw	0
  2992  00710E  6E1E               	movwf	(?___ftmul+2)^0,c
  2993  007110  0012               	return	
  2994  007112                     l4286:
  2995  007112  502A               	movf	___ftmul@sign^0,w,c
  2996  007114  0F7B               	addlw	123
  2997  007116  2625               	addwf	___ftmul@exp^0,f,c
  2998  007118  C01E  F02A         	movff	___ftmul@f1+2,___ftmul@sign
  2999  00711C  5021               	movf	(___ftmul@f2+2)^0,w,c
  3000  00711E  1A2A               	xorwf	___ftmul@sign^0,f,c
  3001  007120  0E80               	movlw	128
  3002  007122  162A               	andwf	___ftmul@sign^0,f,c
  3003  007124  8E1D               	bsf	(___ftmul@f1+1)^0,7,c
  3004  007126  8E20               	bsf	(___ftmul@f2+1)^0,7,c
  3005  007128  0EFF               	movlw	255
  3006  00712A  161F               	andwf	___ftmul@f2^0,f,c
  3007  00712C  0EFF               	movlw	255
  3008  00712E  1620               	andwf	(___ftmul@f2+1)^0,f,c
  3009  007130  0E00               	movlw	0
  3010  007132  1621               	andwf	(___ftmul@f2+2)^0,f,c
  3011  007134  0E00               	movlw	0
  3012  007136  6E26               	movwf	___ftmul@f3_as_product^0,c
  3013  007138  0E00               	movlw	0
  3014  00713A  6E27               	movwf	(___ftmul@f3_as_product+1)^0,c
  3015  00713C  0E00               	movlw	0
  3016  00713E  6E28               	movwf	(___ftmul@f3_as_product+2)^0,c
  3017  007140  0E07               	movlw	7
  3018  007142  6E29               	movwf	___ftmul@cntr^0,c
  3019  007144                     l4300:
  3020  007144  A01C               	btfss	___ftmul@f1^0,0,c
  3021  007146  D006               	goto	l4304
  3022  007148  501F               	movf	___ftmul@f2^0,w,c
  3023  00714A  2626               	addwf	___ftmul@f3_as_product^0,f,c
  3024  00714C  5020               	movf	(___ftmul@f2+1)^0,w,c
  3025  00714E  2227               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  3026  007150  5021               	movf	(___ftmul@f2+2)^0,w,c
  3027  007152  2228               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  3028  007154                     l4304:
  3029  007154  90D8               	bcf	status,0,c
  3030  007156  321E               	rrcf	(___ftmul@f1+2)^0,f,c
  3031  007158  321D               	rrcf	(___ftmul@f1+1)^0,f,c
  3032  00715A  321C               	rrcf	___ftmul@f1^0,f,c
  3033  00715C  90D8               	bcf	status,0,c
  3034  00715E  361F               	rlcf	___ftmul@f2^0,f,c
  3035  007160  3620               	rlcf	(___ftmul@f2+1)^0,f,c
  3036  007162  3621               	rlcf	(___ftmul@f2+2)^0,f,c
  3037  007164  2E29               	decfsz	___ftmul@cntr^0,f,c
  3038  007166  D7EE               	goto	l4300
  3039  007168  0E09               	movlw	9
  3040  00716A  6E29               	movwf	___ftmul@cntr^0,c
  3041  00716C                     l4310:
  3042  00716C  A01C               	btfss	___ftmul@f1^0,0,c
  3043  00716E  D006               	goto	l4314
  3044  007170  501F               	movf	___ftmul@f2^0,w,c
  3045  007172  2626               	addwf	___ftmul@f3_as_product^0,f,c
  3046  007174  5020               	movf	(___ftmul@f2+1)^0,w,c
  3047  007176  2227               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  3048  007178  5021               	movf	(___ftmul@f2+2)^0,w,c
  3049  00717A  2228               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  3050  00717C                     l4314:
  3051  00717C  90D8               	bcf	status,0,c
  3052  00717E  321E               	rrcf	(___ftmul@f1+2)^0,f,c
  3053  007180  321D               	rrcf	(___ftmul@f1+1)^0,f,c
  3054  007182  321C               	rrcf	___ftmul@f1^0,f,c
  3055  007184  90D8               	bcf	status,0,c
  3056  007186  3228               	rrcf	(___ftmul@f3_as_product+2)^0,f,c
  3057  007188  3227               	rrcf	(___ftmul@f3_as_product+1)^0,f,c
  3058  00718A  3226               	rrcf	___ftmul@f3_as_product^0,f,c
  3059  00718C  2E29               	decfsz	___ftmul@cntr^0,f,c
  3060  00718E  D7EE               	goto	l4310
  3061  007190  C026  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  3062  007194  C027  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3063  007198  C028  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3064  00719C  C025  F004         	movff	___ftmul@exp,___ftpack@exp
  3065  0071A0  C02A  F005         	movff	___ftmul@sign,___ftpack@sign
  3066  0071A4  EC86  F032         	call	___ftpack	;wreg free
  3067  0071A8  C001  F01C         	movff	?___ftpack,?___ftmul
  3068  0071AC  C002  F01D         	movff	?___ftpack+1,?___ftmul+1
  3069  0071B0  C003  F01E         	movff	?___ftpack+2,?___ftmul+2
  3070  0071B4  0012               	return		;funcret
  3071  0071B6                     __end_of___ftmul:
  3072                           	callstack 0
  3073                           
  3074 ;; *************** function ___ftge *****************
  3075 ;; Defined at:
  3076 ;;		line 4 in file "/Applications/microchip/xc8/v2.32/pic/sources/c90/common/ftge.c"
  3077 ;; Parameters:    Size  Location     Type
  3078 ;;  ff1             3    0[COMRAM] float 
  3079 ;;  ff2             3    3[COMRAM] float 
  3080 ;; Auto vars:     Size  Location     Type
  3081 ;;		None
  3082 ;; Return value:  Size  Location     Type
  3083 ;;		None               void
  3084 ;; Registers used:
  3085 ;;		wreg, status,2, status,0
  3086 ;; Tracked objects:
  3087 ;;		On entry : 0/0
  3088 ;;		On exit  : 0/0
  3089 ;;		Unchanged: 0/0
  3090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  3091 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0
  3092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0
  3093 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0
  3094 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0
  3095 ;;Total ram usage:        9 bytes
  3096 ;; Hardware stack levels used: 1
  3097 ;; This function calls:
  3098 ;;		Nothing
  3099 ;; This function is called by:
  3100 ;;		_readADC
  3101 ;; This function uses a non-reentrant model
  3102 ;;
  3103                           
  3104                           	psect	text7
  3105  006144                     __ptext7:
  3106                           	callstack 0
  3107  006144                     ___ftge:
  3108                           	callstack 28
  3109                           
  3110                           ;incstack = 0
  3111  006144  AE03               	btfss	(___ftge@ff1+2)^0,7,c
  3112  006146  D00F               	goto	l4346
  3113  006148  0E00               	movlw	0
  3114  00614A  6E07               	movwf	??___ftge^0,c
  3115  00614C  0E00               	movlw	0
  3116  00614E  6E08               	movwf	(??___ftge+1)^0,c
  3117  006150  0E80               	movlw	128
  3118  006152  6E09               	movwf	(??___ftge+2)^0,c
  3119  006154  5001               	movf	___ftge@ff1^0,w,c
  3120  006156  5C07               	subwf	??___ftge^0,w,c
  3121  006158  6E01               	movwf	___ftge@ff1^0,c
  3122  00615A  5002               	movf	(___ftge@ff1+1)^0,w,c
  3123  00615C  5808               	subwfb	(??___ftge+1)^0,w,c
  3124  00615E  6E02               	movwf	(___ftge@ff1+1)^0,c
  3125  006160  5003               	movf	(___ftge@ff1+2)^0,w,c
  3126  006162  5809               	subwfb	(??___ftge+2)^0,w,c
  3127  006164  6E03               	movwf	(___ftge@ff1+2)^0,c
  3128  006166                     l4346:
  3129  006166  AE06               	btfss	(___ftge@ff2+2)^0,7,c
  3130  006168  D00F               	goto	l4350
  3131  00616A  0E00               	movlw	0
  3132  00616C  6E07               	movwf	??___ftge^0,c
  3133  00616E  0E00               	movlw	0
  3134  006170  6E08               	movwf	(??___ftge+1)^0,c
  3135  006172  0E80               	movlw	128
  3136  006174  6E09               	movwf	(??___ftge+2)^0,c
  3137  006176  5004               	movf	___ftge@ff2^0,w,c
  3138  006178  5C07               	subwf	??___ftge^0,w,c
  3139  00617A  6E04               	movwf	___ftge@ff2^0,c
  3140  00617C  5005               	movf	(___ftge@ff2+1)^0,w,c
  3141  00617E  5808               	subwfb	(??___ftge+1)^0,w,c
  3142  006180  6E05               	movwf	(___ftge@ff2+1)^0,c
  3143  006182  5006               	movf	(___ftge@ff2+2)^0,w,c
  3144  006184  5809               	subwfb	(??___ftge+2)^0,w,c
  3145  006186  6E06               	movwf	(___ftge@ff2+2)^0,c
  3146  006188                     l4350:
  3147  006188  0E00               	movlw	0
  3148  00618A  1A01               	xorwf	___ftge@ff1^0,f,c
  3149  00618C  0E00               	movlw	0
  3150  00618E  1A02               	xorwf	(___ftge@ff1+1)^0,f,c
  3151  006190  0E80               	movlw	128
  3152  006192  1A03               	xorwf	(___ftge@ff1+2)^0,f,c
  3153  006194  0E00               	movlw	0
  3154  006196  1A04               	xorwf	___ftge@ff2^0,f,c
  3155  006198  0E00               	movlw	0
  3156  00619A  1A05               	xorwf	(___ftge@ff2+1)^0,f,c
  3157  00619C  0E80               	movlw	128
  3158  00619E  1A06               	xorwf	(___ftge@ff2+2)^0,f,c
  3159  0061A0  5004               	movf	___ftge@ff2^0,w,c
  3160  0061A2  5C01               	subwf	___ftge@ff1^0,w,c
  3161  0061A4  5005               	movf	(___ftge@ff2+1)^0,w,c
  3162  0061A6  5802               	subwfb	(___ftge@ff1+1)^0,w,c
  3163  0061A8  5006               	movf	(___ftge@ff2+2)^0,w,c
  3164  0061AA  5803               	subwfb	(___ftge@ff1+2)^0,w,c
  3165  0061AC  B0D8               	btfsc	status,0,c
  3166  0061AE  D002               	goto	l4356
  3167  0061B0  90D8               	bcf	status,0,c
  3168  0061B2  0012               	return	
  3169  0061B4                     l4356:
  3170  0061B4  80D8               	bsf	status,0,c
  3171  0061B6  0012               	return		;funcret
  3172  0061B8                     __end_of___ftge:
  3173                           	callstack 0
  3174                           
  3175 ;; *************** function ___ftdiv *****************
  3176 ;; Defined at:
  3177 ;;		line 54 in file "/Applications/microchip/xc8/v2.32/pic/sources/c90/common/ftdiv.c"
  3178 ;; Parameters:    Size  Location     Type
  3179 ;;  f1              3   12[COMRAM] float 
  3180 ;;  f2              3   15[COMRAM] float 
  3181 ;; Auto vars:     Size  Location     Type
  3182 ;;  f3              3   22[COMRAM] float 
  3183 ;;  sign            1   26[COMRAM] unsigned char 
  3184 ;;  exp             1   25[COMRAM] unsigned char 
  3185 ;;  cntr            1   21[COMRAM] unsigned char 
  3186 ;; Return value:  Size  Location     Type
  3187 ;;                  3   12[COMRAM] float 
  3188 ;; Registers used:
  3189 ;;		wreg, status,2, status,0, cstack
  3190 ;; Tracked objects:
  3191 ;;		On entry : 0/0
  3192 ;;		On exit  : 0/0
  3193 ;;		Unchanged: 0/0
  3194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  3195 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0
  3196 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0
  3197 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0
  3198 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0
  3199 ;;Total ram usage:       15 bytes
  3200 ;; Hardware stack levels used: 1
  3201 ;; Hardware stack levels required when called: 1
  3202 ;; This function calls:
  3203 ;;		___ftpack
  3204 ;; This function is called by:
  3205 ;;		_readADC
  3206 ;; This function uses a non-reentrant model
  3207 ;;
  3208                           
  3209                           	psect	text8
  3210  006D18                     __ptext8:
  3211                           	callstack 0
  3212  006D18                     ___ftdiv:
  3213                           	callstack 27
  3214                           
  3215                           ;incstack = 0
  3216  006D18  C00F  F013         	movff	___ftdiv@f1+2,??___ftdiv
  3217  006D1C  6A14               	clrf	(??___ftdiv+1)^0,c
  3218  006D1E  6A15               	clrf	(??___ftdiv+2)^0,c
  3219  006D20  340E               	rlcf	(___ftdiv@f1+1)^0,w,c
  3220  006D22  3613               	rlcf	??___ftdiv^0,f,c
  3221  006D24  E301               	bnc	u3851
  3222  006D26  8014               	bsf	(??___ftdiv+1)^0,0,c
  3223  006D28                     u3851:
  3224  006D28  5013               	movf	??___ftdiv^0,w,c
  3225  006D2A  6E1A               	movwf	___ftdiv@exp^0,c
  3226  006D2C  501A               	movf	___ftdiv@exp^0,w,c
  3227  006D2E  A4D8               	btfss	status,2,c
  3228  006D30  D007               	goto	l4234
  3229  006D32  0E00               	movlw	0
  3230  006D34  6E0D               	movwf	?___ftdiv^0,c
  3231  006D36  0E00               	movlw	0
  3232  006D38  6E0E               	movwf	(?___ftdiv+1)^0,c
  3233  006D3A  0E00               	movlw	0
  3234  006D3C  6E0F               	movwf	(?___ftdiv+2)^0,c
  3235  006D3E  0012               	return	
  3236  006D40                     l4234:
  3237  006D40  C012  F013         	movff	___ftdiv@f2+2,??___ftdiv
  3238  006D44  6A14               	clrf	(??___ftdiv+1)^0,c
  3239  006D46  6A15               	clrf	(??___ftdiv+2)^0,c
  3240  006D48  3411               	rlcf	(___ftdiv@f2+1)^0,w,c
  3241  006D4A  3613               	rlcf	??___ftdiv^0,f,c
  3242  006D4C  E301               	bnc	u3871
  3243  006D4E  8014               	bsf	(??___ftdiv+1)^0,0,c
  3244  006D50                     u3871:
  3245  006D50  5013               	movf	??___ftdiv^0,w,c
  3246  006D52  6E1B               	movwf	___ftdiv@sign^0,c
  3247  006D54  501B               	movf	___ftdiv@sign^0,w,c
  3248  006D56  A4D8               	btfss	status,2,c
  3249  006D58  D007               	goto	l4240
  3250  006D5A  0E00               	movlw	0
  3251  006D5C  6E0D               	movwf	?___ftdiv^0,c
  3252  006D5E  0E00               	movlw	0
  3253  006D60  6E0E               	movwf	(?___ftdiv+1)^0,c
  3254  006D62  0E00               	movlw	0
  3255  006D64  6E0F               	movwf	(?___ftdiv+2)^0,c
  3256  006D66  0012               	return	
  3257  006D68                     l4240:
  3258  006D68  0E00               	movlw	0
  3259  006D6A  6E17               	movwf	___ftdiv@f3^0,c
  3260  006D6C  0E00               	movlw	0
  3261  006D6E  6E18               	movwf	(___ftdiv@f3+1)^0,c
  3262  006D70  0E00               	movlw	0
  3263  006D72  6E19               	movwf	(___ftdiv@f3+2)^0,c
  3264  006D74  501B               	movf	___ftdiv@sign^0,w,c
  3265  006D76  0F89               	addlw	137
  3266  006D78  5E1A               	subwf	___ftdiv@exp^0,f,c
  3267  006D7A  C00F  F01B         	movff	___ftdiv@f1+2,___ftdiv@sign
  3268  006D7E  5012               	movf	(___ftdiv@f2+2)^0,w,c
  3269  006D80  1A1B               	xorwf	___ftdiv@sign^0,f,c
  3270  006D82  0E80               	movlw	128
  3271  006D84  161B               	andwf	___ftdiv@sign^0,f,c
  3272  006D86  8E0E               	bsf	(___ftdiv@f1+1)^0,7,c
  3273  006D88  0EFF               	movlw	255
  3274  006D8A  160D               	andwf	___ftdiv@f1^0,f,c
  3275  006D8C  0EFF               	movlw	255
  3276  006D8E  160E               	andwf	(___ftdiv@f1+1)^0,f,c
  3277  006D90  0E00               	movlw	0
  3278  006D92  160F               	andwf	(___ftdiv@f1+2)^0,f,c
  3279  006D94  8E11               	bsf	(___ftdiv@f2+1)^0,7,c
  3280  006D96  0EFF               	movlw	255
  3281  006D98  1610               	andwf	___ftdiv@f2^0,f,c
  3282  006D9A  0EFF               	movlw	255
  3283  006D9C  1611               	andwf	(___ftdiv@f2+1)^0,f,c
  3284  006D9E  0E00               	movlw	0
  3285  006DA0  1612               	andwf	(___ftdiv@f2+2)^0,f,c
  3286  006DA2  0E18               	movlw	24
  3287  006DA4  6E16               	movwf	___ftdiv@cntr^0,c
  3288  006DA6                     l4260:
  3289  006DA6  90D8               	bcf	status,0,c
  3290  006DA8  3617               	rlcf	___ftdiv@f3^0,f,c
  3291  006DAA  3618               	rlcf	(___ftdiv@f3+1)^0,f,c
  3292  006DAC  3619               	rlcf	(___ftdiv@f3+2)^0,f,c
  3293  006DAE  5010               	movf	___ftdiv@f2^0,w,c
  3294  006DB0  5C0D               	subwf	___ftdiv@f1^0,w,c
  3295  006DB2  5011               	movf	(___ftdiv@f2+1)^0,w,c
  3296  006DB4  580E               	subwfb	(___ftdiv@f1+1)^0,w,c
  3297  006DB6  5012               	movf	(___ftdiv@f2+2)^0,w,c
  3298  006DB8  580F               	subwfb	(___ftdiv@f1+2)^0,w,c
  3299  006DBA  A0D8               	btfss	status,0,c
  3300  006DBC  D007               	goto	l1248
  3301  006DBE  5010               	movf	___ftdiv@f2^0,w,c
  3302  006DC0  5E0D               	subwf	___ftdiv@f1^0,f,c
  3303  006DC2  5011               	movf	(___ftdiv@f2+1)^0,w,c
  3304  006DC4  5A0E               	subwfb	(___ftdiv@f1+1)^0,f,c
  3305  006DC6  5012               	movf	(___ftdiv@f2+2)^0,w,c
  3306  006DC8  5A0F               	subwfb	(___ftdiv@f1+2)^0,f,c
  3307  006DCA  8017               	bsf	___ftdiv@f3^0,0,c
  3308  006DCC                     l1248:
  3309  006DCC  90D8               	bcf	status,0,c
  3310  006DCE  360D               	rlcf	___ftdiv@f1^0,f,c
  3311  006DD0  360E               	rlcf	(___ftdiv@f1+1)^0,f,c
  3312  006DD2  360F               	rlcf	(___ftdiv@f1+2)^0,f,c
  3313  006DD4  2E16               	decfsz	___ftdiv@cntr^0,f,c
  3314  006DD6  D7E7               	goto	l4260
  3315  006DD8  C017  F001         	movff	___ftdiv@f3,___ftpack@arg
  3316  006DDC  C018  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  3317  006DE0  C019  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  3318  006DE4  C01A  F004         	movff	___ftdiv@exp,___ftpack@exp
  3319  006DE8  C01B  F005         	movff	___ftdiv@sign,___ftpack@sign
  3320  006DEC  EC86  F032         	call	___ftpack	;wreg free
  3321  006DF0  C001  F00D         	movff	?___ftpack,?___ftdiv
  3322  006DF4  C002  F00E         	movff	?___ftpack+1,?___ftdiv+1
  3323  006DF8  C003  F00F         	movff	?___ftpack+2,?___ftdiv+2
  3324  006DFC  0012               	return		;funcret
  3325  006DFE                     __end_of___ftdiv:
  3326                           	callstack 0
  3327                           
  3328 ;; *************** function ___awtoft *****************
  3329 ;; Defined at:
  3330 ;;		line 32 in file "/Applications/microchip/xc8/v2.32/pic/sources/c90/common/awtoft.c"
  3331 ;; Parameters:    Size  Location     Type
  3332 ;;  c               2    8[COMRAM] int 
  3333 ;; Auto vars:     Size  Location     Type
  3334 ;;  sign            1   11[COMRAM] unsigned char 
  3335 ;; Return value:  Size  Location     Type
  3336 ;;                  3    8[COMRAM] float 
  3337 ;; Registers used:
  3338 ;;		wreg, status,2, status,0, cstack
  3339 ;; Tracked objects:
  3340 ;;		On entry : 0/0
  3341 ;;		On exit  : 0/0
  3342 ;;		Unchanged: 0/0
  3343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  3344 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0
  3345 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0
  3346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  3347 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0
  3348 ;;Total ram usage:        4 bytes
  3349 ;; Hardware stack levels used: 1
  3350 ;; Hardware stack levels required when called: 1
  3351 ;; This function calls:
  3352 ;;		___ftpack
  3353 ;; This function is called by:
  3354 ;;		_readADC
  3355 ;; This function uses a non-reentrant model
  3356 ;;
  3357                           
  3358                           	psect	text9
  3359  005ED8                     __ptext9:
  3360                           	callstack 0
  3361  005ED8                     ___awtoft:
  3362                           	callstack 27
  3363                           
  3364                           ;incstack = 0
  3365  005ED8  0E00               	movlw	0
  3366  005EDA  6E0C               	movwf	___awtoft@sign^0,c
  3367  005EDC  AE0A               	btfss	(___awtoft@c+1)^0,7,c
  3368  005EDE  D006               	goto	l4338
  3369  005EE0  6C09               	negf	___awtoft@c^0,c
  3370  005EE2  1E0A               	comf	(___awtoft@c+1)^0,f,c
  3371  005EE4  B0D8               	btfsc	status,0,c
  3372  005EE6  2A0A               	incf	(___awtoft@c+1)^0,f,c
  3373  005EE8  0E01               	movlw	1
  3374  005EEA  6E0C               	movwf	___awtoft@sign^0,c
  3375  005EEC                     l4338:
  3376  005EEC  C009  F001         	movff	___awtoft@c,___ftpack@arg
  3377  005EF0  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  3378  005EF4  6A03               	clrf	(___ftpack@arg+2)^0,c
  3379  005EF6  0E8E               	movlw	142
  3380  005EF8  6E04               	movwf	___ftpack@exp^0,c
  3381  005EFA  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  3382  005EFE  EC86  F032         	call	___ftpack	;wreg free
  3383  005F02  C001  F009         	movff	?___ftpack,?___awtoft
  3384  005F06  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  3385  005F0A  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  3386  005F0E  0012               	return		;funcret
  3387  005F10                     __end_of___awtoft:
  3388                           	callstack 0
  3389                           
  3390 ;; *************** function ___ftpack *****************
  3391 ;; Defined at:
  3392 ;;		line 62 in file "/Applications/microchip/xc8/v2.32/pic/sources/c90/common/float.c"
  3393 ;; Parameters:    Size  Location     Type
  3394 ;;  arg             3    0[COMRAM] unsigned um
  3395 ;;  exp             1    3[COMRAM] unsigned char 
  3396 ;;  sign            1    4[COMRAM] unsigned char 
  3397 ;; Auto vars:     Size  Location     Type
  3398 ;;		None
  3399 ;; Return value:  Size  Location     Type
  3400 ;;                  3    0[COMRAM] float 
  3401 ;; Registers used:
  3402 ;;		wreg, status,2, status,0
  3403 ;; Tracked objects:
  3404 ;;		On entry : 0/0
  3405 ;;		On exit  : 0/0
  3406 ;;		Unchanged: 0/0
  3407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  3408 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0
  3409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0
  3410 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0
  3411 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0
  3412 ;;Total ram usage:        8 bytes
  3413 ;; Hardware stack levels used: 1
  3414 ;; This function calls:
  3415 ;;		Nothing
  3416 ;; This function is called by:
  3417 ;;		___awtoft
  3418 ;;		___ftadd
  3419 ;;		___ftdiv
  3420 ;;		___ftmul
  3421 ;; This function uses a non-reentrant model
  3422 ;;
  3423                           
  3424                           	psect	text10
  3425  00650C                     __ptext10:
  3426                           	callstack 0
  3427  00650C                     ___ftpack:
  3428                           	callstack 26
  3429                           
  3430                           ;incstack = 0
  3431  00650C  5004               	movf	___ftpack@exp^0,w,c
  3432  00650E  B4D8               	btfsc	status,2,c
  3433  006510  D005               	goto	u3380
  3434  006512  5001               	movf	___ftpack@arg^0,w,c
  3435  006514  1002               	iorwf	(___ftpack@arg+1)^0,w,c
  3436  006516  1003               	iorwf	(___ftpack@arg+2)^0,w,c
  3437  006518  A4D8               	btfss	status,2,c
  3438  00651A  D00C               	goto	l3920
  3439  00651C                     u3380:
  3440  00651C  0E00               	movlw	0
  3441  00651E  6E01               	movwf	?___ftpack^0,c
  3442  006520  0E00               	movlw	0
  3443  006522  6E02               	movwf	(?___ftpack+1)^0,c
  3444  006524  0E00               	movlw	0
  3445  006526  6E03               	movwf	(?___ftpack+2)^0,c
  3446  006528  0012               	return	
  3447  00652A                     l3918:
  3448  00652A  2A04               	incf	___ftpack@exp^0,f,c
  3449  00652C  90D8               	bcf	status,0,c
  3450  00652E  3203               	rrcf	(___ftpack@arg+2)^0,f,c
  3451  006530  3202               	rrcf	(___ftpack@arg+1)^0,f,c
  3452  006532  3201               	rrcf	___ftpack@arg^0,f,c
  3453  006534                     l3920:
  3454  006534  0E00               	movlw	0
  3455  006536  1401               	andwf	___ftpack@arg^0,w,c
  3456  006538  6E06               	movwf	??___ftpack^0,c
  3457  00653A  0E00               	movlw	0
  3458  00653C  1402               	andwf	(___ftpack@arg+1)^0,w,c
  3459  00653E  6E07               	movwf	(??___ftpack+1)^0,c
  3460  006540  0EFE               	movlw	254
  3461  006542  1403               	andwf	(___ftpack@arg+2)^0,w,c
  3462  006544  6E08               	movwf	(??___ftpack+2)^0,c
  3463  006546  5006               	movf	??___ftpack^0,w,c
  3464  006548  1007               	iorwf	(??___ftpack+1)^0,w,c
  3465  00654A  1008               	iorwf	(??___ftpack+2)^0,w,c
  3466  00654C  B4D8               	btfsc	status,2,c
  3467  00654E  D00C               	goto	l3926
  3468  006550  D7EC               	goto	l3918
  3469  006552                     l3922:
  3470  006552  2A04               	incf	___ftpack@exp^0,f,c
  3471  006554  0E01               	movlw	1
  3472  006556  2601               	addwf	___ftpack@arg^0,f,c
  3473  006558  0E00               	movlw	0
  3474  00655A  2202               	addwfc	(___ftpack@arg+1)^0,f,c
  3475  00655C  0E00               	movlw	0
  3476  00655E  2203               	addwfc	(___ftpack@arg+2)^0,f,c
  3477  006560  90D8               	bcf	status,0,c
  3478  006562  3203               	rrcf	(___ftpack@arg+2)^0,f,c
  3479  006564  3202               	rrcf	(___ftpack@arg+1)^0,f,c
  3480  006566  3201               	rrcf	___ftpack@arg^0,f,c
  3481  006568                     l3926:
  3482  006568  0E00               	movlw	0
  3483  00656A  1401               	andwf	___ftpack@arg^0,w,c
  3484  00656C  6E06               	movwf	??___ftpack^0,c
  3485  00656E  0E00               	movlw	0
  3486  006570  1402               	andwf	(___ftpack@arg+1)^0,w,c
  3487  006572  6E07               	movwf	(??___ftpack+1)^0,c
  3488  006574  0EFF               	movlw	255
  3489  006576  1403               	andwf	(___ftpack@arg+2)^0,w,c
  3490  006578  6E08               	movwf	(??___ftpack+2)^0,c
  3491  00657A  5006               	movf	??___ftpack^0,w,c
  3492  00657C  1007               	iorwf	(??___ftpack+1)^0,w,c
  3493  00657E  1008               	iorwf	(??___ftpack+2)^0,w,c
  3494  006580  B4D8               	btfsc	status,2,c
  3495  006582  D006               	goto	l3930
  3496  006584  D7E6               	goto	l3922
  3497  006586                     l3928:
  3498  006586  0604               	decf	___ftpack@exp^0,f,c
  3499  006588  90D8               	bcf	status,0,c
  3500  00658A  3601               	rlcf	___ftpack@arg^0,f,c
  3501  00658C  3602               	rlcf	(___ftpack@arg+1)^0,f,c
  3502  00658E  3603               	rlcf	(___ftpack@arg+2)^0,f,c
  3503  006590                     l3930:
  3504  006590  BE02               	btfsc	(___ftpack@arg+1)^0,7,c
  3505  006592  D003               	goto	u3420
  3506  006594  0E02               	movlw	2
  3507  006596  6004               	cpfslt	___ftpack@exp^0,c
  3508  006598  D7F6               	goto	l3928
  3509  00659A                     u3420:
  3510  00659A  A004               	btfss	___ftpack@exp^0,0,c
  3511  00659C  9E02               	bcf	(___ftpack@arg+1)^0,7,c
  3512  00659E  90D8               	bcf	status,0,c
  3513  0065A0  3204               	rrcf	___ftpack@exp^0,f,c
  3514  0065A2  5004               	movf	___ftpack@exp^0,w,c
  3515  0065A4  1203               	iorwf	(___ftpack@arg+2)^0,f,c
  3516  0065A6  5005               	movf	___ftpack@sign^0,w,c
  3517  0065A8  A4D8               	btfss	status,2,c
  3518  0065AA  8E03               	bsf	(___ftpack@arg+2)^0,7,c
  3519  0065AC  C001  F001         	movff	___ftpack@arg,?___ftpack
  3520  0065B0  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  3521  0065B4  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  3522  0065B8  0012               	return		;funcret
  3523  0065BA                     __end_of___ftpack:
  3524                           	callstack 0
  3525                           
  3526 ;; *************** function _processJoystick_j2 *****************
  3527 ;; Defined at:
  3528 ;;		line 251 in file "../joystick.c"
  3529 ;; Parameters:    Size  Location     Type
  3530 ;;		None
  3531 ;; Auto vars:     Size  Location     Type
  3532 ;;		None
  3533 ;; Return value:  Size  Location     Type
  3534 ;;                  1    wreg      void 
  3535 ;; Registers used:
  3536 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3537 ;; Tracked objects:
  3538 ;;		On entry : 0/0
  3539 ;;		On exit  : 0/0
  3540 ;;		Unchanged: 0/0
  3541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  3542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  3543 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0
  3544 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0
  3545 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0
  3546 ;;Total ram usage:        3 bytes
  3547 ;; Hardware stack levels used: 1
  3548 ;; Hardware stack levels required when called: 1
  3549 ;; This function calls:
  3550 ;;		_USBTransferOnePacket
  3551 ;; This function is called by:
  3552 ;;		_main
  3553 ;; This function uses a non-reentrant model
  3554 ;;
  3555                           
  3556                           	psect	text11
  3557  006EE6                     __ptext11:
  3558                           	callstack 0
  3559  006EE6                     _processJoystick_j2:
  3560                           	callstack 29
  3561                           
  3562                           ;joystick.c: 254: if(!(lastTransmission_j2==0?0:((volatile BDT_ENTRY*)lastTransmission_j
      +                          2)->STAT.UOWN))
  3563                           
  3564                           ;incstack = 0
  3565  006EE6  0100               	movlb	0	; () banked
  3566  006EE8  51BB               	movf	_lastTransmission_j2& (0+255),w,b
  3567  006EEA  11BC               	iorwf	(_lastTransmission_j2+1)& (0+255),w,b
  3568  006EEC  B4D8               	btfsc	status,2,c
  3569  006EEE  D00E               	goto	l4870
  3570                           
  3571                           ; BSR set to: 0
  3572  006EF0  C0BB  FFD9         	movff	_lastTransmission_j2,fsr2l
  3573  006EF4  C0BC  FFDA         	movff	_lastTransmission_j2+1,fsr2h
  3574  006EF8  AEDF               	btfss	indf2,7,c
  3575  006EFA  D003               	goto	u5070
  3576  006EFC  6A08               	clrf	??_processJoystick_j2^0,c
  3577  006EFE  2A08               	incf	??_processJoystick_j2^0,f,c
  3578  006F00  D001               	goto	u5078
  3579  006F02                     u5070:
  3580  006F02  6A08               	clrf	??_processJoystick_j2^0,c
  3581  006F04                     u5078:
  3582  006F04  5008               	movf	??_processJoystick_j2^0,w,c
  3583  006F06  6E09               	movwf	_processJoystick_j2$3099^0,c
  3584  006F08  6A0A               	clrf	(_processJoystick_j2$3099+1)^0,c
  3585  006F0A  D004               	goto	l4872
  3586  006F0C                     l4870:
  3587                           
  3588                           ; BSR set to: 0
  3589  006F0C  0E00               	movlw	0
  3590  006F0E  6E0A               	movwf	(_processJoystick_j2$3099+1)^0,c
  3591  006F10  0E00               	movlw	0
  3592  006F12  6E09               	movwf	_processJoystick_j2$3099^0,c
  3593  006F14                     l4872:
  3594  006F14  5009               	movf	_processJoystick_j2$3099^0,w,c
  3595  006F16  100A               	iorwf	(_processJoystick_j2$3099+1)^0,w,c
  3596  006F18  A4D8               	btfss	status,2,c
  3597  006F1A  0012               	return	
  3598                           
  3599                           ;joystick.c: 255: {;joystick.c: 257: joystick_input_j2.members.buttons.x = 0;
  3600  006F1C  0106               	movlb	6	; () banked
  3601  006F1E  9356               	bcf	86,1,b
  3602                           
  3603                           ;joystick.c: 258: joystick_input_j2.members.buttons.square = 0;
  3604  006F20  9156               	bcf	86,0,b
  3605                           
  3606                           ;joystick.c: 259: joystick_input_j2.members.buttons.o = 0;
  3607  006F22  9556               	bcf	86,2,b
  3608                           
  3609                           ;joystick.c: 260: joystick_input_j2.members.buttons.triangle = 0;
  3610  006F24  9756               	bcf	86,3,b
  3611                           
  3612                           ;joystick.c: 261: joystick_input_j2.members.buttons.L1 = 0;
  3613  006F26  9956               	bcf	86,4,b
  3614                           
  3615                           ;joystick.c: 262: joystick_input_j2.members.buttons.R1 = 0;
  3616  006F28  9B56               	bcf	86,5,b
  3617                           
  3618                           ;joystick.c: 263: joystick_input_j2.members.buttons.L2 = 0;
  3619  006F2A  9D56               	bcf	86,6,b
  3620                           
  3621                           ;joystick.c: 264: joystick_input_j2.members.buttons.R2 = 0;
  3622  006F2C  9F56               	bcf	86,7,b
  3623                           
  3624                           ;joystick.c: 265: joystick_input_j2.members.buttons.select = 0;
  3625  006F2E  9157               	bcf	87,0,b
  3626                           
  3627                           ;joystick.c: 266: joystick_input_j2.members.buttons.start = 0;
  3628  006F30  9357               	bcf	87,1,b
  3629                           
  3630                           ;joystick.c: 267: joystick_input_j2.members.buttons.left_stick = 0;
  3631  006F32  9557               	bcf	87,2,b
  3632                           
  3633                           ;joystick.c: 268: joystick_input_j2.members.buttons.right_stick = 0;
  3634  006F34  9757               	bcf	87,3,b
  3635                           
  3636                           ;joystick.c: 269: joystick_input_j2.members.buttons.home = 0;
  3637  006F36  9957               	bcf	87,4,b
  3638                           
  3639                           ; BSR set to: 6
  3640                           ;joystick.c: 270: joystick_input_j2.members.hat_switch.hat_switch = 0x8;
  3641  006F38  5158               	movf	88,w,b
  3642  006F3A  0BF0               	andlw	-16
  3643  006F3C  0908               	iorlw	8
  3644  006F3E  6F58               	movwf	88,b
  3645                           
  3646                           ;joystick.c: 273: joystick_input_j2.members.analog_stick.X = 128;
  3647  006F40  0E80               	movlw	128
  3648  006F42  6F59               	movwf	89,b
  3649                           
  3650                           ;joystick.c: 274: joystick_input_j2.members.analog_stick.Y = 128;
  3651  006F44  0E80               	movlw	128
  3652  006F46  6F5A               	movwf	90,b
  3653                           
  3654                           ; BSR set to: 6
  3655                           ;joystick.c: 277: if (joystick[1].joystickSwitch[0].state == 1)
  3656  006F48  0100               	movlb	0	; () banked
  3657  006F4A  056F               	decf	(_joystick+15)& (0+255),w,b
  3658  006F4C  A4D8               	btfss	status,2,c
  3659  006F4E  D003               	goto	l4882
  3660                           
  3661                           ; BSR set to: 0
  3662                           ;joystick.c: 278: joystick_input_j2.members.analog_stick.Y = 0;
  3663  006F50  0E00               	movlw	0
  3664  006F52  0106               	movlb	6	; () banked
  3665  006F54  6F5A               	movwf	90,b
  3666  006F56                     l4882:
  3667                           
  3668                           ;joystick.c: 280: if (joystick[1].joystickSwitch[1].state == 1)
  3669  006F56  0100               	movlb	0	; () banked
  3670  006F58  0571               	decf	(_joystick+17)& (0+255),w,b
  3671  006F5A  A4D8               	btfss	status,2,c
  3672  006F5C  D002               	goto	l4886
  3673                           
  3674                           ; BSR set to: 0
  3675                           ;joystick.c: 281: joystick_input_j2.members.analog_stick.Y = 255;
  3676  006F5E  0106               	movlb	6	; () banked
  3677  006F60  695A               	setf	90,b
  3678  006F62                     l4886:
  3679                           
  3680                           ;joystick.c: 283: if (joystick[1].joystickSwitch[3].state == 1)
  3681  006F62  0100               	movlb	0	; () banked
  3682  006F64  0575               	decf	(_joystick+21)& (0+255),w,b
  3683  006F66  A4D8               	btfss	status,2,c
  3684  006F68  D002               	goto	l4890
  3685                           
  3686                           ; BSR set to: 0
  3687                           ;joystick.c: 284: joystick_input_j2.members.analog_stick.X = 255;
  3688  006F6A  0106               	movlb	6	; () banked
  3689  006F6C  6959               	setf	89,b
  3690  006F6E                     l4890:
  3691                           
  3692                           ;joystick.c: 286: if (joystick[1].joystickSwitch[2].state == 1)
  3693  006F6E  0100               	movlb	0	; () banked
  3694  006F70  0573               	decf	(_joystick+19)& (0+255),w,b
  3695  006F72  A4D8               	btfss	status,2,c
  3696  006F74  D003               	goto	l4894
  3697                           
  3698                           ; BSR set to: 0
  3699                           ;joystick.c: 287: joystick_input_j2.members.analog_stick.X = 0;
  3700  006F76  0E00               	movlw	0
  3701  006F78  0106               	movlb	6	; () banked
  3702  006F7A  6F59               	movwf	89,b
  3703  006F7C                     l4894:
  3704                           
  3705                           ;joystick.c: 289: if (joystick[1].joystickSwitch[4].state == 1)
  3706  006F7C  0100               	movlb	0	; () banked
  3707  006F7E  0577               	decf	(_joystick+23)& (0+255),w,b
  3708  006F80  A4D8               	btfss	status,2,c
  3709  006F82  D002               	goto	l4898
  3710                           
  3711                           ; BSR set to: 0
  3712                           ;joystick.c: 290: joystick_input_j2.members.buttons.square = 1;
  3713  006F84  0106               	movlb	6	; () banked
  3714  006F86  8156               	bsf	86,0,b
  3715  006F88                     l4898:
  3716                           
  3717                           ;joystick.c: 293: if (joystick[1].paddleConnected == TRUE)
  3718  006F88  0100               	movlb	0	; () banked
  3719  006F8A  0579               	decf	(_joystick+25)& (0+255),w,b
  3720  006F8C  A4D8               	btfss	status,2,c
  3721  006F8E  D00F               	goto	l4910
  3722                           
  3723                           ; BSR set to: 0
  3724                           ;joystick.c: 294: {;joystick.c: 296: joystick_input_j2.members.analog_stick.X = joystick
      +                          [1].paddleX;
  3725  006F90  C07A  F659         	movff	_joystick+26,1625
  3726                           
  3727                           ;joystick.c: 297: joystick_input_j2.members.analog_stick.Y = joystick[1].paddleY;
  3728  006F94  C07C  F65A         	movff	_joystick+28,1626
  3729                           
  3730                           ; BSR set to: 0
  3731                           ;joystick.c: 303: if (joystick[1].joystickSwitch[2].state == 1)
  3732  006F98  0573               	decf	(_joystick+19)& (0+255),w,b
  3733  006F9A  A4D8               	btfss	status,2,c
  3734  006F9C  D002               	goto	l4906
  3735                           
  3736                           ; BSR set to: 0
  3737                           ;joystick.c: 304: joystick_input_j2.members.buttons.square = 1;
  3738  006F9E  0106               	movlb	6	; () banked
  3739  006FA0  8156               	bsf	86,0,b
  3740  006FA2                     l4906:
  3741                           
  3742                           ;joystick.c: 305: if (joystick[1].joystickSwitch[3].state == 1)
  3743  006FA2  0100               	movlb	0	; () banked
  3744  006FA4  0575               	decf	(_joystick+21)& (0+255),w,b
  3745  006FA6  A4D8               	btfss	status,2,c
  3746  006FA8  D002               	goto	l4910
  3747                           
  3748                           ; BSR set to: 0
  3749                           ;joystick.c: 306: joystick_input_j2.members.buttons.x = 1;
  3750  006FAA  0106               	movlb	6	; () banked
  3751  006FAC  8356               	bsf	86,1,b
  3752  006FAE                     l4910:
  3753                           
  3754                           ;joystick.c: 307: };joystick.c: 310: lastTransmission_j2 = USBTransferOnePacket(2,1,(BYT
      +                          E*)&joystick_input_j2,sizeof(joystick_input_j2));
  3755  006FAE  0E01               	movlw	1
  3756  006FB0  6E01               	movwf	USBTransferOnePacket@dir^0,c
  3757  006FB2  0E56               	movlw	86
  3758  006FB4  6E02               	movwf	USBTransferOnePacket@data^0,c
  3759  006FB6  0E06               	movlw	6
  3760  006FB8  6E03               	movwf	(USBTransferOnePacket@data+1)^0,c
  3761  006FBA  0E07               	movlw	7
  3762  006FBC  6E04               	movwf	USBTransferOnePacket@len^0,c
  3763  006FBE  0E02               	movlw	2
  3764  006FC0  EC38  F032         	call	_USBTransferOnePacket
  3765  006FC4  C001  F0BB         	movff	?_USBTransferOnePacket,_lastTransmission_j2
  3766  006FC8  C002  F0BC         	movff	?_USBTransferOnePacket+1,_lastTransmission_j2+1
  3767  006FCC  0012               	return		;funcret
  3768  006FCE                     __end_of_processJoystick_j2:
  3769                           	callstack 0
  3770                           
  3771 ;; *************** function _processJoystick_j1 *****************
  3772 ;; Defined at:
  3773 ;;		line 185 in file "../joystick.c"
  3774 ;; Parameters:    Size  Location     Type
  3775 ;;		None
  3776 ;; Auto vars:     Size  Location     Type
  3777 ;;  result          2    0        int 
  3778 ;; Return value:  Size  Location     Type
  3779 ;;                  1    wreg      void 
  3780 ;; Registers used:
  3781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3782 ;; Tracked objects:
  3783 ;;		On entry : 0/0
  3784 ;;		On exit  : 0/0
  3785 ;;		Unchanged: 0/0
  3786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  3787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  3788 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0
  3789 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0
  3790 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0
  3791 ;;Total ram usage:        3 bytes
  3792 ;; Hardware stack levels used: 1
  3793 ;; Hardware stack levels required when called: 1
  3794 ;; This function calls:
  3795 ;;		_USBTransferOnePacket
  3796 ;; This function is called by:
  3797 ;;		_main
  3798 ;; This function uses a non-reentrant model
  3799 ;;
  3800                           
  3801                           	psect	text12
  3802  006DFE                     __ptext12:
  3803                           	callstack 0
  3804  006DFE                     _processJoystick_j1:
  3805                           	callstack 29
  3806                           
  3807                           ;joystick.c: 187: int result;;joystick.c: 190: if(!(lastTransmission_j1==0?0:((volatile 
      +                          BDT_ENTRY*)lastTransmission_j1)->STAT.UOWN))
  3808                           
  3809                           ;incstack = 0
  3810  006DFE  0100               	movlb	0	; () banked
  3811  006E00  51BD               	movf	_lastTransmission_j1& (0+255),w,b
  3812  006E02  11BE               	iorwf	(_lastTransmission_j1+1)& (0+255),w,b
  3813  006E04  B4D8               	btfsc	status,2,c
  3814  006E06  D00E               	goto	l4824
  3815                           
  3816                           ; BSR set to: 0
  3817  006E08  C0BD  FFD9         	movff	_lastTransmission_j1,fsr2l
  3818  006E0C  C0BE  FFDA         	movff	_lastTransmission_j1+1,fsr2h
  3819  006E10  AEDF               	btfss	indf2,7,c
  3820  006E12  D003               	goto	u4960
  3821  006E14  6A08               	clrf	??_processJoystick_j1^0,c
  3822  006E16  2A08               	incf	??_processJoystick_j1^0,f,c
  3823  006E18  D001               	goto	u4968
  3824  006E1A                     u4960:
  3825  006E1A  6A08               	clrf	??_processJoystick_j1^0,c
  3826  006E1C                     u4968:
  3827  006E1C  5008               	movf	??_processJoystick_j1^0,w,c
  3828  006E1E  6E09               	movwf	_processJoystick_j1$3039^0,c
  3829  006E20  6A0A               	clrf	(_processJoystick_j1$3039+1)^0,c
  3830  006E22  D004               	goto	l4826
  3831  006E24                     l4824:
  3832                           
  3833                           ; BSR set to: 0
  3834  006E24  0E00               	movlw	0
  3835  006E26  6E0A               	movwf	(_processJoystick_j1$3039+1)^0,c
  3836  006E28  0E00               	movlw	0
  3837  006E2A  6E09               	movwf	_processJoystick_j1$3039^0,c
  3838  006E2C                     l4826:
  3839  006E2C  5009               	movf	_processJoystick_j1$3039^0,w,c
  3840  006E2E  100A               	iorwf	(_processJoystick_j1$3039+1)^0,w,c
  3841  006E30  A4D8               	btfss	status,2,c
  3842  006E32  0012               	return	
  3843                           
  3844                           ;joystick.c: 191: {;joystick.c: 193: joystick_input_j1.members.buttons.x = 0;
  3845  006E34  0106               	movlb	6	; () banked
  3846  006E36  9313               	bcf	19,1,b
  3847                           
  3848                           ;joystick.c: 194: joystick_input_j1.members.buttons.square = 0;
  3849  006E38  9113               	bcf	19,0,b
  3850                           
  3851                           ;joystick.c: 195: joystick_input_j1.members.buttons.o = 0;
  3852  006E3A  9513               	bcf	19,2,b
  3853                           
  3854                           ;joystick.c: 196: joystick_input_j1.members.buttons.triangle = 0;
  3855  006E3C  9713               	bcf	19,3,b
  3856                           
  3857                           ;joystick.c: 197: joystick_input_j1.members.buttons.L1 = 0;
  3858  006E3E  9913               	bcf	19,4,b
  3859                           
  3860                           ;joystick.c: 198: joystick_input_j1.members.buttons.R1 = 0;
  3861  006E40  9B13               	bcf	19,5,b
  3862                           
  3863                           ;joystick.c: 199: joystick_input_j1.members.buttons.L2 = 0;
  3864  006E42  9D13               	bcf	19,6,b
  3865                           
  3866                           ;joystick.c: 200: joystick_input_j1.members.buttons.R2 = 0;
  3867  006E44  9F13               	bcf	19,7,b
  3868                           
  3869                           ;joystick.c: 201: joystick_input_j1.members.buttons.select = 0;
  3870  006E46  9114               	bcf	20,0,b
  3871                           
  3872                           ;joystick.c: 202: joystick_input_j1.members.buttons.start = 0;
  3873  006E48  9314               	bcf	20,1,b
  3874                           
  3875                           ;joystick.c: 203: joystick_input_j1.members.buttons.left_stick = 0;
  3876  006E4A  9514               	bcf	20,2,b
  3877                           
  3878                           ;joystick.c: 204: joystick_input_j1.members.buttons.right_stick = 0;
  3879  006E4C  9714               	bcf	20,3,b
  3880                           
  3881                           ;joystick.c: 205: joystick_input_j1.members.buttons.home = 0;
  3882  006E4E  9914               	bcf	20,4,b
  3883                           
  3884                           ; BSR set to: 6
  3885                           ;joystick.c: 206: joystick_input_j1.members.hat_switch.hat_switch = 0x8;
  3886  006E50  5115               	movf	21,w,b
  3887  006E52  0BF0               	andlw	-16
  3888  006E54  0908               	iorlw	8
  3889  006E56  6F15               	movwf	21,b
  3890                           
  3891                           ;joystick.c: 209: joystick_input_j1.members.analog_stick.X = 128;
  3892  006E58  0E80               	movlw	128
  3893  006E5A  6F16               	movwf	22,b
  3894                           
  3895                           ;joystick.c: 210: joystick_input_j1.members.analog_stick.Y = 128;
  3896  006E5C  0E80               	movlw	128
  3897  006E5E  6F17               	movwf	23,b
  3898                           
  3899                           ; BSR set to: 6
  3900                           ;joystick.c: 213: if (joystick[0].joystickSwitch[0].state == 1)
  3901  006E60  0100               	movlb	0	; () banked
  3902  006E62  0560               	decf	_joystick& (0+255),w,b
  3903  006E64  A4D8               	btfss	status,2,c
  3904  006E66  D003               	goto	l4836
  3905                           
  3906                           ; BSR set to: 0
  3907                           ;joystick.c: 214: joystick_input_j1.members.analog_stick.Y = 0;
  3908  006E68  0E00               	movlw	0
  3909  006E6A  0106               	movlb	6	; () banked
  3910  006E6C  6F17               	movwf	23,b
  3911  006E6E                     l4836:
  3912                           
  3913                           ;joystick.c: 216: if (joystick[0].joystickSwitch[1].state == 1)
  3914  006E6E  0100               	movlb	0	; () banked
  3915  006E70  0562               	decf	(_joystick+2)& (0+255),w,b
  3916  006E72  A4D8               	btfss	status,2,c
  3917  006E74  D002               	goto	l4840
  3918                           
  3919                           ; BSR set to: 0
  3920                           ;joystick.c: 217: joystick_input_j1.members.analog_stick.Y = 255;
  3921  006E76  0106               	movlb	6	; () banked
  3922  006E78  6917               	setf	23,b
  3923  006E7A                     l4840:
  3924                           
  3925                           ;joystick.c: 219: if (joystick[0].joystickSwitch[3].state == 1)
  3926  006E7A  0100               	movlb	0	; () banked
  3927  006E7C  0566               	decf	(_joystick+6)& (0+255),w,b
  3928  006E7E  A4D8               	btfss	status,2,c
  3929  006E80  D002               	goto	l4844
  3930                           
  3931                           ; BSR set to: 0
  3932                           ;joystick.c: 220: joystick_input_j1.members.analog_stick.X = 255;
  3933  006E82  0106               	movlb	6	; () banked
  3934  006E84  6916               	setf	22,b
  3935  006E86                     l4844:
  3936                           
  3937                           ;joystick.c: 222: if (joystick[0].joystickSwitch[2].state == 1)
  3938  006E86  0100               	movlb	0	; () banked
  3939  006E88  0564               	decf	(_joystick+4)& (0+255),w,b
  3940  006E8A  A4D8               	btfss	status,2,c
  3941  006E8C  D003               	goto	l4848
  3942                           
  3943                           ; BSR set to: 0
  3944                           ;joystick.c: 223: joystick_input_j1.members.analog_stick.X = 0;
  3945  006E8E  0E00               	movlw	0
  3946  006E90  0106               	movlb	6	; () banked
  3947  006E92  6F16               	movwf	22,b
  3948  006E94                     l4848:
  3949                           
  3950                           ;joystick.c: 225: if (joystick[0].joystickSwitch[4].state == 1)
  3951  006E94  0100               	movlb	0	; () banked
  3952  006E96  0568               	decf	(_joystick+8)& (0+255),w,b
  3953  006E98  A4D8               	btfss	status,2,c
  3954  006E9A  D002               	goto	l4852
  3955                           
  3956                           ; BSR set to: 0
  3957                           ;joystick.c: 226: joystick_input_j1.members.buttons.square = 1;
  3958  006E9C  0106               	movlb	6	; () banked
  3959  006E9E  8113               	bsf	19,0,b
  3960  006EA0                     l4852:
  3961                           
  3962                           ;joystick.c: 229: if (joystick[0].paddleConnected == TRUE)
  3963  006EA0  0100               	movlb	0	; () banked
  3964  006EA2  056A               	decf	(_joystick+10)& (0+255),w,b
  3965  006EA4  A4D8               	btfss	status,2,c
  3966  006EA6  D00F               	goto	l4864
  3967                           
  3968                           ; BSR set to: 0
  3969                           ;joystick.c: 230: {;joystick.c: 232: joystick_input_j1.members.analog_stick.X = joystick
      +                          [0].paddleX;
  3970  006EA8  C06B  F616         	movff	_joystick+11,1558
  3971                           
  3972                           ;joystick.c: 233: joystick_input_j1.members.analog_stick.Y = joystick[0].paddleY;
  3973  006EAC  C06D  F617         	movff	_joystick+13,1559
  3974                           
  3975                           ; BSR set to: 0
  3976                           ;joystick.c: 239: if (joystick[0].joystickSwitch[2].state == 1)
  3977  006EB0  0564               	decf	(_joystick+4)& (0+255),w,b
  3978  006EB2  A4D8               	btfss	status,2,c
  3979  006EB4  D002               	goto	l4860
  3980                           
  3981                           ; BSR set to: 0
  3982                           ;joystick.c: 240: joystick_input_j1.members.buttons.square = 1;
  3983  006EB6  0106               	movlb	6	; () banked
  3984  006EB8  8113               	bsf	19,0,b
  3985  006EBA                     l4860:
  3986                           
  3987                           ;joystick.c: 241: if (joystick[0].joystickSwitch[3].state == 1)
  3988  006EBA  0100               	movlb	0	; () banked
  3989  006EBC  0566               	decf	(_joystick+6)& (0+255),w,b
  3990  006EBE  A4D8               	btfss	status,2,c
  3991  006EC0  D002               	goto	l4864
  3992                           
  3993                           ; BSR set to: 0
  3994                           ;joystick.c: 242: joystick_input_j1.members.buttons.x = 1;
  3995  006EC2  0106               	movlb	6	; () banked
  3996  006EC4  8313               	bsf	19,1,b
  3997  006EC6                     l4864:
  3998                           
  3999                           ;joystick.c: 243: };joystick.c: 246: lastTransmission_j1 = USBTransferOnePacket(1,1,(BYT
      +                          E*)&joystick_input_j1,sizeof(joystick_input_j1));
  4000  006EC6  0E01               	movlw	1
  4001  006EC8  6E01               	movwf	USBTransferOnePacket@dir^0,c
  4002  006ECA  0E13               	movlw	19
  4003  006ECC  6E02               	movwf	USBTransferOnePacket@data^0,c
  4004  006ECE  0E06               	movlw	6
  4005  006ED0  6E03               	movwf	(USBTransferOnePacket@data+1)^0,c
  4006  006ED2  0E07               	movlw	7
  4007  006ED4  6E04               	movwf	USBTransferOnePacket@len^0,c
  4008  006ED6  0E01               	movlw	1
  4009  006ED8  EC38  F032         	call	_USBTransferOnePacket
  4010  006EDC  C001  F0BD         	movff	?_USBTransferOnePacket,_lastTransmission_j1
  4011  006EE0  C002  F0BE         	movff	?_USBTransferOnePacket+1,_lastTransmission_j1+1
  4012  006EE4  0012               	return		;funcret
  4013  006EE6                     __end_of_processJoystick_j1:
  4014                           	callstack 0
  4015                           
  4016 ;; *************** function _initialise *****************
  4017 ;; Defined at:
  4018 ;;		line 61 in file "../main.c"
  4019 ;; Parameters:    Size  Location     Type
  4020 ;;		None
  4021 ;; Auto vars:     Size  Location     Type
  4022 ;;		None
  4023 ;; Return value:  Size  Location     Type
  4024 ;;                  1    wreg      void 
  4025 ;; Registers used:
  4026 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4027 ;; Tracked objects:
  4028 ;;		On entry : 0/0
  4029 ;;		On exit  : 0/0
  4030 ;;		Unchanged: 0/0
  4031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  4032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  4033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0
  4034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  4035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0
  4036 ;;Total ram usage:        0 bytes
  4037 ;; Hardware stack levels used: 1
  4038 ;; Hardware stack levels required when called: 1
  4039 ;; This function calls:
  4040 ;;		_initialiseJoysticks
  4041 ;; This function is called by:
  4042 ;;		_main
  4043 ;; This function uses a non-reentrant model
  4044 ;;
  4045                           
  4046                           	psect	text13
  4047  005D8C                     __ptext13:
  4048                           	callstack 0
  4049  005D8C                     _initialise:
  4050                           	callstack 29
  4051                           
  4052                           ;main.c: 63: initialiseJoysticks();
  4053                           
  4054                           ;incstack = 0
  4055  005D8C  ECDD  F032         	call	_initialiseJoysticks	;wreg free
  4056  005D90  0012               	return		;funcret
  4057  005D92                     __end_of_initialise:
  4058                           	callstack 0
  4059                           
  4060 ;; *************** function _initialiseJoysticks *****************
  4061 ;; Defined at:
  4062 ;;		line 41 in file "../joystick.c"
  4063 ;; Parameters:    Size  Location     Type
  4064 ;;		None
  4065 ;; Auto vars:     Size  Location     Type
  4066 ;;  loop            2    0[COMRAM] int 
  4067 ;; Return value:  Size  Location     Type
  4068 ;;                  1    wreg      void 
  4069 ;; Registers used:
  4070 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4071 ;; Tracked objects:
  4072 ;;		On entry : 0/0
  4073 ;;		On exit  : 0/0
  4074 ;;		Unchanged: 0/0
  4075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  4076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  4077 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0
  4078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  4079 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0
  4080 ;;Total ram usage:        2 bytes
  4081 ;; Hardware stack levels used: 1
  4082 ;; This function calls:
  4083 ;;		Nothing
  4084 ;; This function is called by:
  4085 ;;		_initialise
  4086 ;; This function uses a non-reentrant model
  4087 ;;
  4088                           
  4089                           	psect	text14
  4090  0065BA                     __ptext14:
  4091                           	callstack 0
  4092  0065BA                     _initialiseJoysticks:
  4093                           	callstack 29
  4094                           
  4095                           ;joystick.c: 43: int loop;;joystick.c: 46: for (loop = 0; loop < 5; loop++)
  4096                           
  4097                           ;incstack = 0
  4098  0065BA  0E00               	movlw	0
  4099  0065BC  6E02               	movwf	(initialiseJoysticks@loop+1)^0,c
  4100  0065BE  0E00               	movlw	0
  4101  0065C0  6E01               	movwf	initialiseJoysticks@loop^0,c
  4102  0065C2                     l4512:
  4103                           
  4104                           ;joystick.c: 47: {;joystick.c: 48: joystick[0].joystickSwitch[loop].state = 0;
  4105  0065C2  90D8               	bcf	status,0,c
  4106  0065C4  3401               	rlcf	initialiseJoysticks@loop^0,w,c
  4107  0065C6  6ED9               	movwf	fsr2l,c
  4108  0065C8  3402               	rlcf	(initialiseJoysticks@loop+1)^0,w,c
  4109  0065CA  6EDA               	movwf	fsr2h,c
  4110  0065CC  0E60               	movlw	low _joystick
  4111  0065CE  26D9               	addwf	fsr2l,f,c
  4112  0065D0  0E00               	movlw	high _joystick
  4113  0065D2  22DA               	addwfc	fsr2h,f,c
  4114  0065D4  0E00               	movlw	0
  4115  0065D6  6EDF               	movwf	indf2,c
  4116                           
  4117                           ;joystick.c: 49: joystick[0].joystickSwitch[loop].debounceCount = 0;
  4118  0065D8  90D8               	bcf	status,0,c
  4119  0065DA  3401               	rlcf	initialiseJoysticks@loop^0,w,c
  4120  0065DC  6ED9               	movwf	fsr2l,c
  4121  0065DE  3402               	rlcf	(initialiseJoysticks@loop+1)^0,w,c
  4122  0065E0  6EDA               	movwf	fsr2h,c
  4123  0065E2  0E61               	movlw	low (_joystick+1)
  4124  0065E4  26D9               	addwf	fsr2l,f,c
  4125  0065E6  0E00               	movlw	high (_joystick+1)
  4126  0065E8  22DA               	addwfc	fsr2h,f,c
  4127  0065EA  0E00               	movlw	0
  4128  0065EC  6EDF               	movwf	indf2,c
  4129                           
  4130                           ;joystick.c: 50: joystick[0].paddleConnected = FALSE;
  4131  0065EE  0E00               	movlw	0
  4132  0065F0  0100               	movlb	0	; () banked
  4133  0065F2  6F6A               	movwf	(_joystick+10)& (0+255),b
  4134                           
  4135                           ; BSR set to: 0
  4136                           ;joystick.c: 51: joystick[0].paddleX = 0;
  4137  0065F4  0E00               	movlw	0
  4138  0065F6  6F6C               	movwf	(_joystick+12)& (0+255),b
  4139  0065F8  0E00               	movlw	0
  4140  0065FA  6F6B               	movwf	(_joystick+11)& (0+255),b
  4141                           
  4142                           ; BSR set to: 0
  4143                           ;joystick.c: 52: joystick[0].paddleY = 0;
  4144  0065FC  0E00               	movlw	0
  4145  0065FE  6F6E               	movwf	(_joystick+14)& (0+255),b
  4146  006600  0E00               	movlw	0
  4147  006602  6F6D               	movwf	(_joystick+13)& (0+255),b
  4148                           
  4149                           ; BSR set to: 0
  4150                           ;joystick.c: 54: joystick[1].joystickSwitch[loop].state = 0;
  4151  006604  90D8               	bcf	status,0,c
  4152  006606  3401               	rlcf	initialiseJoysticks@loop^0,w,c
  4153  006608  6ED9               	movwf	fsr2l,c
  4154  00660A  3402               	rlcf	(initialiseJoysticks@loop+1)^0,w,c
  4155  00660C  6EDA               	movwf	fsr2h,c
  4156  00660E  0E6F               	movlw	low (_joystick+15)
  4157  006610  26D9               	addwf	fsr2l,f,c
  4158  006612  0E00               	movlw	high (_joystick+15)
  4159  006614  22DA               	addwfc	fsr2h,f,c
  4160  006616  0E00               	movlw	0
  4161  006618  6EDF               	movwf	indf2,c
  4162                           
  4163                           ; BSR set to: 0
  4164                           ;joystick.c: 55: joystick[1].joystickSwitch[loop].debounceCount = 0;
  4165  00661A  90D8               	bcf	status,0,c
  4166  00661C  3401               	rlcf	initialiseJoysticks@loop^0,w,c
  4167  00661E  6ED9               	movwf	fsr2l,c
  4168  006620  3402               	rlcf	(initialiseJoysticks@loop+1)^0,w,c
  4169  006622  6EDA               	movwf	fsr2h,c
  4170  006624  0E70               	movlw	low (_joystick+16)
  4171  006626  26D9               	addwf	fsr2l,f,c
  4172  006628  0E00               	movlw	high (_joystick+16)
  4173  00662A  22DA               	addwfc	fsr2h,f,c
  4174  00662C  0E00               	movlw	0
  4175  00662E  6EDF               	movwf	indf2,c
  4176                           
  4177                           ; BSR set to: 0
  4178                           ;joystick.c: 56: joystick[1].paddleConnected = FALSE;
  4179  006630  0E00               	movlw	0
  4180  006632  6F79               	movwf	(_joystick+25)& (0+255),b
  4181                           
  4182                           ; BSR set to: 0
  4183                           ;joystick.c: 57: joystick[1].paddleX = 0;
  4184  006634  0E00               	movlw	0
  4185  006636  6F7B               	movwf	(_joystick+27)& (0+255),b
  4186  006638  0E00               	movlw	0
  4187  00663A  6F7A               	movwf	(_joystick+26)& (0+255),b
  4188                           
  4189                           ; BSR set to: 0
  4190                           ;joystick.c: 58: joystick[1].paddleY = 0;
  4191  00663C  0E00               	movlw	0
  4192  00663E  6F7D               	movwf	(_joystick+29)& (0+255),b
  4193  006640  0E00               	movlw	0
  4194  006642  6F7C               	movwf	(_joystick+28)& (0+255),b
  4195                           
  4196                           ; BSR set to: 0
  4197  006644  4A01               	infsnz	initialiseJoysticks@loop^0,f,c
  4198  006646  2A02               	incf	(initialiseJoysticks@loop+1)^0,f,c
  4199                           
  4200                           ; BSR set to: 0
  4201  006648  BE02               	btfsc	(initialiseJoysticks@loop+1)^0,7,c
  4202  00664A  D7BB               	goto	l4512
  4203  00664C  5002               	movf	(initialiseJoysticks@loop+1)^0,w,c
  4204  00664E  E104               	bnz	u4200
  4205  006650  0E05               	movlw	5
  4206  006652  5C01               	subwf	initialiseJoysticks@loop^0,w,c
  4207  006654  A0D8               	btfss	status,0,c
  4208  006656  D7B5               	goto	l4512
  4209  006658                     u4200:
  4210                           
  4211                           ; BSR set to: 0
  4212                           ;joystick.c: 59: };joystick.c: 62: lastTransmission_j1 = 0;
  4213  006658  0E00               	movlw	0
  4214  00665A  6FBD               	movwf	_lastTransmission_j1& (0+255),b
  4215  00665C  0E00               	movlw	0
  4216  00665E  6FBE               	movwf	(_lastTransmission_j1+1)& (0+255),b
  4217                           
  4218                           ;joystick.c: 63: lastTransmission_j2 = 0;
  4219  006660  0E00               	movlw	0
  4220  006662  6FBB               	movwf	_lastTransmission_j2& (0+255),b
  4221  006664  0E00               	movlw	0
  4222  006666  6FBC               	movwf	(_lastTransmission_j2+1)& (0+255),b
  4223                           
  4224                           ; BSR set to: 0
  4225  006668  0012               	return		;funcret
  4226  00666A                     __end_of_initialiseJoysticks:
  4227                           	callstack 0
  4228                           
  4229 ;; *************** function _USBDeviceTasks *****************
  4230 ;; Defined at:
  4231 ;;		line 781 in file "../USB Stack/usb_device.c"
  4232 ;; Parameters:    Size  Location     Type
  4233 ;;		None
  4234 ;; Auto vars:     Size  Location     Type
  4235 ;;  i               1   23[COMRAM] unsigned char 
  4236 ;; Return value:  Size  Location     Type
  4237 ;;                  1    wreg      void 
  4238 ;; Registers used:
  4239 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4240 ;; Tracked objects:
  4241 ;;		On entry : 0/0
  4242 ;;		On exit  : 0/0
  4243 ;;		Unchanged: 0/0
  4244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  4245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  4246 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0
  4247 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0
  4248 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0
  4249 ;;Total ram usage:        2 bytes
  4250 ;; Hardware stack levels used: 1
  4251 ;; Hardware stack levels required when called: 8
  4252 ;; This function calls:
  4253 ;;		_USBCtrlEPService
  4254 ;;		_USBDeviceInit
  4255 ;;		_USBStallHandler
  4256 ;;		_USBSuspend
  4257 ;;		_USBWakeFromSuspend
  4258 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4259 ;; This function is called by:
  4260 ;;		_main
  4261 ;; This function uses a non-reentrant model
  4262 ;;
  4263                           
  4264                           	psect	text15
  4265  0072BC                     __ptext15:
  4266                           	callstack 0
  4267  0072BC                     _USBDeviceTasks:
  4268                           	callstack 22
  4269                           
  4270                           ;usb_device.c: 849: };usb_device.c: 871: if(USBDeviceState == DETACHED_STATE)
  4271                           
  4272                           ;usb_device.c: 784: BYTE i;;usb_device.c: 810: if (1 != 1)
  4273                           
  4274                           ; BSR set to: 0
  4275                           ;incstack = 0
  4276  0072BC  505A               	movf	_USBDeviceState^0,w,c
  4277  0072BE  A4D8               	btfss	status,2,c
  4278  0072C0  D010               	goto	l4580
  4279                           
  4280                           ;usb_device.c: 872: {;usb_device.c: 874: UCON = 0;
  4281  0072C2  0E00               	movlw	0
  4282  0072C4  6E6D               	movwf	109,c	;volatile
  4283                           
  4284                           ;usb_device.c: 877: UIE = 0;
  4285  0072C6  0E00               	movlw	0
  4286  0072C8  6E69               	movwf	105,c	;volatile
  4287                           
  4288                           ;usb_device.c: 881: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  4289  0072CA  0E16               	movlw	22
  4290  0072CC  6E6F               	movwf	111,c	;volatile
  4291  0072CE  0E9F               	movlw	159
  4292  0072D0  6E6B               	movwf	107,c	;volatile
  4293  0072D2  0E7B               	movlw	123
  4294  0072D4  6E69               	movwf	105,c	;volatile
  4295                           
  4296                           ;usb_device.c: 884: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  4297  0072D6  D001               	goto	l242
  4298  0072D8                     l243:
  4299  0072D8  866D               	bsf	109,3,c	;volatile
  4300  0072DA                     l242:
  4301  0072DA  A66D               	btfss	109,3,c	;volatile
  4302  0072DC  D7FD               	goto	l243
  4303                           
  4304                           ;usb_device.c: 887: USBDeviceState = ATTACHED_STATE;
  4305  0072DE  0E01               	movlw	1
  4306  0072E0  6E5A               	movwf	_USBDeviceState^0,c
  4307  0072E2                     l4580:
  4308                           
  4309                           ;usb_device.c: 892: };usb_device.c: 895: if(USBDeviceState == ATTACHED_STATE)
  4310  0072E2  045A               	decf	_USBDeviceState^0,w,c
  4311  0072E4  B4D8               	btfsc	status,2,c
  4312                           
  4313                           ;usb_device.c: 896: {;usb_device.c: 906: if(!SE0)
  4314  0072E6  BA6D               	btfsc	3949,5,c	;volatile
  4315  0072E8  D008               	goto	l4590
  4316                           
  4317                           ;usb_device.c: 907: {;usb_device.c: 908: UIR = 0;;
  4318  0072EA  0E00               	movlw	0
  4319  0072EC  6E68               	movwf	104,c	;volatile
  4320                           
  4321                           ;usb_device.c: 910: UIE=0;
  4322  0072EE  0E00               	movlw	0
  4323  0072F0  6E69               	movwf	105,c	;volatile
  4324                           
  4325                           ;usb_device.c: 912: UIEbits.URSTIE = 1;
  4326  0072F2  8069               	bsf	105,0,c	;volatile
  4327                           
  4328                           ;usb_device.c: 913: UIEbits.IDLEIE = 1;
  4329  0072F4  8869               	bsf	105,4,c	;volatile
  4330                           
  4331                           ;usb_device.c: 914: USBDeviceState = POWERED_STATE;
  4332  0072F6  0E02               	movlw	2
  4333  0072F8  6E5A               	movwf	_USBDeviceState^0,c
  4334  0072FA                     l4590:
  4335                           
  4336                           ;usb_device.c: 915: };usb_device.c: 916: };usb_device.c: 932: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
  4337  0072FA  B468               	btfsc	104,2,c	;volatile
  4338  0072FC  A469               	btfss	105,2,c	;volatile
  4339  0072FE  D003               	goto	l4598
  4340                           
  4341                           ;usb_device.c: 933: {;usb_device.c: 934: (UIR &= 0xFB);
  4342  007300  9468               	bcf	104,2,c	;volatile
  4343                           
  4344                           ;usb_device.c: 938: USBWakeFromSuspend();
  4345  007302  ECDB  F02E         	call	_USBWakeFromSuspend	;wreg free
  4346  007306                     l4598:
  4347                           
  4348                           ;usb_device.c: 940: };usb_device.c: 945: if(SUSPND==1)
  4349  007306  A26D               	btfss	3949,1,c	;volatile
  4350  007308  D002               	goto	l248
  4351                           
  4352                           ;usb_device.c: 946: {;usb_device.c: 947: PIR2bits.USBIF = 0;;
  4353  00730A  9AA1               	bcf	161,5,c	;volatile
  4354                           
  4355                           ;usb_device.c: 948: return;
  4356  00730C  0012               	return	
  4357  00730E                     l248:
  4358                           
  4359                           ;usb_device.c: 949: };usb_device.c: 961: if(UIRbits.URSTIF && UIEbits.URSTIE)
  4360  00730E  B068               	btfsc	104,0,c	;volatile
  4361  007310  A069               	btfss	105,0,c	;volatile
  4362  007312  D010               	goto	l4618
  4363                           
  4364                           ;usb_device.c: 962: {;usb_device.c: 963: USBDeviceInit();
  4365  007314  ECA7  F031         	call	_USBDeviceInit	;wreg free
  4366                           
  4367                           ;usb_device.c: 964: USBDeviceState = DEFAULT_STATE;
  4368  007318  0E04               	movlw	4
  4369  00731A  6E5A               	movwf	_USBDeviceState^0,c
  4370                           
  4371                           ;usb_device.c: 976: BDT[0].ADR = (BYTE*)&SetupPkt;
  4372  00731C  0E00               	movlw	0
  4373  00731E  0104               	movlb	4	; () banked
  4374  007320  6F02               	movwf	2,b	;volatile
  4375  007322  0E05               	movlw	5
  4376  007324  6F03               	movwf	3,b	;volatile
  4377                           
  4378                           ; BSR set to: 4
  4379                           ;usb_device.c: 977: BDT[0].CNT = 8;
  4380  007326  0E08               	movlw	8
  4381  007328  6F01               	movwf	1,b	;volatile
  4382                           
  4383                           ; BSR set to: 4
  4384                           ;usb_device.c: 978: BDT[0].STAT.Val &= ~0xFF;
  4385  00732A  0E00               	movlw	0
  4386  00732C  6F00               	movwf	0,b	;volatile
  4387                           
  4388                           ; BSR set to: 4
  4389                           ;usb_device.c: 979: BDT[0].STAT.Val |= 0x80|0x00|0x08|0x04;
  4390  00732E  0E8C               	movlw	140
  4391  007330  1300               	iorwf	0,f,b	;volatile
  4392                           
  4393                           ; BSR set to: 4
  4394                           ;usb_device.c: 989: (UIR &= 0xFE);
  4395  007332  9068               	bcf	104,0,c	;volatile
  4396  007334                     l4618:
  4397                           
  4398                           ;usb_device.c: 990: };usb_device.c: 995: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  4399  007334  B868               	btfsc	104,4,c	;volatile
  4400  007336  A869               	btfss	105,4,c	;volatile
  4401  007338  D003               	goto	l4626
  4402                           
  4403                           ;usb_device.c: 996: {;usb_device.c: 1001: USBSuspend();
  4404  00733A  ECC9  F02E         	call	_USBSuspend	;wreg free
  4405                           
  4406                           ;usb_device.c: 1004: (UIR &= 0xEF);
  4407  00733E  9868               	bcf	104,4,c	;volatile
  4408  007340                     l4626:
  4409                           
  4410                           ;usb_device.c: 1005: };usb_device.c: 1007: if(UIRbits.SOFIF && UIEbits.SOFIE)
  4411  007340  BC68               	btfsc	104,6,c	;volatile
  4412  007342  AC69               	btfss	105,6,c	;volatile
  4413  007344  D00F               	goto	l4634
  4414                           
  4415                           ;usb_device.c: 1008: {;usb_device.c: 1009: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1
      +                          );
  4416  007346  0E00               	movlw	0
  4417  007348  6E0D               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
  4418  00734A  0E73               	movlw	115
  4419  00734C  6E0C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
  4420  00734E  0E00               	movlw	0
  4421  007350  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^0,c
  4422  007352  0E00               	movlw	0
  4423  007354  6E0F               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^0,c
  4424  007356  0E00               	movlw	0
  4425  007358  6E11               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
  4426  00735A  0E01               	movlw	1
  4427  00735C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
  4428  00735E  ECDC  F030         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  4429                           
  4430                           ;usb_device.c: 1010: (UIR &= 0xBF);
  4431  007362  9C68               	bcf	104,6,c	;volatile
  4432  007364                     l4634:
  4433                           
  4434                           ;usb_device.c: 1011: };usb_device.c: 1013: if(UIRbits.STALLIF && UIEbits.STALLIE)
  4435  007364  BA68               	btfsc	104,5,c	;volatile
  4436  007366  AA69               	btfss	105,5,c	;volatile
  4437  007368  D002               	goto	l4640
  4438                           
  4439                           ;usb_device.c: 1014: {;usb_device.c: 1015: USBStallHandler();
  4440  00736A  EC35  F02F         	call	_USBStallHandler	;wreg free
  4441  00736E                     l4640:
  4442                           
  4443                           ;usb_device.c: 1016: };usb_device.c: 1018: if(UIRbits.UERRIF && UIEbits.UERRIE)
  4444  00736E  B268               	btfsc	104,1,c	;volatile
  4445  007370  A269               	btfss	105,1,c	;volatile
  4446  007372  D00F               	goto	l4648
  4447                           
  4448                           ;usb_device.c: 1019: {;usb_device.c: 1020: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERR
      +                          OR,0,1);
  4449  007374  0E7F               	movlw	127
  4450  007376  6E0D               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
  4451  007378  680C               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
  4452  00737A  0E00               	movlw	0
  4453  00737C  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^0,c
  4454  00737E  0E00               	movlw	0
  4455  007380  6E0F               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^0,c
  4456  007382  0E00               	movlw	0
  4457  007384  6E11               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
  4458  007386  0E01               	movlw	1
  4459  007388  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
  4460  00738A  ECDC  F030         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  4461                           
  4462                           ;usb_device.c: 1021: UEIR = 0;;
  4463  00738E  0E00               	movlw	0
  4464  007390  6E6A               	movwf	106,c	;volatile
  4465  007392                     l4648:
  4466                           
  4467                           ;usb_device.c: 1022: };usb_device.c: 1029: if(USBDeviceState < DEFAULT_STATE)
  4468  007392  0E04               	movlw	4
  4469  007394  605A               	cpfslt	_USBDeviceState^0,c
  4470  007396  D002               	goto	l254
  4471                           
  4472                           ;usb_device.c: 1030: {;usb_device.c: 1031: PIR2bits.USBIF = 0;;
  4473  007398  9AA1               	bcf	161,5,c	;volatile
  4474                           
  4475                           ;usb_device.c: 1032: return;
  4476  00739A  0012               	return	
  4477  00739C                     l254:
  4478                           
  4479                           ;usb_device.c: 1033: };usb_device.c: 1038: if(UIEbits.TRNIE)
  4480  00739C  A669               	btfss	105,3,c	;volatile
  4481  00739E  D022               	goto	u4450
  4482                           
  4483                           ;usb_device.c: 1039: {;usb_device.c: 1040: for(i = 0; i < 4; i++)
  4484  0073A0  0E00               	movlw	0
  4485  0073A2  6E18               	movwf	USBDeviceTasks@i^0,c
  4486  0073A4                     l256:
  4487                           
  4488                           ;usb_device.c: 1041: {;usb_device.c: 1042: if(UIRbits.TRNIF)
  4489  0073A4  A668               	btfss	104,3,c	;volatile
  4490  0073A6  D01E               	goto	u4450
  4491                           
  4492                           ;usb_device.c: 1043: {;usb_device.c: 1044: USTATcopy = USTAT;
  4493  0073A8  CF6C F05B          	movff	3948,_USTATcopy	;volatile
  4494                           
  4495                           ;usb_device.c: 1046: (UIR &= 0xF7);
  4496  0073AC  9668               	bcf	104,3,c	;volatile
  4497                           
  4498                           ;usb_device.c: 1053: if((USTATcopy & 0b01111000) == 0)
  4499  0073AE  C05B  F017         	movff	_USTATcopy,??_USBDeviceTasks
  4500  0073B2  0E78               	movlw	120
  4501  0073B4  1617               	andwf	??_USBDeviceTasks^0,f,c
  4502  0073B6  A4D8               	btfss	status,2,c
  4503  0073B8  D003               	goto	l4666
  4504                           
  4505                           ;usb_device.c: 1054: {;usb_device.c: 1055: USBCtrlEPService();
  4506  0073BA  EC35  F033         	call	_USBCtrlEPService	;wreg free
  4507                           
  4508                           ;usb_device.c: 1056: }
  4509  0073BE  D00E               	goto	l4668
  4510  0073C0                     l4666:
  4511                           
  4512                           ;usb_device.c: 1057: else;usb_device.c: 1058: {;usb_device.c: 1059: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER(EVENT_TRANSFER,(BYTE*)&USTATcopy,0);
  4513  0073C0  0E00               	movlw	0
  4514  0073C2  6E0D               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
  4515  0073C4  0E72               	movlw	114
  4516  0073C6  6E0C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
  4517  0073C8  0E5B               	movlw	low _USTATcopy
  4518  0073CA  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^0,c
  4519  0073CC  0E00               	movlw	high _USTATcopy
  4520  0073CE  6E0F               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^0,c
  4521  0073D0  0E00               	movlw	0
  4522  0073D2  6E11               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
  4523  0073D4  0E00               	movlw	0
  4524  0073D6  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
  4525  0073D8  ECDC  F030         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  4526  0073DC                     l4668:
  4527  0073DC  2A18               	incf	USBDeviceTasks@i^0,f,c
  4528  0073DE  0E03               	movlw	3
  4529  0073E0  6418               	cpfsgt	USBDeviceTasks@i^0,c
  4530  0073E2  D7E0               	goto	l256
  4531  0073E4                     u4450:
  4532                           
  4533                           ;usb_device.c: 1067: };usb_device.c: 1068: };usb_device.c: 1070: PIR2bits.USBIF = 0;;
  4534  0073E4  9AA1               	bcf	161,5,c	;volatile
  4535  0073E6  0012               	return		;funcret
  4536  0073E8                     __end_of_USBDeviceTasks:
  4537                           	callstack 0
  4538                           
  4539 ;; *************** function _USBWakeFromSuspend *****************
  4540 ;; Defined at:
  4541 ;;		line 1189 in file "../USB Stack/usb_device.c"
  4542 ;; Parameters:    Size  Location     Type
  4543 ;;		None
  4544 ;; Auto vars:     Size  Location     Type
  4545 ;;		None
  4546 ;; Return value:  Size  Location     Type
  4547 ;;                  1    wreg      void 
  4548 ;; Registers used:
  4549 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4550 ;; Tracked objects:
  4551 ;;		On entry : 0/0
  4552 ;;		On exit  : 0/0
  4553 ;;		Unchanged: 0/0
  4554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  4555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  4556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0
  4557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  4558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0
  4559 ;;Total ram usage:        0 bytes
  4560 ;; Hardware stack levels used: 1
  4561 ;; Hardware stack levels required when called: 4
  4562 ;; This function calls:
  4563 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4564 ;; This function is called by:
  4565 ;;		_USBDeviceTasks
  4566 ;; This function uses a non-reentrant model
  4567 ;;
  4568                           
  4569                           	psect	text16
  4570  005DB6                     __ptext16:
  4571                           	callstack 0
  4572  005DB6                     _USBWakeFromSuspend:
  4573                           	callstack 25
  4574                           
  4575                           ;usb_device.c: 1195: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  4576                           
  4577                           ;incstack = 0
  4578  005DB6  0E00               	movlw	0
  4579  005DB8  6E0D               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
  4580  005DBA  0E74               	movlw	116
  4581  005DBC  6E0C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
  4582  005DBE  0E00               	movlw	0
  4583  005DC0  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^0,c
  4584  005DC2  0E00               	movlw	0
  4585  005DC4  6E0F               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^0,c
  4586  005DC6  0E00               	movlw	0
  4587  005DC8  6E11               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
  4588  005DCA  0E00               	movlw	0
  4589  005DCC  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
  4590  005DCE  ECDC  F030         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  4591                           
  4592                           ;usb_device.c: 1202: UCONbits.SUSPND = 0;
  4593  005DD2  926D               	bcf	109,1,c	;volatile
  4594                           
  4595                           ;usb_device.c: 1207: UIEbits.ACTVIE = 0;
  4596  005DD4  9469               	bcf	105,2,c	;volatile
  4597                           
  4598                           ;usb_device.c: 1225: while(UIRbits.ACTVIF)
  4599  005DD6  D001               	goto	l4450
  4600  005DD8                     l4448:
  4601                           
  4602                           ;usb_device.c: 1227: {;usb_device.c: 1228: (UIR &= 0xFB);
  4603  005DD8  9468               	bcf	104,2,c	;volatile
  4604  005DDA                     l4450:
  4605  005DDA  A468               	btfss	104,2,c	;volatile
  4606  005DDC  0012               	return	
  4607  005DDE  D7FC               	goto	l4448
  4608  005DE0                     __end_of_USBWakeFromSuspend:
  4609                           	callstack 0
  4610                           
  4611 ;; *************** function _USBSuspend *****************
  4612 ;; Defined at:
  4613 ;;		line 1132 in file "../USB Stack/usb_device.c"
  4614 ;; Parameters:    Size  Location     Type
  4615 ;;		None
  4616 ;; Auto vars:     Size  Location     Type
  4617 ;;		None
  4618 ;; Return value:  Size  Location     Type
  4619 ;;                  1    wreg      void 
  4620 ;; Registers used:
  4621 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4622 ;; Tracked objects:
  4623 ;;		On entry : 0/0
  4624 ;;		On exit  : 0/0
  4625 ;;		Unchanged: 0/0
  4626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  4627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  4628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0
  4629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  4630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0
  4631 ;;Total ram usage:        0 bytes
  4632 ;; Hardware stack levels used: 1
  4633 ;; Hardware stack levels required when called: 4
  4634 ;; This function calls:
  4635 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4636 ;; This function is called by:
  4637 ;;		_USBDeviceTasks
  4638 ;; This function uses a non-reentrant model
  4639 ;;
  4640                           
  4641                           	psect	text17
  4642  005D92                     __ptext17:
  4643                           	callstack 0
  4644  005D92                     _USBSuspend:
  4645                           	callstack 25
  4646                           
  4647                           ;usb_device.c: 1157: UIEbits.ACTVIE = 1;
  4648                           
  4649                           ;incstack = 0
  4650  005D92  8469               	bsf	105,2,c	;volatile
  4651                           
  4652                           ;usb_device.c: 1158: (UIR &= 0xEF);
  4653  005D94  9868               	bcf	104,4,c	;volatile
  4654                           
  4655                           ;usb_device.c: 1161: UCONbits.SUSPND = 1;
  4656  005D96  826D               	bsf	109,1,c	;volatile
  4657                           
  4658                           ;usb_device.c: 1171: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  4659  005D98  0E00               	movlw	0
  4660  005D9A  6E0D               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
  4661  005D9C  0E75               	movlw	117
  4662  005D9E  6E0C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
  4663  005DA0  0E00               	movlw	0
  4664  005DA2  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^0,c
  4665  005DA4  0E00               	movlw	0
  4666  005DA6  6E0F               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^0,c
  4667  005DA8  0E00               	movlw	0
  4668  005DAA  6E11               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
  4669  005DAC  0E00               	movlw	0
  4670  005DAE  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
  4671  005DB0  ECDC  F030         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  4672  005DB4  0012               	return		;funcret
  4673  005DB6                     __end_of_USBSuspend:
  4674                           	callstack 0
  4675                           
  4676 ;; *************** function _USBStallHandler *****************
  4677 ;; Defined at:
  4678 ;;		line 1089 in file "../USB Stack/usb_device.c"
  4679 ;; Parameters:    Size  Location     Type
  4680 ;;		None
  4681 ;; Auto vars:     Size  Location     Type
  4682 ;;		None
  4683 ;; Return value:  Size  Location     Type
  4684 ;;                  1    wreg      void 
  4685 ;; Registers used:
  4686 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4687 ;; Tracked objects:
  4688 ;;		On entry : 0/0
  4689 ;;		On exit  : 0/0
  4690 ;;		Unchanged: 0/0
  4691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  4692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  4693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0
  4694 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0
  4695 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0
  4696 ;;Total ram usage:        1 bytes
  4697 ;; Hardware stack levels used: 1
  4698 ;; This function calls:
  4699 ;;		Nothing
  4700 ;; This function is called by:
  4701 ;;		_USBDeviceTasks
  4702 ;; This function uses a non-reentrant model
  4703 ;;
  4704                           
  4705                           	psect	text18
  4706  005E6A                     __ptext18:
  4707                           	callstack 0
  4708  005E6A                     _USBStallHandler:
  4709                           	callstack 29
  4710                           
  4711                           ;usb_device.c: 1102: if(UEP0bits.EPSTALL == 1)
  4712                           
  4713                           ;incstack = 0
  4714  005E6A  A070               	btfss	112,0,c	;volatile
  4715  005E6C  D017               	goto	l4470
  4716                           
  4717                           ;usb_device.c: 1103: {;usb_device.c: 1105: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
  4718  005E6E  C056  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  4719  005E72  C057  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  4720  005E76  0E80               	movlw	128
  4721  005E78  18DE               	xorwf	postinc2,w,c
  4722  005E7A  A4D8               	btfss	status,2,c
  4723  005E7C  D00E               	goto	l4468
  4724  005E7E  C09F  FFD9         	movff	_pBDTEntryIn,fsr2l
  4725  005E82  C0A0  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  4726  005E86  0E84               	movlw	132
  4727  005E88  18DE               	xorwf	postinc2,w,c
  4728  005E8A  A4D8               	btfss	status,2,c
  4729  005E8C  D006               	goto	l4468
  4730                           
  4731                           ;usb_device.c: 1106: {;usb_device.c: 1108: pBDTEntryEP0OutCurrent->STAT.Val = 0x80|0x00|
      +                          0x08|0x04;
  4732  005E8E  C056  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  4733  005E92  C057  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  4734  005E96  0E8C               	movlw	140
  4735  005E98  6EDF               	movwf	indf2,c
  4736  005E9A                     l4468:
  4737                           
  4738                           ;usb_device.c: 1109: };usb_device.c: 1110: UEP0bits.EPSTALL = 0;
  4739  005E9A  9070               	bcf	112,0,c	;volatile
  4740  005E9C                     l4470:
  4741                           
  4742                           ;usb_device.c: 1111: };usb_device.c: 1113: (UIR &= 0xDF);
  4743  005E9C  9A68               	bcf	104,5,c	;volatile
  4744  005E9E  0012               	return		;funcret
  4745  005EA0                     __end_of_USBStallHandler:
  4746                           	callstack 0
  4747                           
  4748 ;; *************** function _USBDeviceInit *****************
  4749 ;; Defined at:
  4750 ;;		line 675 in file "../USB Stack/usb_device.c"
  4751 ;; Parameters:    Size  Location     Type
  4752 ;;		None
  4753 ;; Auto vars:     Size  Location     Type
  4754 ;;  i               1    8[COMRAM] unsigned char 
  4755 ;; Return value:  Size  Location     Type
  4756 ;;                  1    wreg      void 
  4757 ;; Registers used:
  4758 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4759 ;; Tracked objects:
  4760 ;;		On entry : 0/0
  4761 ;;		On exit  : 0/0
  4762 ;;		Unchanged: 0/0
  4763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  4764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  4765 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0
  4766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  4767 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0
  4768 ;;Total ram usage:        1 bytes
  4769 ;; Hardware stack levels used: 1
  4770 ;; Hardware stack levels required when called: 1
  4771 ;; This function calls:
  4772 ;;		_memset
  4773 ;; This function is called by:
  4774 ;;		_USBDeviceTasks
  4775 ;;		_main
  4776 ;; This function uses a non-reentrant model
  4777 ;;
  4778                           
  4779                           	psect	text19
  4780  00634E                     __ptext19:
  4781                           	callstack 0
  4782  00634E                     _USBDeviceInit:
  4783                           	callstack 28
  4784                           
  4785                           ;usb_device.c: 677: BYTE i;;usb_device.c: 680: UEIR = 0;;
  4786                           
  4787                           ;incstack = 0
  4788  00634E  0E00               	movlw	0
  4789  006350  6E6A               	movwf	106,c	;volatile
  4790                           
  4791                           ;usb_device.c: 683: UIR = 0;;
  4792  006352  0E00               	movlw	0
  4793  006354  6E68               	movwf	104,c	;volatile
  4794                           
  4795                           ;usb_device.c: 685: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  4796  006356  0E16               	movlw	22
  4797  006358  6E6F               	movwf	111,c	;volatile
  4798  00635A  0E9F               	movlw	159
  4799  00635C  6E6B               	movwf	107,c	;volatile
  4800  00635E  0E7B               	movlw	123
  4801  006360  6E69               	movwf	105,c	;volatile
  4802                           
  4803                           ;usb_device.c: 688: ;;usb_device.c: 691: ;;usb_device.c: 694: UCONbits.PPBRST = 1;
  4804  006362  8C6D               	bsf	109,6,c	;volatile
  4805                           
  4806                           ;usb_device.c: 697: UADDR = 0x00;
  4807  006364  0E00               	movlw	0
  4808  006366  6E6E               	movwf	110,c	;volatile
  4809                           
  4810                           ;usb_device.c: 700: memset((void*)&UEP1,0x00,(3-1));
  4811  006368  0E71               	movlw	113
  4812  00636A  6E01               	movwf	memset@p1^0,c
  4813  00636C  0E0F               	movlw	15
  4814  00636E  6E02               	movwf	(memset@p1+1)^0,c
  4815  006370  0E00               	movlw	0
  4816  006372  6E04               	movwf	(memset@c+1)^0,c
  4817  006374  0E00               	movlw	0
  4818  006376  6E03               	movwf	memset@c^0,c
  4819  006378  0E00               	movlw	0
  4820  00637A  6E06               	movwf	(memset@n+1)^0,c
  4821  00637C  0E02               	movlw	2
  4822  00637E  6E05               	movwf	memset@n^0,c
  4823  006380  ECF0  F02E         	call	_memset	;wreg free
  4824                           
  4825                           ;usb_device.c: 703: UCONbits.PPBRST = 0;
  4826  006384  9C6D               	bcf	109,6,c	;volatile
  4827                           
  4828                           ;usb_device.c: 706: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
  4829  006386  0E00               	movlw	0
  4830  006388  6E09               	movwf	USBDeviceInit@i^0,c
  4831  00638A                     l4420:
  4832                           
  4833                           ;usb_device.c: 707: {;usb_device.c: 708: BDT[i].Val = 0x00;
  4834  00638A  5009               	movf	USBDeviceInit@i^0,w,c
  4835  00638C  0D04               	mullw	4
  4836  00638E  0E00               	movlw	0
  4837  006390  24F3               	addwf	243,w,c
  4838  006392  6ED9               	movwf	fsr2l,c
  4839  006394  0E04               	movlw	4
  4840  006396  20F4               	addwfc	prodh,w,c
  4841  006398  6EDA               	movwf	fsr2h,c
  4842  00639A  6ADE               	clrf	postinc2,c
  4843  00639C  6ADE               	clrf	postinc2,c
  4844  00639E  6ADE               	clrf	postinc2,c
  4845  0063A0  6ADD               	clrf	postdec2,c
  4846  0063A2  2A09               	incf	USBDeviceInit@i^0,f,c
  4847  0063A4  0E0F               	movlw	15
  4848  0063A6  6409               	cpfsgt	USBDeviceInit@i^0,c
  4849  0063A8  D7F0               	goto	l4420
  4850                           
  4851                           ;usb_device.c: 709: };usb_device.c: 712: UEP0 = 0x06|0x10;
  4852  0063AA  0E16               	movlw	22
  4853  0063AC  6E70               	movwf	112,c	;volatile
  4854                           
  4855                           ;usb_device.c: 715: while(UIRbits.TRNIF == 1)
  4856  0063AE  D001               	goto	l4430
  4857  0063B0                     l4428:
  4858                           
  4859                           ;usb_device.c: 716: {;usb_device.c: 717: (UIR &= 0xF7);
  4860  0063B0  9668               	bcf	104,3,c	;volatile
  4861  0063B2                     l4430:
  4862  0063B2  B668               	btfsc	104,3,c	;volatile
  4863  0063B4  D7FD               	goto	l4428
  4864                           
  4865                           ;usb_device.c: 718: };usb_device.c: 721: inPipes[0].info.Val = 0;
  4866  0063B6  0E00               	movlw	0
  4867  0063B8  6E51               	movwf	(_inPipes+3)^0,c
  4868                           
  4869                           ;usb_device.c: 722: outPipes[0].info.Val = 0;
  4870  0063BA  0E00               	movlw	0
  4871  0063BC  0100               	movlb	0	; () banked
  4872  0063BE  6F9A               	movwf	(_outPipes+3)& (0+255),b
  4873                           
  4874                           ;usb_device.c: 723: outPipes[0].wCount.Val = 0;
  4875  0063C0  0E00               	movlw	0
  4876  0063C2  6F9C               	movwf	(_outPipes+5)& (0+255),b
  4877  0063C4  0E00               	movlw	0
  4878  0063C6  6F9B               	movwf	(_outPipes+4)& (0+255),b
  4879                           
  4880                           ; BSR set to: 0
  4881                           ;usb_device.c: 726: PKTDIS = 0;
  4882  0063C8  986D               	bcf	3949,4,c	;volatile
  4883                           
  4884                           ; BSR set to: 0
  4885                           ;usb_device.c: 729: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  4886  0063CA  0E08               	movlw	8
  4887  0063CC  6F9F               	movwf	_pBDTEntryIn& (0+255),b
  4888  0063CE  0E04               	movlw	4
  4889  0063D0  6FA0               	movwf	(_pBDTEntryIn+1)& (0+255),b
  4890                           
  4891                           ; BSR set to: 0
  4892                           ;usb_device.c: 732: USBActiveConfiguration = 0;
  4893  0063D2  0E00               	movlw	0
  4894  0063D4  6E5F               	movwf	_USBActiveConfiguration^0,c
  4895                           
  4896                           ; BSR set to: 0
  4897                           ;usb_device.c: 735: USBDeviceState = DETACHED_STATE;
  4898  0063D6  0E00               	movlw	0
  4899  0063D8  6E5A               	movwf	_USBDeviceState^0,c
  4900                           
  4901                           ; BSR set to: 0
  4902  0063DA  0012               	return		;funcret
  4903  0063DC                     __end_of_USBDeviceInit:
  4904                           	callstack 0
  4905                           
  4906 ;; *************** function _USBCtrlEPService *****************
  4907 ;; Defined at:
  4908 ;;		line 1254 in file "../USB Stack/usb_device.c"
  4909 ;; Parameters:    Size  Location     Type
  4910 ;;		None
  4911 ;; Auto vars:     Size  Location     Type
  4912 ;;  setup_cnt       1   21[COMRAM] unsigned char 
  4913 ;; Return value:  Size  Location     Type
  4914 ;;                  1    wreg      void 
  4915 ;; Registers used:
  4916 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4917 ;; Tracked objects:
  4918 ;;		On entry : 0/0
  4919 ;;		On exit  : 0/0
  4920 ;;		Unchanged: 0/0
  4921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  4922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  4923 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0
  4924 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0
  4925 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0
  4926 ;;Total ram usage:        3 bytes
  4927 ;; Hardware stack levels used: 1
  4928 ;; Hardware stack levels required when called: 7
  4929 ;; This function calls:
  4930 ;;		_USBCtrlTrfInHandler
  4931 ;;		_USBCtrlTrfOutHandler
  4932 ;;		_USBCtrlTrfSetupHandler
  4933 ;; This function is called by:
  4934 ;;		_USBDeviceTasks
  4935 ;; This function uses a non-reentrant model
  4936 ;;
  4937                           
  4938                           	psect	text20
  4939  00666A                     __ptext20:
  4940                           	callstack 0
  4941  00666A                     _USBCtrlEPService:
  4942                           	callstack 22
  4943                           
  4944                           ;usb_device.c: 1257: if((USTATcopy & ~0x02) == 0x00)
  4945                           
  4946                           ; BSR set to: 0
  4947                           ;incstack = 0
  4948  00666A  C05B  F014         	movff	_USTATcopy,??_USBCtrlEPService
  4949  00666E  0EFD               	movlw	253
  4950  006670  1614               	andwf	??_USBCtrlEPService^0,f,c
  4951  006672  A4D8               	btfss	status,2,c
  4952  006674  D04F               	goto	l4502
  4953                           
  4954                           ;usb_device.c: 1258: {;usb_device.c: 1261: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy & 0x7E)>>1];
  4955  006676  C05B  F014         	movff	_USTATcopy,??_USBCtrlEPService
  4956  00667A  90D8               	bcf	status,0,c
  4957  00667C  3214               	rrcf	??_USBCtrlEPService^0,f,c
  4958  00667E  0E3F               	movlw	63
  4959  006680  1614               	andwf	??_USBCtrlEPService^0,f,c
  4960  006682  5014               	movf	??_USBCtrlEPService^0,w,c
  4961  006684  0D04               	mullw	4
  4962  006686  0E00               	movlw	0
  4963  006688  24F3               	addwf	243,w,c
  4964  00668A  6E56               	movwf	_pBDTEntryEP0OutCurrent^0,c
  4965  00668C  0E04               	movlw	4
  4966  00668E  20F4               	addwfc	prodh,w,c
  4967  006690  6E57               	movwf	(_pBDTEntryEP0OutCurrent+1)^0,c
  4968                           
  4969                           ;usb_device.c: 1269: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  4970  006692  C056  F054         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  4971  006696  C057  F055         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  4972                           
  4973                           ;usb_device.c: 1271: ((BYTE_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  4974  00669A  0E04               	movlw	4
  4975  00669C  1A54               	xorwf	_pBDTEntryEP0OutNext^0,f,c
  4976                           
  4977                           ;usb_device.c: 1274: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  4978  00669E  C056  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  4979  0066A2  C057  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  4980  0066A6  30DF               	rrcf	indf2,w,c
  4981  0066A8  32E8               	rrcf	wreg,f,c
  4982  0066AA  0B0F               	andlw	15
  4983  0066AC  0A0D               	xorlw	13
  4984  0066AE  A4D8               	btfss	status,2,c
  4985  0066B0  D02E               	goto	l4500
  4986                           
  4987                           ;usb_device.c: 1275: {;usb_device.c: 1279: if(pBDTEntryEP0OutCurrent->ADR == (BYTE*)&Ctr
      +                          lTrfData)
  4988  0066B2  EE20 F002          	lfsr	2,2
  4989  0066B6  5056               	movf	_pBDTEntryEP0OutCurrent^0,w,c
  4990  0066B8  26D9               	addwf	fsr2l,f,c
  4991  0066BA  5057               	movf	(_pBDTEntryEP0OutCurrent+1)^0,w,c
  4992  0066BC  22DA               	addwfc	fsr2h,f,c
  4993  0066BE  0E20               	movlw	32
  4994  0066C0  18DE               	xorwf	postinc2,w,c
  4995  0066C2  E122               	bnz	l4498
  4996  0066C4  0E05               	movlw	5
  4997  0066C6  18DE               	xorwf	postinc2,w,c
  4998  0066C8  A4D8               	btfss	status,2,c
  4999  0066CA  D01E               	goto	u4180
  5000                           
  5001                           ;usb_device.c: 1280: {;usb_device.c: 1281: unsigned char setup_cnt;;usb_device.c: 1283: 
      +                          pBDTEntryEP0OutCurrent->ADR = (BYTE*)&SetupPkt;
  5002  0066CC  EE20 F002          	lfsr	2,2
  5003  0066D0  5056               	movf	_pBDTEntryEP0OutCurrent^0,w,c
  5004  0066D2  26D9               	addwf	fsr2l,f,c
  5005  0066D4  5057               	movf	(_pBDTEntryEP0OutCurrent+1)^0,w,c
  5006  0066D6  22DA               	addwfc	fsr2h,f,c
  5007  0066D8  0E00               	movlw	0
  5008  0066DA  6EDE               	movwf	postinc2,c
  5009  0066DC  0E05               	movlw	5
  5010  0066DE  6EDD               	movwf	postdec2,c
  5011                           
  5012                           ;usb_device.c: 1284: for(setup_cnt = 0; setup_cnt < sizeof(CTRL_TRF_SETUP); setup_cnt++)
  5013  0066E0  0E00               	movlw	0
  5014  0066E2  6E16               	movwf	USBCtrlEPService@setup_cnt^0,c
  5015  0066E4                     l4492:
  5016                           
  5017                           ;usb_device.c: 1285: {;usb_device.c: 1286: *(((BYTE*)&SetupPkt)+setup_cnt) = *(((BYTE*)&
      +                          CtrlTrfData)+setup_cnt);
  5018  0066E4  0E20               	movlw	32
  5019  0066E6  2416               	addwf	USBCtrlEPService@setup_cnt^0,w,c
  5020  0066E8  6ED9               	movwf	fsr2l,c
  5021  0066EA  6ADA               	clrf	fsr2h,c
  5022  0066EC  0E05               	movlw	5
  5023  0066EE  22DA               	addwfc	fsr2h,f,c
  5024  0066F0  0E00               	movlw	0
  5025  0066F2  2416               	addwf	USBCtrlEPService@setup_cnt^0,w,c
  5026  0066F4  6EE1               	movwf	fsr1l,c
  5027  0066F6  6AE2               	clrf	fsr1h,c
  5028  0066F8  0E05               	movlw	5
  5029  0066FA  22E2               	addwfc	fsr1h,f,c
  5030  0066FC  CFDF FFE7          	movff	indf2,indf1
  5031  006700  2A16               	incf	USBCtrlEPService@setup_cnt^0,f,c
  5032  006702  0E07               	movlw	7
  5033  006704  6416               	cpfsgt	USBCtrlEPService@setup_cnt^0,c
  5034  006706  D7EE               	goto	l4492
  5035  006708                     u4180:
  5036  006708                     l4498:
  5037                           
  5038                           ;usb_device.c: 1287: };usb_device.c: 1288: };usb_device.c: 1291: USBCtrlTrfSetupHandler(
      +                          );
  5039  006708  EC0F  F030         	call	_USBCtrlTrfSetupHandler	;wreg free
  5040                           
  5041                           ;usb_device.c: 1292: }
  5042  00670C  0012               	return	
  5043  00670E                     l4500:
  5044                           
  5045                           ;usb_device.c: 1293: else;usb_device.c: 1294: {;usb_device.c: 1296: USBCtrlTrfOutHandler
      +                          ();
  5046  00670E  ECE6  F02F         	call	_USBCtrlTrfOutHandler	;wreg free
  5047  006712  0012               	return	
  5048  006714                     l4502:
  5049                           
  5050                           ;usb_device.c: 1299: else if((USTATcopy & ~0x02) == 0x04)
  5051  006714  505B               	movf	_USTATcopy^0,w,c
  5052  006716  0BFD               	andlw	253
  5053  006718  0A04               	xorlw	4
  5054  00671A  A4D8               	btfss	status,2,c
  5055  00671C  0012               	return	
  5056                           
  5057                           ;usb_device.c: 1300: {;usb_device.c: 1303: USBCtrlTrfInHandler();
  5058  00671E  EC61  F031         	call	_USBCtrlTrfInHandler	;wreg free
  5059  006722  0012               	return		;funcret
  5060  006724                     __end_of_USBCtrlEPService:
  5061                           	callstack 0
  5062                           
  5063 ;; *************** function _USBCtrlTrfSetupHandler *****************
  5064 ;; Defined at:
  5065 ;;		line 1348 in file "../USB Stack/usb_device.c"
  5066 ;; Parameters:    Size  Location     Type
  5067 ;;		None
  5068 ;; Auto vars:     Size  Location     Type
  5069 ;;		None
  5070 ;; Return value:  Size  Location     Type
  5071 ;;                  1    wreg      void 
  5072 ;; Registers used:
  5073 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5074 ;; Tracked objects:
  5075 ;;		On entry : 0/0
  5076 ;;		On exit  : 0/0
  5077 ;;		Unchanged: 0/0
  5078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  5079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  5080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0
  5081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  5082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0
  5083 ;;Total ram usage:        0 bytes
  5084 ;; Hardware stack levels used: 1
  5085 ;; Hardware stack levels required when called: 6
  5086 ;; This function calls:
  5087 ;;		_USBCheckStdRequest
  5088 ;;		_USBCtrlEPServiceComplete
  5089 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5090 ;; This function is called by:
  5091 ;;		_USBCtrlEPService
  5092 ;; This function uses a non-reentrant model
  5093 ;;
  5094                           
  5095                           	psect	text21
  5096  00601E                     __ptext21:
  5097                           	callstack 0
  5098  00601E                     _USBCtrlTrfSetupHandler:
  5099                           	callstack 22
  5100                           
  5101                           ;usb_device.c: 1351: if(pBDTEntryIn[0]->STAT.UOWN != 0)
  5102                           
  5103                           ;incstack = 0
  5104  00601E  C09F  FFD9         	movff	_pBDTEntryIn,fsr2l
  5105  006022  C0A0  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  5106  006026  0100               	movlb	0	; () banked
  5107  006028  AEDF               	btfss	indf2,7,c
  5108  00602A  D006               	goto	l4168
  5109                           
  5110                           ; BSR set to: 0
  5111                           ;usb_device.c: 1352: {;usb_device.c: 1355: pBDTEntryIn[0]->STAT.Val = 0x00;
  5112  00602C  C09F  FFD9         	movff	_pBDTEntryIn,fsr2l
  5113  006030  C0A0  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  5114  006034  0E00               	movlw	0
  5115  006036  6EDF               	movwf	indf2,c
  5116  006038                     l4168:
  5117                           
  5118                           ; BSR set to: 0
  5119                           ;usb_device.c: 1356: };usb_device.c: 1359: shortPacketStatus = 0;
  5120  006038  0E00               	movlw	0
  5121  00603A  6E59               	movwf	_shortPacketStatus^0,c
  5122                           
  5123                           ; BSR set to: 0
  5124                           ;usb_device.c: 1362: controlTransferState = 0;
  5125  00603C  0E00               	movlw	0
  5126  00603E  6E58               	movwf	_controlTransferState^0,c
  5127                           
  5128                           ; BSR set to: 0
  5129                           ;usb_device.c: 1364: inPipes[0].wCount.Val = 0;
  5130  006040  0E00               	movlw	0
  5131  006042  6E53               	movwf	(_inPipes+5)^0,c
  5132  006044  0E00               	movlw	0
  5133  006046  6E52               	movwf	(_inPipes+4)^0,c
  5134                           
  5135                           ; BSR set to: 0
  5136                           ;usb_device.c: 1365: inPipes[0].info.Val = 0;
  5137  006048  0E00               	movlw	0
  5138  00604A  6E51               	movwf	(_inPipes+3)^0,c
  5139                           
  5140                           ; BSR set to: 0
  5141                           ;usb_device.c: 1368: USBCheckStdRequest();
  5142  00604C  EC92  F033         	call	_USBCheckStdRequest	;wreg free
  5143                           
  5144                           ;usb_device.c: 1369: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  5145  006050  0E00               	movlw	0
  5146  006052  6E0D               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
  5147  006054  0E03               	movlw	3
  5148  006056  6E0C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
  5149  006058  0E00               	movlw	0
  5150  00605A  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^0,c
  5151  00605C  0E00               	movlw	0
  5152  00605E  6E0F               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^0,c
  5153  006060  0E00               	movlw	0
  5154  006062  6E11               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
  5155  006064  0E00               	movlw	0
  5156  006066  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
  5157  006068  ECDC  F030         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5158                           
  5159                           ;usb_device.c: 1372: USBCtrlEPServiceComplete();
  5160  00606C  ECAF  F03A         	call	_USBCtrlEPServiceComplete	;wreg free
  5161  006070  0012               	return		;funcret
  5162  006072                     __end_of_USBCtrlTrfSetupHandler:
  5163                           	callstack 0
  5164                           
  5165 ;; *************** function _USBCtrlEPServiceComplete *****************
  5166 ;; Defined at:
  5167 ;;		line 1914 in file "../USB Stack/usb_device.c"
  5168 ;; Parameters:    Size  Location     Type
  5169 ;;		None
  5170 ;; Auto vars:     Size  Location     Type
  5171 ;;		None
  5172 ;; Return value:  Size  Location     Type
  5173 ;;                  1    wreg      void 
  5174 ;; Registers used:
  5175 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5176 ;; Tracked objects:
  5177 ;;		On entry : 0/0
  5178 ;;		On exit  : 0/0
  5179 ;;		Unchanged: 0/0
  5180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  5181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  5182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0
  5183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  5184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0
  5185 ;;Total ram usage:        0 bytes
  5186 ;; Hardware stack levels used: 1
  5187 ;; Hardware stack levels required when called: 1
  5188 ;; This function calls:
  5189 ;;		_USBCtrlTrfTxService
  5190 ;; This function is called by:
  5191 ;;		_USBCtrlTrfSetupHandler
  5192 ;; This function uses a non-reentrant model
  5193 ;;
  5194                           
  5195                           	psect	text22
  5196  00755E                     __ptext22:
  5197                           	callstack 0
  5198  00755E                     _USBCtrlEPServiceComplete:
  5199                           	callstack 26
  5200                           
  5201                           ;usb_device.c: 1920: PKTDIS = 0;
  5202                           
  5203                           ;incstack = 0
  5204  00755E  986D               	bcf	3949,4,c	;volatile
  5205                           
  5206                           ;usb_device.c: 1922: if(inPipes[0].info.bits.busy == 0)
  5207  007560  BE51               	btfsc	(_inPipes+3)^0,7,c
  5208  007562  D04B               	goto	l374
  5209                           
  5210                           ;usb_device.c: 1923: {;usb_device.c: 1924: if(outPipes[0].info.bits.busy == 1)
  5211  007564  0100               	movlb	0	; () banked
  5212  007566  AF9A               	btfss	(_outPipes+3)& (0+255),7,b
  5213  007568  D029               	goto	l4000
  5214                           
  5215                           ; BSR set to: 0
  5216                           ;usb_device.c: 1925: {;usb_device.c: 1926: controlTransferState = 2;
  5217  00756A  0E02               	movlw	2
  5218  00756C  6E58               	movwf	_controlTransferState^0,c
  5219                           
  5220                           ; BSR set to: 0
  5221                           ;usb_device.c: 1936: pBDTEntryIn[0]->CNT = 0;
  5222  00756E  EE20 F001          	lfsr	2,1
  5223  007572  519F               	movf	_pBDTEntryIn& (0+255),w,b
  5224  007574  26D9               	addwf	fsr2l,f,c
  5225  007576  51A0               	movf	(_pBDTEntryIn+1)& (0+255),w,b
  5226  007578  22DA               	addwfc	fsr2h,f,c
  5227  00757A  0E00               	movlw	0
  5228  00757C  6EDF               	movwf	indf2,c
  5229                           
  5230                           ; BSR set to: 0
  5231                           ;usb_device.c: 1937: pBDTEntryIn[0]->STAT.Val = 0x80|0x40|0x08;
  5232  00757E  C09F  FFD9         	movff	_pBDTEntryIn,fsr2l
  5233  007582  C0A0  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  5234  007586  0EC8               	movlw	200
  5235  007588  6EDF               	movwf	indf2,c
  5236                           
  5237                           ; BSR set to: 0
  5238                           ;usb_device.c: 1942: pBDTEntryEP0OutNext->CNT = 8;
  5239  00758A  EE20 F001          	lfsr	2,1
  5240  00758E  5054               	movf	_pBDTEntryEP0OutNext^0,w,c
  5241  007590  26D9               	addwf	fsr2l,f,c
  5242  007592  5055               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
  5243  007594  22DA               	addwfc	fsr2h,f,c
  5244  007596  0E08               	movlw	8
  5245  007598  6EDF               	movwf	indf2,c
  5246                           
  5247                           ; BSR set to: 0
  5248                           ;usb_device.c: 1943: pBDTEntryEP0OutNext->ADR = (BYTE*)&CtrlTrfData;
  5249  00759A  EE20 F002          	lfsr	2,2
  5250  00759E  5054               	movf	_pBDTEntryEP0OutNext^0,w,c
  5251  0075A0  26D9               	addwf	fsr2l,f,c
  5252  0075A2  5055               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
  5253  0075A4  22DA               	addwfc	fsr2h,f,c
  5254  0075A6  0E20               	movlw	32
  5255  0075A8  6EDE               	movwf	postinc2,c
  5256  0075AA  0E05               	movlw	5
  5257  0075AC  6EDD               	movwf	postdec2,c
  5258                           
  5259                           ; BSR set to: 0
  5260                           ;usb_device.c: 1944: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x40|0x08;
  5261  0075AE  C054  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  5262  0075B2  C055  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  5263  0075B6  0EC8               	movlw	200
  5264  0075B8  6EDF               	movwf	indf2,c
  5265                           
  5266                           ;usb_device.c: 1945: }
  5267  0075BA  0012               	return	
  5268  0075BC                     l4000:
  5269                           
  5270                           ; BSR set to: 0
  5271                           ;usb_device.c: 1946: else;usb_device.c: 1947: {;usb_device.c: 1952: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
  5272  0075BC  EE20 F001          	lfsr	2,1
  5273  0075C0  5054               	movf	_pBDTEntryEP0OutNext^0,w,c
  5274  0075C2  26D9               	addwf	fsr2l,f,c
  5275  0075C4  5055               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
  5276  0075C6  22DA               	addwfc	fsr2h,f,c
  5277  0075C8  0E08               	movlw	8
  5278  0075CA  6EDF               	movwf	indf2,c
  5279                           
  5280                           ;usb_device.c: 1953: pBDTEntryEP0OutNext->ADR = (BYTE*)&SetupPkt;
  5281  0075CC  EE20 F002          	lfsr	2,2
  5282  0075D0  5054               	movf	_pBDTEntryEP0OutNext^0,w,c
  5283  0075D2  26D9               	addwf	fsr2l,f,c
  5284  0075D4  5055               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
  5285  0075D6  22DA               	addwfc	fsr2h,f,c
  5286  0075D8  0E00               	movlw	0
  5287  0075DA  6EDE               	movwf	postinc2,c
  5288  0075DC  0E05               	movlw	5
  5289  0075DE  6EDD               	movwf	postdec2,c
  5290                           
  5291                           ; BSR set to: 0
  5292                           ;usb_device.c: 1954: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x00|0x08|0x04;
  5293  0075E0  C054  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  5294  0075E4  C055  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  5295  0075E8  0E8C               	movlw	140
  5296  0075EA  6EDF               	movwf	indf2,c
  5297                           
  5298                           ; BSR set to: 0
  5299                           ;usb_device.c: 1955: pBDTEntryIn[0]->STAT.Val = 0x80|0x04;
  5300  0075EC  C09F  FFD9         	movff	_pBDTEntryIn,fsr2l
  5301  0075F0  C0A0  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  5302  0075F4  0E84               	movlw	132
  5303  0075F6  6EDF               	movwf	indf2,c
  5304  0075F8  0012               	return	
  5305  0075FA                     l374:
  5306                           
  5307                           ;usb_device.c: 1958: else;usb_device.c: 1959: {;usb_device.c: 1960: if(outPipes[0].info.
      +                          bits.busy == 0)
  5308  0075FA  0100               	movlb	0	; () banked
  5309  0075FC  BF9A               	btfsc	(_outPipes+3)& (0+255),7,b
  5310  0075FE  0012               	return	
  5311                           
  5312                           ; BSR set to: 0
  5313                           ;usb_device.c: 1961: {;usb_device.c: 1962: if(SetupPkt.DataDir == (0x80>>7))
  5314  007600  0105               	movlb	5	; () banked
  5315  007602  AF00               	btfss	0,7,b	;volatile
  5316  007604  D054               	goto	l4036
  5317                           
  5318                           ; BSR set to: 5
  5319                           ;usb_device.c: 1963: {;usb_device.c: 1964: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  5320  007606  5052               	movf	(_inPipes+4)^0,w,c
  5321  007608  5D06               	subwf	6,w,b	;volatile
  5322  00760A  5053               	movf	(_inPipes+5)^0,w,c
  5323  00760C  5907               	subwfb	7,w,b	;volatile
  5324  00760E  B0D8               	btfsc	status,0,c
  5325  007610  D004               	goto	l4012
  5326                           
  5327                           ; BSR set to: 5
  5328                           ;usb_device.c: 1965: {;usb_device.c: 1966: inPipes[0].wCount.Val = SetupPkt.wLength;
  5329  007612  C506 F052          	movff	1286,_inPipes+4	;volatile
  5330  007616  C507 F053          	movff	1287,_inPipes+5	;volatile
  5331  00761A                     l4012:
  5332                           
  5333                           ; BSR set to: 5
  5334                           ;usb_device.c: 1967: };usb_device.c: 1968: USBCtrlTrfTxService();
  5335  00761A  ECDB  F038         	call	_USBCtrlTrfTxService	;wreg free
  5336                           
  5337                           ;usb_device.c: 1969: controlTransferState = 1;
  5338  00761E  0E01               	movlw	1
  5339  007620  6E58               	movwf	_controlTransferState^0,c
  5340                           
  5341                           ;usb_device.c: 1991: pBDTEntryEP0OutNext->CNT = 8;
  5342  007622  EE20 F001          	lfsr	2,1
  5343  007626  5054               	movf	_pBDTEntryEP0OutNext^0,w,c
  5344  007628  26D9               	addwf	fsr2l,f,c
  5345  00762A  5055               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
  5346  00762C  22DA               	addwfc	fsr2h,f,c
  5347  00762E  0E08               	movlw	8
  5348  007630  6EDF               	movwf	indf2,c
  5349                           
  5350                           ;usb_device.c: 1992: pBDTEntryEP0OutNext->ADR = (BYTE*)&SetupPkt;
  5351  007632  EE20 F002          	lfsr	2,2
  5352  007636  5054               	movf	_pBDTEntryEP0OutNext^0,w,c
  5353  007638  26D9               	addwf	fsr2l,f,c
  5354  00763A  5055               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
  5355  00763C  22DA               	addwfc	fsr2h,f,c
  5356  00763E  0E00               	movlw	0
  5357  007640  6EDE               	movwf	postinc2,c
  5358  007642  0E05               	movlw	5
  5359  007644  6EDD               	movwf	postdec2,c
  5360                           
  5361                           ;usb_device.c: 1993: pBDTEntryEP0OutNext->STAT.Val = 0x80;
  5362  007646  C054  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  5363  00764A  C055  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  5364  00764E  0E80               	movlw	128
  5365  007650  6EDF               	movwf	indf2,c
  5366                           
  5367                           ;usb_device.c: 1994: BothEP0OutUOWNsSet = FALSE;
  5368  007652  0E00               	movlw	0
  5369  007654  0100               	movlb	0	; () banked
  5370  007656  6FC2               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  5371                           
  5372                           ; BSR set to: 0
  5373                           ;usb_device.c: 1997: pBDTEntryEP0OutCurrent->CNT = 8;
  5374  007658  EE20 F001          	lfsr	2,1
  5375  00765C  5056               	movf	_pBDTEntryEP0OutCurrent^0,w,c
  5376  00765E  26D9               	addwf	fsr2l,f,c
  5377  007660  5057               	movf	(_pBDTEntryEP0OutCurrent+1)^0,w,c
  5378  007662  22DA               	addwfc	fsr2h,f,c
  5379  007664  0E08               	movlw	8
  5380  007666  6EDF               	movwf	indf2,c
  5381                           
  5382                           ; BSR set to: 0
  5383                           ;usb_device.c: 1998: pBDTEntryEP0OutCurrent->ADR = (BYTE*)&SetupPkt;
  5384  007668  EE20 F002          	lfsr	2,2
  5385  00766C  5056               	movf	_pBDTEntryEP0OutCurrent^0,w,c
  5386  00766E  26D9               	addwf	fsr2l,f,c
  5387  007670  5057               	movf	(_pBDTEntryEP0OutCurrent+1)^0,w,c
  5388  007672  22DA               	addwfc	fsr2h,f,c
  5389  007674  0E00               	movlw	0
  5390  007676  6EDE               	movwf	postinc2,c
  5391  007678  0E05               	movlw	5
  5392  00767A  6EDD               	movwf	postdec2,c
  5393                           
  5394                           ; BSR set to: 0
  5395                           ;usb_device.c: 1999: pBDTEntryEP0OutCurrent->STAT.Val = 0x80|0x04;
  5396  00767C  C056  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  5397  007680  C057  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  5398  007684  0E84               	movlw	132
  5399  007686  6EDF               	movwf	indf2,c
  5400                           
  5401                           ; BSR set to: 0
  5402                           ;usb_device.c: 2000: BothEP0OutUOWNsSet = TRUE;
  5403  007688  0E01               	movlw	1
  5404  00768A  6FC2               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  5405                           
  5406                           ; BSR set to: 0
  5407                           ;usb_device.c: 2007: pBDTEntryIn[0]->ADR = (BYTE*)&CtrlTrfData;
  5408  00768C  EE20 F002          	lfsr	2,2
  5409  007690  519F               	movf	_pBDTEntryIn& (0+255),w,b
  5410  007692  26D9               	addwf	fsr2l,f,c
  5411  007694  51A0               	movf	(_pBDTEntryIn+1)& (0+255),w,b
  5412  007696  22DA               	addwfc	fsr2h,f,c
  5413  007698  0E20               	movlw	32
  5414  00769A  6EDE               	movwf	postinc2,c
  5415  00769C  0E05               	movlw	5
  5416  00769E  6EDD               	movwf	postdec2,c
  5417                           
  5418                           ; BSR set to: 0
  5419                           ;usb_device.c: 2008: pBDTEntryIn[0]->STAT.Val = 0x80|0x40|0x08;
  5420  0076A0  C09F  FFD9         	movff	_pBDTEntryIn,fsr2l
  5421  0076A4  C0A0  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  5422  0076A8  0EC8               	movlw	200
  5423  0076AA  6EDF               	movwf	indf2,c
  5424                           
  5425                           ;usb_device.c: 2009: }
  5426  0076AC  0012               	return	
  5427  0076AE                     l4036:
  5428                           
  5429                           ; BSR set to: 5
  5430                           ;usb_device.c: 2010: else;usb_device.c: 2011: {;usb_device.c: 2012: controlTransferState
      +                           = 2;
  5431  0076AE  0E02               	movlw	2
  5432  0076B0  6E58               	movwf	_controlTransferState^0,c
  5433                           
  5434                           ; BSR set to: 5
  5435                           ;usb_device.c: 2022: pBDTEntryIn[0]->CNT = 0;
  5436  0076B2  0100               	movlb	0	; () banked
  5437  0076B4  EE20 F001          	lfsr	2,1
  5438  0076B8  519F               	movf	_pBDTEntryIn& (0+255),w,b
  5439  0076BA  26D9               	addwf	fsr2l,f,c
  5440  0076BC  51A0               	movf	(_pBDTEntryIn+1)& (0+255),w,b
  5441  0076BE  22DA               	addwfc	fsr2h,f,c
  5442  0076C0  0E00               	movlw	0
  5443  0076C2  6EDF               	movwf	indf2,c
  5444                           
  5445                           ; BSR set to: 0
  5446                           ;usb_device.c: 2023: pBDTEntryIn[0]->STAT.Val = 0x80|0x40|0x08;
  5447  0076C4  C09F  FFD9         	movff	_pBDTEntryIn,fsr2l
  5448  0076C8  C0A0  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  5449  0076CC  0EC8               	movlw	200
  5450  0076CE  6EDF               	movwf	indf2,c
  5451                           
  5452                           ; BSR set to: 0
  5453                           ;usb_device.c: 2028: pBDTEntryEP0OutNext->CNT = 8;
  5454  0076D0  EE20 F001          	lfsr	2,1
  5455  0076D4  5054               	movf	_pBDTEntryEP0OutNext^0,w,c
  5456  0076D6  26D9               	addwf	fsr2l,f,c
  5457  0076D8  5055               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
  5458  0076DA  22DA               	addwfc	fsr2h,f,c
  5459  0076DC  0E08               	movlw	8
  5460  0076DE  6EDF               	movwf	indf2,c
  5461                           
  5462                           ; BSR set to: 0
  5463                           ;usb_device.c: 2029: pBDTEntryEP0OutNext->ADR = (BYTE*)&CtrlTrfData;
  5464  0076E0  EE20 F002          	lfsr	2,2
  5465  0076E4  5054               	movf	_pBDTEntryEP0OutNext^0,w,c
  5466  0076E6  26D9               	addwf	fsr2l,f,c
  5467  0076E8  5055               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
  5468  0076EA  22DA               	addwfc	fsr2h,f,c
  5469  0076EC  0E20               	movlw	32
  5470  0076EE  6EDE               	movwf	postinc2,c
  5471  0076F0  0E05               	movlw	5
  5472  0076F2  6EDD               	movwf	postdec2,c
  5473                           
  5474                           ; BSR set to: 0
  5475                           ;usb_device.c: 2030: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x40|0x08;
  5476  0076F4  C054  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  5477  0076F8  C055  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  5478  0076FC  0EC8               	movlw	200
  5479  0076FE  6EDF               	movwf	indf2,c
  5480                           
  5481                           ; BSR set to: 0
  5482  007700  0012               	return		;funcret
  5483  007702                     __end_of_USBCtrlEPServiceComplete:
  5484                           	callstack 0
  5485                           
  5486 ;; *************** function _USBCheckStdRequest *****************
  5487 ;; Defined at:
  5488 ;;		line 1563 in file "../USB Stack/usb_device.c"
  5489 ;; Parameters:    Size  Location     Type
  5490 ;;		None
  5491 ;; Auto vars:     Size  Location     Type
  5492 ;;		None
  5493 ;; Return value:  Size  Location     Type
  5494 ;;                  1    wreg      void 
  5495 ;; Registers used:
  5496 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5497 ;; Tracked objects:
  5498 ;;		On entry : 0/0
  5499 ;;		On exit  : 0/0
  5500 ;;		Unchanged: 0/0
  5501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  5502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  5503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0
  5504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  5505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0
  5506 ;;Total ram usage:        0 bytes
  5507 ;; Hardware stack levels used: 1
  5508 ;; Hardware stack levels required when called: 5
  5509 ;; This function calls:
  5510 ;;		_USBStdFeatureReqHandler
  5511 ;;		_USBStdGetDscHandler
  5512 ;;		_USBStdGetStatusHandler
  5513 ;;		_USBStdSetCfgHandler
  5514 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5515 ;; This function is called by:
  5516 ;;		_USBCtrlTrfSetupHandler
  5517 ;; This function uses a non-reentrant model
  5518 ;;
  5519                           
  5520                           	psect	text23
  5521  006724                     __ptext23:
  5522                           	callstack 0
  5523  006724                     _USBCheckStdRequest:
  5524                           	callstack 22
  5525                           
  5526                           ;usb_device.c: 1565: if(SetupPkt.RequestType != (0x00>>5)) return;
  5527                           
  5528                           ; BSR set to: 0
  5529                           ;incstack = 0
  5530  006724  0105               	movlb	5	; () banked
  5531  006726  3900               	swapf	0,w,b	;volatile
  5532  006728  32E8               	rrcf	wreg,f,c
  5533  00672A  0B03               	andlw	3
  5534  00672C  0900               	iorlw	0
  5535  00672E  A4D8               	btfss	status,2,c
  5536  006730  0012               	return	
  5537  006732  D039               	goto	l3982
  5538  006734                     l320:
  5539                           
  5540                           ; BSR set to: 5
  5541                           ;usb_device.c: 1570: inPipes[0].info.bits.busy = 1;
  5542  006734  8E51               	bsf	(_inPipes+3)^0,7,c
  5543                           
  5544                           ; BSR set to: 5
  5545                           ;usb_device.c: 1571: USBDeviceState = ADR_PENDING_STATE;
  5546  006736  0E08               	movlw	8
  5547  006738  6E5A               	movwf	_USBDeviceState^0,c
  5548                           
  5549                           ;usb_device.c: 1573: break;
  5550  00673A  0012               	return	
  5551  00673C                     l3952:
  5552                           
  5553                           ; BSR set to: 5
  5554                           ;usb_device.c: 1575: USBStdGetDscHandler();
  5555  00673C  ECA8  F035         	call	_USBStdGetDscHandler	;wreg free
  5556                           
  5557                           ;usb_device.c: 1576: break;
  5558  006740  0012               	return	
  5559  006742                     l3954:
  5560                           
  5561                           ; BSR set to: 5
  5562                           ;usb_device.c: 1578: USBStdSetCfgHandler();
  5563  006742  EC6C  F030         	call	_USBStdSetCfgHandler	;wreg free
  5564                           
  5565                           ;usb_device.c: 1579: break;
  5566  006746  0012               	return	
  5567  006748                     l3956:
  5568                           
  5569                           ; BSR set to: 5
  5570                           ;usb_device.c: 1581: inPipes[0].pSrc.bRam = (BYTE*)&USBActiveConfiguration;
  5571  006748  0E5F               	movlw	low _USBActiveConfiguration
  5572  00674A  6E4E               	movwf	_inPipes^0,c
  5573  00674C  0E00               	movlw	high _USBActiveConfiguration
  5574  00674E  6E4F               	movwf	(_inPipes+1)^0,c
  5575  006750                     l3958:
  5576                           
  5577                           ; BSR set to: 5
  5578                           ;usb_device.c: 1582: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  5579  006750  8051               	bsf	(_inPipes+3)^0,0,c
  5580                           
  5581                           ; BSR set to: 5
  5582                           ;usb_device.c: 1583: inPipes[0].wCount.v[0] = 1;
  5583  006752  0E01               	movlw	1
  5584  006754  6E52               	movwf	(_inPipes+4)^0,c
  5585                           
  5586                           ; BSR set to: 5
  5587                           ;usb_device.c: 1584: inPipes[0].info.bits.busy = 1;
  5588  006756  8E51               	bsf	(_inPipes+3)^0,7,c
  5589                           
  5590                           ;usb_device.c: 1585: break;
  5591  006758  0012               	return	
  5592  00675A                     l3964:
  5593                           
  5594                           ; BSR set to: 5
  5595                           ;usb_device.c: 1587: USBStdGetStatusHandler();
  5596  00675A  ECEE  F031         	call	_USBStdGetStatusHandler	;wreg free
  5597                           
  5598                           ;usb_device.c: 1588: break;
  5599  00675E  0012               	return	
  5600  006760                     l3966:
  5601                           
  5602                           ; BSR set to: 5
  5603                           ;usb_device.c: 1590: case 3:;usb_device.c: 1591: USBStdFeatureReqHandler();
  5604  006760  ECE7  F037         	call	_USBStdFeatureReqHandler	;wreg free
  5605                           
  5606                           ;usb_device.c: 1592: break;
  5607  006764  0012               	return	
  5608  006766                     l3968:
  5609                           
  5610                           ; BSR set to: 5
  5611                           ;usb_device.c: 1594: inPipes[0].pSrc.bRam = (BYTE*)&USBAlternateInterface[SetupPkt.bIntf
      +                          ID];
  5612  006766  0E5C               	movlw	low _USBAlternateInterface
  5613  006768  2504               	addwf	4,w,b	;volatile
  5614  00676A  6E4E               	movwf	_inPipes^0,c
  5615  00676C  6A4F               	clrf	(_inPipes+1)^0,c
  5616  00676E  0E00               	movlw	high _USBAlternateInterface
  5617  006770  224F               	addwfc	(_inPipes+1)^0,f,c
  5618  006772  D7EE               	goto	l3958
  5619  006774                     l329:
  5620                           
  5621                           ; BSR set to: 5
  5622                           ;usb_device.c: 1600: inPipes[0].info.bits.busy = 1;
  5623  006774  8E51               	bsf	(_inPipes+3)^0,7,c
  5624                           
  5625                           ; BSR set to: 5
  5626                           ;usb_device.c: 1601: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  5627  006776  0E5C               	movlw	low _USBAlternateInterface
  5628  006778  2504               	addwf	4,w,b	;volatile
  5629  00677A  6ED9               	movwf	fsr2l,c
  5630  00677C  6ADA               	clrf	fsr2h,c
  5631  00677E  0E00               	movlw	high _USBAlternateInterface
  5632  006780  22DA               	addwfc	fsr2h,f,c
  5633  006782  C502 FFDF          	movff	1282,indf2	;volatile
  5634                           
  5635                           ;usb_device.c: 1602: break;
  5636  006786  0012               	return	
  5637  006788                     l3978:
  5638                           
  5639                           ; BSR set to: 5
  5640                           ;usb_device.c: 1604: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  5641  006788  0E00               	movlw	0
  5642  00678A  6E0D               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
  5643  00678C  0E02               	movlw	2
  5644  00678E  6E0C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
  5645  006790  0E00               	movlw	0
  5646  006792  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^0,c
  5647  006794  0E00               	movlw	0
  5648  006796  6E0F               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^0,c
  5649  006798  0E00               	movlw	0
  5650  00679A  6E11               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
  5651  00679C  0E00               	movlw	0
  5652  00679E  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
  5653  0067A0  ECDC  F030         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5654                           
  5655                           ;usb_device.c: 1605: break;
  5656  0067A4  0012               	return	
  5657  0067A6                     l3982:
  5658                           
  5659                           ; BSR set to: 5
  5660  0067A6  5101               	movf	1,w,b	;volatile
  5661                           
  5662                           ; Switch size 1, requested type "simple"
  5663                           ; Number of cases is 11, Range of values is 0 to 12
  5664                           ; switch strategies available:
  5665                           ; Name         Instructions Cycles
  5666                           ; simple_byte           34    18 (average)
  5667                           ;	Chosen strategy is simple_byte
  5668  0067A8  0A00               	xorlw	0	; case 0
  5669  0067AA  B4D8               	btfsc	status,2,c
  5670  0067AC  D7D6               	goto	l3964
  5671  0067AE  0A01               	xorlw	1	; case 1
  5672  0067B0  B4D8               	btfsc	status,2,c
  5673  0067B2  D7D6               	goto	l3966
  5674  0067B4  0A02               	xorlw	2	; case 3
  5675  0067B6  B4D8               	btfsc	status,2,c
  5676  0067B8  D7D3               	goto	l3966
  5677  0067BA  0A06               	xorlw	6	; case 5
  5678  0067BC  B4D8               	btfsc	status,2,c
  5679  0067BE  D7BA               	goto	l320
  5680  0067C0  0A03               	xorlw	3	; case 6
  5681  0067C2  B4D8               	btfsc	status,2,c
  5682  0067C4  D7BB               	goto	l3952
  5683  0067C6  0A01               	xorlw	1	; case 7
  5684  0067C8  B4D8               	btfsc	status,2,c
  5685  0067CA  D7DE               	goto	l3978
  5686  0067CC  0A0F               	xorlw	15	; case 8
  5687  0067CE  B4D8               	btfsc	status,2,c
  5688  0067D0  D7BB               	goto	l3956
  5689  0067D2  0A01               	xorlw	1	; case 9
  5690  0067D4  B4D8               	btfsc	status,2,c
  5691  0067D6  D7B5               	goto	l3954
  5692  0067D8  0A03               	xorlw	3	; case 10
  5693  0067DA  B4D8               	btfsc	status,2,c
  5694  0067DC  D7C4               	goto	l3968
  5695  0067DE  0A01               	xorlw	1	; case 11
  5696  0067E0  B4D8               	btfsc	status,2,c
  5697  0067E2  D7C8               	goto	l329
  5698  0067E4  0A07               	xorlw	7	; case 12
  5699  0067E6  0012               	return	
  5700  0067E8                     __end_of_USBCheckStdRequest:
  5701                           	callstack 0
  5702                           
  5703 ;; *************** function _USBStdSetCfgHandler *****************
  5704 ;; Defined at:
  5705 ;;		line 2234 in file "../USB Stack/usb_device.c"
  5706 ;; Parameters:    Size  Location     Type
  5707 ;;		None
  5708 ;; Auto vars:     Size  Location     Type
  5709 ;;		None
  5710 ;; Return value:  Size  Location     Type
  5711 ;;                  1    wreg      void 
  5712 ;; Registers used:
  5713 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5714 ;; Tracked objects:
  5715 ;;		On entry : 0/0
  5716 ;;		On exit  : 0/0
  5717 ;;		Unchanged: 0/0
  5718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  5719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  5720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0
  5721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  5722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0
  5723 ;;Total ram usage:        0 bytes
  5724 ;; Hardware stack levels used: 1
  5725 ;; Hardware stack levels required when called: 4
  5726 ;; This function calls:
  5727 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5728 ;;		_memset
  5729 ;; This function is called by:
  5730 ;;		_USBCheckStdRequest
  5731 ;; This function uses a non-reentrant model
  5732 ;;
  5733                           
  5734                           	psect	text24
  5735  0060D8                     __ptext24:
  5736                           	callstack 0
  5737  0060D8                     _USBStdSetCfgHandler:
  5738                           	callstack 22
  5739                           
  5740                           ;usb_device.c: 2237: inPipes[0].info.bits.busy = 1;
  5741                           
  5742                           ;incstack = 0
  5743  0060D8  8E51               	bsf	(_inPipes+3)^0,7,c
  5744                           
  5745                           ;usb_device.c: 2240: memset((void*)&UEP1,0x00,(3-1));
  5746  0060DA  0E71               	movlw	113
  5747  0060DC  6E01               	movwf	memset@p1^0,c
  5748  0060DE  0E0F               	movlw	15
  5749  0060E0  6E02               	movwf	(memset@p1+1)^0,c
  5750  0060E2  0E00               	movlw	0
  5751  0060E4  6E04               	movwf	(memset@c+1)^0,c
  5752  0060E6  0E00               	movlw	0
  5753  0060E8  6E03               	movwf	memset@c^0,c
  5754  0060EA  0E00               	movlw	0
  5755  0060EC  6E06               	movwf	(memset@n+1)^0,c
  5756  0060EE  0E02               	movlw	2
  5757  0060F0  6E05               	movwf	memset@n^0,c
  5758  0060F2  ECF0  F02E         	call	_memset	;wreg free
  5759                           
  5760                           ;usb_device.c: 2243: memset((void*)&USBAlternateInterface,0x00,1);
  5761  0060F6  0E5C               	movlw	low _USBAlternateInterface
  5762  0060F8  6E01               	movwf	memset@p1^0,c
  5763  0060FA  0E00               	movlw	high _USBAlternateInterface
  5764  0060FC  6E02               	movwf	(memset@p1+1)^0,c
  5765  0060FE  0E00               	movlw	0
  5766  006100  6E04               	movwf	(memset@c+1)^0,c
  5767  006102  0E00               	movlw	0
  5768  006104  6E03               	movwf	memset@c^0,c
  5769  006106  0E00               	movlw	0
  5770  006108  6E06               	movwf	(memset@n+1)^0,c
  5771  00610A  0E01               	movlw	1
  5772  00610C  6E05               	movwf	memset@n^0,c
  5773  00610E  ECF0  F02E         	call	_memset	;wreg free
  5774                           
  5775                           ;usb_device.c: 2246: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  5776  006112  C502 F05F          	movff	1282,_USBActiveConfiguration	;volatile
  5777                           
  5778                           ;usb_device.c: 2249: if(USBActiveConfiguration == 0)
  5779  006116  505F               	movf	_USBActiveConfiguration^0,w,c
  5780  006118  A4D8               	btfss	status,2,c
  5781  00611A  D003               	goto	l3836
  5782                           
  5783                           ;usb_device.c: 2250: {;usb_device.c: 2252: USBDeviceState = ADDRESS_STATE;
  5784  00611C  0E10               	movlw	16
  5785  00611E  6E5A               	movwf	_USBDeviceState^0,c
  5786                           
  5787                           ;usb_device.c: 2253: }
  5788  006120  0012               	return	
  5789  006122                     l3836:
  5790                           
  5791                           ;usb_device.c: 2254: else;usb_device.c: 2255: {;usb_device.c: 2257: USBDeviceState = CON
      +                          FIGURED_STATE;
  5792  006122  0E20               	movlw	32
  5793  006124  6E5A               	movwf	_USBDeviceState^0,c
  5794                           
  5795                           ;usb_device.c: 2259: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  5796  006126  0E00               	movlw	0
  5797  006128  6E0D               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
  5798  00612A  0E01               	movlw	1
  5799  00612C  6E0C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
  5800  00612E  0E5F               	movlw	low _USBActiveConfiguration
  5801  006130  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^0,c
  5802  006132  0E00               	movlw	high _USBActiveConfiguration
  5803  006134  6E0F               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^0,c
  5804  006136  0E00               	movlw	0
  5805  006138  6E11               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
  5806  00613A  0E01               	movlw	1
  5807  00613C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
  5808  00613E  ECDC  F030         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5809  006142  0012               	return		;funcret
  5810  006144                     __end_of_USBStdSetCfgHandler:
  5811                           	callstack 0
  5812                           
  5813 ;; *************** function _memset *****************
  5814 ;; Defined at:
  5815 ;;		line 8 in file "/Applications/microchip/xc8/v2.32/pic/sources/c90/common/memset.c"
  5816 ;; Parameters:    Size  Location     Type
  5817 ;;  p1              2    0[COMRAM] PTR void 
  5818 ;;		 -> USBAlternateInterface(1), UEP1(1), 
  5819 ;;  c               2    2[COMRAM] int 
  5820 ;;  n               2    4[COMRAM] unsigned int 
  5821 ;; Auto vars:     Size  Location     Type
  5822 ;;  p               2    6[COMRAM] PTR unsigned char 
  5823 ;;		 -> USBAlternateInterface(1), UEP1(1), 
  5824 ;; Return value:  Size  Location     Type
  5825 ;;                  2    0[COMRAM] PTR void 
  5826 ;; Registers used:
  5827 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5828 ;; Tracked objects:
  5829 ;;		On entry : 0/0
  5830 ;;		On exit  : 0/0
  5831 ;;		Unchanged: 0/0
  5832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  5833 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0
  5834 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0
  5835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  5836 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0
  5837 ;;Total ram usage:        8 bytes
  5838 ;; Hardware stack levels used: 1
  5839 ;; This function calls:
  5840 ;;		Nothing
  5841 ;; This function is called by:
  5842 ;;		_USBDeviceInit
  5843 ;;		_USBStdSetCfgHandler
  5844 ;; This function uses a non-reentrant model
  5845 ;;
  5846                           
  5847                           	psect	text25
  5848  005DE0                     __ptext25:
  5849                           	callstack 0
  5850  005DE0                     _memset:
  5851                           	callstack 28
  5852                           
  5853                           ;incstack = 0
  5854  005DE0  C001  F007         	movff	memset@p1,memset@p
  5855  005DE4  C002  F008         	movff	memset@p1+1,memset@p+1
  5856  005DE8  D008               	goto	l3720
  5857  005DEA                     l3716:
  5858  005DEA  C007  FFD9         	movff	memset@p,fsr2l
  5859  005DEE  C008  FFDA         	movff	memset@p+1,fsr2h
  5860  005DF2  C003  FFDF         	movff	memset@c,indf2
  5861  005DF6  4A07               	infsnz	memset@p^0,f,c
  5862  005DF8  2A08               	incf	(memset@p+1)^0,f,c
  5863  005DFA                     l3720:
  5864  005DFA  0605               	decf	memset@n^0,f,c
  5865  005DFC  A0D8               	btfss	status,0,c
  5866  005DFE  0606               	decf	(memset@n+1)^0,f,c
  5867  005E00  2805               	incf	memset@n^0,w,c
  5868  005E02  E1F3               	bnz	l3716
  5869  005E04  2806               	incf	(memset@n+1)^0,w,c
  5870  005E06  B4D8               	btfsc	status,2,c
  5871  005E08  0012               	return	
  5872  005E0A  D7EF               	goto	l3716
  5873  005E0C                     __end_of_memset:
  5874                           	callstack 0
  5875                           
  5876 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  5877 ;; Defined at:
  5878 ;;		line 117 in file "../usb_callback.c"
  5879 ;; Parameters:    Size  Location     Type
  5880 ;;  event           2   11[COMRAM] enum E3680
  5881 ;;  pdata           2   13[COMRAM] PTR void 
  5882 ;;		 -> USTATcopy(1), NULL(0), USBActiveConfiguration(1), 
  5883 ;;  size            2   15[COMRAM] unsigned short 
  5884 ;; Auto vars:     Size  Location     Type
  5885 ;;		None
  5886 ;; Return value:  Size  Location     Type
  5887 ;;                  1    wreg      enum E3
  5888 ;; Registers used:
  5889 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5890 ;; Tracked objects:
  5891 ;;		On entry : 0/0
  5892 ;;		On exit  : 0/0
  5893 ;;		Unchanged: 0/0
  5894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  5895 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0
  5896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0
  5897 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0
  5898 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0
  5899 ;;Total ram usage:        8 bytes
  5900 ;; Hardware stack levels used: 1
  5901 ;; Hardware stack levels required when called: 3
  5902 ;; This function calls:
  5903 ;;		_USBCBCheckOtherReq
  5904 ;;		_USBCBErrorHandler
  5905 ;;		_USBCBInitEP
  5906 ;;		_USBCBStdSetDscHandler
  5907 ;;		_USBCBSuspend
  5908 ;;		_USBCBWakeFromSuspend
  5909 ;;		_USBCB_SOF_Handler
  5910 ;; This function is called by:
  5911 ;;		_USBDeviceTasks
  5912 ;;		_USBSuspend
  5913 ;;		_USBWakeFromSuspend
  5914 ;;		_USBCtrlTrfSetupHandler
  5915 ;;		_USBCheckStdRequest
  5916 ;;		_USBStdSetCfgHandler
  5917 ;; This function uses a non-reentrant model
  5918 ;;
  5919                           
  5920                           	psect	text26
  5921  0061B8                     __ptext26:
  5922                           	callstack 0
  5923  0061B8                     _USER_USB_CALLBACK_EVENT_HANDLER:
  5924                           	callstack 26
  5925                           
  5926                           ;usb_callback.c: 119: switch(event)
  5927                           
  5928                           ;incstack = 0
  5929  0061B8  D017               	goto	l3740
  5930  0061BA                     l3724:
  5931                           
  5932                           ;usb_callback.c: 122: USBCBInitEP();
  5933  0061BA  ECA7  F02F         	call	_USBCBInitEP	;wreg free
  5934                           
  5935                           ;usb_callback.c: 123: break;
  5936  0061BE  0012               	return	
  5937  0061C0                     l3726:
  5938                           
  5939                           ;usb_callback.c: 125: USBCBStdSetDscHandler();
  5940  0061C0  ECC2  F02E         	call	_USBCBStdSetDscHandler	;wreg free
  5941                           
  5942                           ;usb_callback.c: 126: break;
  5943  0061C4  0012               	return	
  5944  0061C6                     l3728:
  5945                           
  5946                           ;usb_callback.c: 128: USBCBCheckOtherReq();
  5947  0061C6  EC88  F02F         	call	_USBCBCheckOtherReq	;wreg free
  5948                           
  5949                           ;usb_callback.c: 129: break;
  5950  0061CA  0012               	return	
  5951  0061CC                     l3730:
  5952                           
  5953                           ;usb_callback.c: 131: USBCB_SOF_Handler();
  5954  0061CC  ECC5  F02E         	call	_USBCB_SOF_Handler	;wreg free
  5955                           
  5956                           ;usb_callback.c: 132: break;
  5957  0061D0  0012               	return	
  5958  0061D2                     l3732:
  5959                           
  5960                           ;usb_callback.c: 134: USBCBSuspend();
  5961  0061D2  ECC3  F02E         	call	_USBCBSuspend	;wreg free
  5962                           
  5963                           ;usb_callback.c: 135: break;
  5964  0061D6  0012               	return	
  5965  0061D8                     l3734:
  5966                           
  5967                           ;usb_callback.c: 137: USBCBWakeFromSuspend();
  5968  0061D8  ECC4  F02E         	call	_USBCBWakeFromSuspend	;wreg free
  5969                           
  5970                           ;usb_callback.c: 138: break;
  5971  0061DC  0012               	return	
  5972  0061DE                     l3736:
  5973                           
  5974                           ;usb_callback.c: 140: USBCBErrorHandler();
  5975  0061DE  ECC1  F02E         	call	_USBCBErrorHandler	;wreg free
  5976                           
  5977                           ;usb_callback.c: 141: break;
  5978  0061E2  0012               	return	
  5979  0061E4                     l762:
  5980  0061E4  F000               	nop		;# 
  5981                           
  5982                           ;usb_callback.c: 144: break;
  5983  0061E6  0012               	return	
  5984  0061E8                     l3740:
  5985  0061E8  C00C  F012         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
  5986  0061EC  C00D  F013         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
  5987                           
  5988                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  5989                           ; Switch size 1, requested type "simple"
  5990                           ; Number of cases is 2, Range of values is 0 to 127
  5991                           ; switch strategies available:
  5992                           ; Name         Instructions Cycles
  5993                           ; simple_byte            7     4 (average)
  5994                           ;	Chosen strategy is simple_byte
  5995  0061F0  5013               	movf	(??_USER_USB_CALLBACK_EVENT_HANDLER+1)^0,w,c
  5996  0061F2  0A00               	xorlw	0	; case 0
  5997  0061F4  B4D8               	btfsc	status,2,c
  5998  0061F6  D004               	goto	l5310
  5999  0061F8  0A7F               	xorlw	127	; case 127
  6000  0061FA  A4D8               	btfss	status,2,c
  6001  0061FC  0012               	return	
  6002  0061FE  D017               	goto	l5312
  6003  006200                     l5310:
  6004                           
  6005                           ; Switch size 1, requested type "simple"
  6006                           ; Number of cases is 7, Range of values is 1 to 117
  6007                           ; switch strategies available:
  6008                           ; Name         Instructions Cycles
  6009                           ; simple_byte           22    12 (average)
  6010                           ;	Chosen strategy is simple_byte
  6011  006200  5012               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER^0,w,c
  6012  006202  0A01               	xorlw	1	; case 1
  6013  006204  B4D8               	btfsc	status,2,c
  6014  006206  D7D9               	goto	l3724
  6015  006208  0A03               	xorlw	3	; case 2
  6016  00620A  B4D8               	btfsc	status,2,c
  6017  00620C  D7D9               	goto	l3726
  6018  00620E  0A01               	xorlw	1	; case 3
  6019  006210  B4D8               	btfsc	status,2,c
  6020  006212  D7D9               	goto	l3728
  6021  006214  0A71               	xorlw	113	; case 114
  6022  006216  B4D8               	btfsc	status,2,c
  6023  006218  D7E5               	goto	l762
  6024  00621A  0A01               	xorlw	1	; case 115
  6025  00621C  B4D8               	btfsc	status,2,c
  6026  00621E  D7D6               	goto	l3730
  6027  006220  0A07               	xorlw	7	; case 116
  6028  006222  B4D8               	btfsc	status,2,c
  6029  006224  D7D9               	goto	l3734
  6030  006226  0A01               	xorlw	1	; case 117
  6031  006228  A4D8               	btfss	status,2,c
  6032  00622A  0012               	return	
  6033  00622C  D7D2               	goto	l3732
  6034  00622E                     l5312:
  6035                           
  6036                           ; Switch size 1, requested type "simple"
  6037                           ; Number of cases is 1, Range of values is 255 to 255
  6038                           ; switch strategies available:
  6039                           ; Name         Instructions Cycles
  6040                           ; simple_byte            4     3 (average)
  6041                           ;	Chosen strategy is simple_byte
  6042  00622E  5012               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER^0,w,c
  6043  006230  0AFF               	xorlw	255	; case 255
  6044  006232  A4D8               	btfss	status,2,c
  6045  006234  0012               	return	
  6046  006236  D7D3               	goto	l3736
  6047  006238                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
  6048                           	callstack 0
  6049                           
  6050 ;; *************** function _USBCB_SOF_Handler *****************
  6051 ;; Defined at:
  6052 ;;		line 57 in file "../usb_callback.c"
  6053 ;; Parameters:    Size  Location     Type
  6054 ;;		None
  6055 ;; Auto vars:     Size  Location     Type
  6056 ;;		None
  6057 ;; Return value:  Size  Location     Type
  6058 ;;                  1    wreg      void 
  6059 ;; Registers used:
  6060 ;;		None
  6061 ;; Tracked objects:
  6062 ;;		On entry : 0/0
  6063 ;;		On exit  : 0/0
  6064 ;;		Unchanged: 0/0
  6065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  6066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  6067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0
  6068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  6069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0
  6070 ;;Total ram usage:        0 bytes
  6071 ;; Hardware stack levels used: 1
  6072 ;; This function calls:
  6073 ;;		Nothing
  6074 ;; This function is called by:
  6075 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6076 ;; This function uses a non-reentrant model
  6077 ;;
  6078                           
  6079                           	psect	text27
  6080  005D8A                     __ptext27:
  6081                           	callstack 0
  6082  005D8A                     _USBCB_SOF_Handler:
  6083                           	callstack 28
  6084                           
  6085                           ;incstack = 0
  6086  005D8A  0012               	return		;funcret
  6087  005D8C                     __end_of_USBCB_SOF_Handler:
  6088                           	callstack 0
  6089                           
  6090 ;; *************** function _USBCBWakeFromSuspend *****************
  6091 ;; Defined at:
  6092 ;;		line 52 in file "../usb_callback.c"
  6093 ;; Parameters:    Size  Location     Type
  6094 ;;		None
  6095 ;; Auto vars:     Size  Location     Type
  6096 ;;		None
  6097 ;; Return value:  Size  Location     Type
  6098 ;;                  1    wreg      void 
  6099 ;; Registers used:
  6100 ;;		None
  6101 ;; Tracked objects:
  6102 ;;		On entry : 0/0
  6103 ;;		On exit  : 0/0
  6104 ;;		Unchanged: 0/0
  6105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  6106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  6107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0
  6108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  6109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0
  6110 ;;Total ram usage:        0 bytes
  6111 ;; Hardware stack levels used: 1
  6112 ;; This function calls:
  6113 ;;		Nothing
  6114 ;; This function is called by:
  6115 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6116 ;; This function uses a non-reentrant model
  6117 ;;
  6118                           
  6119                           	psect	text28
  6120  005D88                     __ptext28:
  6121                           	callstack 0
  6122  005D88                     _USBCBWakeFromSuspend:
  6123                           	callstack 28
  6124                           
  6125                           ;incstack = 0
  6126  005D88  0012               	return		;funcret
  6127  005D8A                     __end_of_USBCBWakeFromSuspend:
  6128                           	callstack 0
  6129                           
  6130 ;; *************** function _USBCBSuspend *****************
  6131 ;; Defined at:
  6132 ;;		line 40 in file "../usb_callback.c"
  6133 ;; Parameters:    Size  Location     Type
  6134 ;;		None
  6135 ;; Auto vars:     Size  Location     Type
  6136 ;;		None
  6137 ;; Return value:  Size  Location     Type
  6138 ;;                  1    wreg      void 
  6139 ;; Registers used:
  6140 ;;		None
  6141 ;; Tracked objects:
  6142 ;;		On entry : 0/0
  6143 ;;		On exit  : 0/0
  6144 ;;		Unchanged: 0/0
  6145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  6146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  6147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0
  6148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  6149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0
  6150 ;;Total ram usage:        0 bytes
  6151 ;; Hardware stack levels used: 1
  6152 ;; This function calls:
  6153 ;;		Nothing
  6154 ;; This function is called by:
  6155 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6156 ;; This function uses a non-reentrant model
  6157 ;;
  6158                           
  6159                           	psect	text29
  6160  005D86                     __ptext29:
  6161                           	callstack 0
  6162  005D86                     _USBCBSuspend:
  6163                           	callstack 28
  6164                           
  6165                           ;incstack = 0
  6166  005D86  0012               	return		;funcret
  6167  005D88                     __end_of_USBCBSuspend:
  6168                           	callstack 0
  6169                           
  6170 ;; *************** function _USBCBStdSetDscHandler *****************
  6171 ;; Defined at:
  6172 ;;		line 85 in file "../usb_callback.c"
  6173 ;; Parameters:    Size  Location     Type
  6174 ;;		None
  6175 ;; Auto vars:     Size  Location     Type
  6176 ;;		None
  6177 ;; Return value:  Size  Location     Type
  6178 ;;                  1    wreg      void 
  6179 ;; Registers used:
  6180 ;;		None
  6181 ;; Tracked objects:
  6182 ;;		On entry : 0/0
  6183 ;;		On exit  : 0/0
  6184 ;;		Unchanged: 0/0
  6185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  6186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  6187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0
  6188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  6189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0
  6190 ;;Total ram usage:        0 bytes
  6191 ;; Hardware stack levels used: 1
  6192 ;; This function calls:
  6193 ;;		Nothing
  6194 ;; This function is called by:
  6195 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6196 ;; This function uses a non-reentrant model
  6197 ;;
  6198                           
  6199                           	psect	text30
  6200  005D84                     __ptext30:
  6201                           	callstack 0
  6202  005D84                     _USBCBStdSetDscHandler:
  6203                           	callstack 28
  6204                           
  6205                           ;incstack = 0
  6206  005D84  0012               	return		;funcret
  6207  005D86                     __end_of_USBCBStdSetDscHandler:
  6208                           	callstack 0
  6209                           
  6210 ;; *************** function _USBCBInitEP *****************
  6211 ;; Defined at:
  6212 ;;		line 91 in file "../usb_callback.c"
  6213 ;; Parameters:    Size  Location     Type
  6214 ;;		None
  6215 ;; Auto vars:     Size  Location     Type
  6216 ;;		None
  6217 ;; Return value:  Size  Location     Type
  6218 ;;                  1    wreg      void 
  6219 ;; Registers used:
  6220 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6221 ;; Tracked objects:
  6222 ;;		On entry : 0/0
  6223 ;;		On exit  : 0/0
  6224 ;;		Unchanged: 0/0
  6225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  6226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  6227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0
  6228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  6229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0
  6230 ;;Total ram usage:        0 bytes
  6231 ;; Hardware stack levels used: 1
  6232 ;; Hardware stack levels required when called: 2
  6233 ;; This function calls:
  6234 ;;		_USBEnableEndpoint
  6235 ;;		_USBTransferOnePacket
  6236 ;; This function is called by:
  6237 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6238 ;; This function uses a non-reentrant model
  6239 ;;
  6240                           
  6241                           	psect	text31
  6242  005F4E                     __ptext31:
  6243                           	callstack 0
  6244  005F4E                     _USBCBInitEP:
  6245                           	callstack 26
  6246                           
  6247                           ;usb_callback.c: 94: USBEnableEndpoint(1,0x04|0x02|0x10|0x08);
  6248                           
  6249                           ;incstack = 0
  6250  005F4E  0E1E               	movlw	30
  6251  005F50  6E08               	movwf	USBEnableEndpoint@options^0,c
  6252  005F52  0E01               	movlw	1
  6253  005F54  EC50  F02F         	call	_USBEnableEndpoint
  6254                           
  6255                           ;usb_callback.c: 95: USBEnableEndpoint(2,0x04|0x02|0x10|0x08);
  6256  005F58  0E1E               	movlw	30
  6257  005F5A  6E08               	movwf	USBEnableEndpoint@options^0,c
  6258  005F5C  0E02               	movlw	2
  6259  005F5E  EC50  F02F         	call	_USBEnableEndpoint
  6260                           
  6261                           ;usb_callback.c: 96: USBEnableEndpoint(3,0x04|0x02|0x10|0x08);
  6262  005F62  0E1E               	movlw	30
  6263  005F64  6E08               	movwf	USBEnableEndpoint@options^0,c
  6264  005F66  0E03               	movlw	3
  6265  005F68  EC50  F02F         	call	_USBEnableEndpoint
  6266                           
  6267                           ;usb_callback.c: 98: lastOUTTransmission_k1 = USBTransferOnePacket(3,0,(BYTE*)&hid_repor
      +                          t_out_k1,1);
  6268  005F6C  0E00               	movlw	0
  6269  005F6E  6E01               	movwf	USBTransferOnePacket@dir^0,c
  6270  005F70  0E7A               	movlw	122
  6271  005F72  6E02               	movwf	USBTransferOnePacket@data^0,c
  6272  005F74  0E06               	movlw	6
  6273  005F76  6E03               	movwf	(USBTransferOnePacket@data+1)^0,c
  6274  005F78  0E01               	movlw	1
  6275  005F7A  6E04               	movwf	USBTransferOnePacket@len^0,c
  6276  005F7C  0E03               	movlw	3
  6277  005F7E  EC38  F032         	call	_USBTransferOnePacket
  6278  005F82  C001  F0B7         	movff	?_USBTransferOnePacket,_lastOUTTransmission_k1
  6279  005F86  C002  F0B8         	movff	?_USBTransferOnePacket+1,_lastOUTTransmission_k1+1
  6280  005F8A  0012               	return		;funcret
  6281  005F8C                     __end_of_USBCBInitEP:
  6282                           	callstack 0
  6283                           
  6284 ;; *************** function _USBTransferOnePacket *****************
  6285 ;; Defined at:
  6286 ;;		line 2480 in file "../USB Stack/usb_device.c"
  6287 ;; Parameters:    Size  Location     Type
  6288 ;;  ep              1    wreg     unsigned char 
  6289 ;;  dir             1    0[COMRAM] unsigned char 
  6290 ;;  data            2    1[COMRAM] PTR unsigned char 
  6291 ;;		 -> hid_report_in_k1(8), hid_report_out_k1(1), joystick_input_j2(7), joystick_input_j1(7), 
  6292 ;;  len             1    3[COMRAM] unsigned char 
  6293 ;; Auto vars:     Size  Location     Type
  6294 ;;  ep              1    4[COMRAM] unsigned char 
  6295 ;;  handle          2    5[COMRAM] PTR volatile struct __BD
  6296 ;;		 -> BDT(64), 
  6297 ;; Return value:  Size  Location     Type
  6298 ;;                  2    0[COMRAM] PTR void 
  6299 ;; Registers used:
  6300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6301 ;; Tracked objects:
  6302 ;;		On entry : 0/0
  6303 ;;		On exit  : 0/0
  6304 ;;		Unchanged: 0/0
  6305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  6306 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0
  6307 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0
  6308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  6309 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0
  6310 ;;Total ram usage:        7 bytes
  6311 ;; Hardware stack levels used: 1
  6312 ;; This function calls:
  6313 ;;		Nothing
  6314 ;; This function is called by:
  6315 ;;		_processJoystick_j1
  6316 ;;		_processJoystick_j2
  6317 ;;		_USBCBInitEP
  6318 ;;		_processKeyboard
  6319 ;; This function uses a non-reentrant model
  6320 ;;
  6321                           
  6322                           	psect	text32
  6323  006470                     __ptext32:
  6324                           	callstack 0
  6325  006470                     _USBTransferOnePacket:
  6326                           	callstack 29
  6327                           
  6328                           ;incstack = 0
  6329                           ;USBTransferOnePacket@ep stored from wreg
  6330  006470  6E05               	movwf	USBTransferOnePacket@ep^0,c
  6331                           
  6332                           ;usb_device.c: 2482: volatile BDT_ENTRY* handle;;usb_device.c: 2485: if(dir != 0)
  6333  006472  5001               	movf	USBTransferOnePacket@dir^0,w,c
  6334  006474  B4D8               	btfsc	status,2,c
  6335  006476  D007               	goto	l3614
  6336                           
  6337                           ;usb_device.c: 2486: {;usb_device.c: 2488: handle = pBDTEntryIn[ep];
  6338  006478  5005               	movf	USBTransferOnePacket@ep^0,w,c
  6339  00647A  0D02               	mullw	2
  6340  00647C  0E9F               	movlw	low _pBDTEntryIn
  6341  00647E  24F3               	addwf	243,w,c
  6342  006480  6ED9               	movwf	fsr2l,c
  6343  006482  0E00               	movlw	high _pBDTEntryIn
  6344  006484  D006               	goto	L6
  6345  006486                     l3614:
  6346                           
  6347                           ;usb_device.c: 2490: else;usb_device.c: 2491: {;usb_device.c: 2493: handle = pBDTEntryOu
      +                          t[ep];
  6348  006486  5005               	movf	USBTransferOnePacket@ep^0,w,c
  6349  006488  0D02               	mullw	2
  6350  00648A  0EA7               	movlw	low _pBDTEntryOut
  6351  00648C  24F3               	addwf	243,w,c
  6352  00648E  6ED9               	movwf	fsr2l,c
  6353  006490  0E00               	movlw	high _pBDTEntryOut
  6354  006492                     L6:
  6355  006492  20F4               	addwfc	prodh,w,c
  6356  006494  6EDA               	movwf	fsr2h,c
  6357  006496  CFDE F006          	movff	postinc2,USBTransferOnePacket@handle
  6358  00649A  CFDD F007          	movff	postdec2,USBTransferOnePacket@handle+1
  6359                           
  6360                           ;usb_device.c: 2494: };usb_device.c: 2507: handle->ADR = (BYTE*)data;
  6361  00649E  EE20 F002          	lfsr	2,2
  6362  0064A2  5006               	movf	USBTransferOnePacket@handle^0,w,c
  6363  0064A4  26D9               	addwf	fsr2l,f,c
  6364  0064A6  5007               	movf	(USBTransferOnePacket@handle+1)^0,w,c
  6365  0064A8  22DA               	addwfc	fsr2h,f,c
  6366  0064AA  C002  FFDE         	movff	USBTransferOnePacket@data,postinc2	;volatile
  6367  0064AE  C003  FFDD         	movff	USBTransferOnePacket@data+1,postdec2	;volatile
  6368                           
  6369                           ;usb_device.c: 2508: handle->CNT = len;
  6370  0064B2  EE20 F001          	lfsr	2,1
  6371  0064B6  5006               	movf	USBTransferOnePacket@handle^0,w,c
  6372  0064B8  26D9               	addwf	fsr2l,f,c
  6373  0064BA  5007               	movf	(USBTransferOnePacket@handle+1)^0,w,c
  6374  0064BC  22DA               	addwfc	fsr2h,f,c
  6375  0064BE  C004  FFDF         	movff	USBTransferOnePacket@len,indf2
  6376                           
  6377                           ;usb_device.c: 2509: handle->STAT.Val &= 0x40;
  6378  0064C2  C006  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  6379  0064C6  C007  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  6380  0064CA  0E40               	movlw	64
  6381  0064CC  16DF               	andwf	indf2,f,c
  6382                           
  6383                           ;usb_device.c: 2510: handle->STAT.Val |= 0x80 | 0x08;
  6384  0064CE  C006  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  6385  0064D2  C007  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  6386  0064D6  0E88               	movlw	136
  6387  0064D8  12DF               	iorwf	indf2,f,c
  6388                           
  6389                           ;usb_device.c: 2513: if(dir != 0)
  6390  0064DA  5001               	movf	USBTransferOnePacket@dir^0,w,c
  6391  0064DC  B4D8               	btfsc	status,2,c
  6392  0064DE  D007               	goto	l3628
  6393                           
  6394                           ;usb_device.c: 2514: {;usb_device.c: 2516: ((BYTE_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;
  6395  0064E0  5005               	movf	USBTransferOnePacket@ep^0,w,c
  6396  0064E2  0D02               	mullw	2
  6397  0064E4  0E9F               	movlw	low _pBDTEntryIn
  6398  0064E6  24F3               	addwf	243,w,c
  6399  0064E8  6ED9               	movwf	fsr2l,c
  6400  0064EA  0E00               	movlw	high _pBDTEntryIn
  6401  0064EC  D006               	goto	L7
  6402  0064EE                     l3628:
  6403                           
  6404                           ;usb_device.c: 2518: else;usb_device.c: 2519: {;usb_device.c: 2521: ((BYTE_VAL*)&pBDTEnt
      +                          ryOut[ep])->Val ^= 0x0004;
  6405  0064EE  5005               	movf	USBTransferOnePacket@ep^0,w,c
  6406  0064F0  0D02               	mullw	2
  6407  0064F2  0EA7               	movlw	low _pBDTEntryOut
  6408  0064F4  24F3               	addwf	243,w,c
  6409  0064F6  6ED9               	movwf	fsr2l,c
  6410  0064F8  0E00               	movlw	high _pBDTEntryOut
  6411  0064FA                     L7:
  6412  0064FA  20F4               	addwfc	prodh,w,c
  6413  0064FC  6EDA               	movwf	fsr2h,c
  6414  0064FE  0E04               	movlw	4
  6415  006500  1ADF               	xorwf	indf2,f,c
  6416                           
  6417                           ;usb_device.c: 2522: };usb_device.c: 2523: return (void*)handle;
  6418  006502  C006  F001         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
  6419  006506  C007  F002         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
  6420  00650A  0012               	return		;funcret
  6421  00650C                     __end_of_USBTransferOnePacket:
  6422                           	callstack 0
  6423                           
  6424 ;; *************** function _USBEnableEndpoint *****************
  6425 ;; Defined at:
  6426 ;;		line 2380 in file "../USB Stack/usb_device.c"
  6427 ;; Parameters:    Size  Location     Type
  6428 ;;  ep              1    wreg     unsigned char 
  6429 ;;  options         1    7[COMRAM] unsigned char 
  6430 ;; Auto vars:     Size  Location     Type
  6431 ;;  ep              1   10[COMRAM] unsigned char 
  6432 ;;  p               2    8[COMRAM] PTR unsigned char 
  6433 ;;		 -> UEP0(1), 
  6434 ;; Return value:  Size  Location     Type
  6435 ;;                  1    wreg      void 
  6436 ;; Registers used:
  6437 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6438 ;; Tracked objects:
  6439 ;;		On entry : 0/0
  6440 ;;		On exit  : 0/0
  6441 ;;		Unchanged: 0/0
  6442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  6443 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0
  6444 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0
  6445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  6446 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0
  6447 ;;Total ram usage:        4 bytes
  6448 ;; Hardware stack levels used: 1
  6449 ;; Hardware stack levels required when called: 1
  6450 ;; This function calls:
  6451 ;;		_USBConfigureEndpoint
  6452 ;; This function is called by:
  6453 ;;		_USBCBInitEP
  6454 ;; This function uses a non-reentrant model
  6455 ;;
  6456                           
  6457                           	psect	text33
  6458  005EA0                     __ptext33:
  6459                           	callstack 0
  6460  005EA0                     _USBEnableEndpoint:
  6461                           	callstack 26
  6462                           
  6463                           ;incstack = 0
  6464                           ;USBEnableEndpoint@ep stored from wreg
  6465  005EA0  6E0B               	movwf	USBEnableEndpoint@ep^0,c
  6466                           
  6467                           ;usb_device.c: 2384: {;usb_device.c: 2385: unsigned char* p;;usb_device.c: 2390: p = (un
      +                          signed char*)(&UEP0+ep);
  6468  005EA2  0E70               	movlw	112
  6469  005EA4  240B               	addwf	USBEnableEndpoint@ep^0,w,c
  6470  005EA6  6E09               	movwf	USBEnableEndpoint@p^0,c
  6471  005EA8  6A0A               	clrf	(USBEnableEndpoint@p+1)^0,c
  6472  005EAA  0E0F               	movlw	15
  6473  005EAC  220A               	addwfc	(USBEnableEndpoint@p+1)^0,f,c
  6474                           
  6475                           ;usb_device.c: 2392: *p = options;
  6476  005EAE  C009  FFD9         	movff	USBEnableEndpoint@p,fsr2l
  6477  005EB2  C00A  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
  6478  005EB6  C008  FFDF         	movff	USBEnableEndpoint@options,indf2
  6479                           
  6480                           ;usb_device.c: 2393: };usb_device.c: 2395: if(options & 0x04)
  6481  005EBA  A408               	btfss	USBEnableEndpoint@options^0,2,c
  6482  005EBC  D005               	goto	l3606
  6483                           
  6484                           ;usb_device.c: 2396: {;usb_device.c: 2397: USBConfigureEndpoint(ep,0);
  6485  005EBE  0E00               	movlw	0
  6486  005EC0  6E01               	movwf	USBConfigureEndpoint@direction^0,c
  6487  005EC2  500B               	movf	USBEnableEndpoint@ep^0,w,c
  6488  005EC4  EC1C  F031         	call	_USBConfigureEndpoint
  6489  005EC8                     l3606:
  6490                           
  6491                           ;usb_device.c: 2398: };usb_device.c: 2399: if(options & 0x02)
  6492  005EC8  A208               	btfss	USBEnableEndpoint@options^0,1,c
  6493  005ECA  0012               	return	
  6494                           
  6495                           ;usb_device.c: 2400: {;usb_device.c: 2401: USBConfigureEndpoint(ep,1);
  6496  005ECC  0E01               	movlw	1
  6497  005ECE  6E01               	movwf	USBConfigureEndpoint@direction^0,c
  6498  005ED0  500B               	movf	USBEnableEndpoint@ep^0,w,c
  6499  005ED2  EC1C  F031         	call	_USBConfigureEndpoint
  6500  005ED6  0012               	return		;funcret
  6501  005ED8                     __end_of_USBEnableEndpoint:
  6502                           	callstack 0
  6503                           
  6504 ;; *************** function _USBConfigureEndpoint *****************
  6505 ;; Defined at:
  6506 ;;		line 2281 in file "../USB Stack/usb_device.c"
  6507 ;; Parameters:    Size  Location     Type
  6508 ;;  EPNum           1    wreg     unsigned char 
  6509 ;;  direction       1    0[COMRAM] unsigned char 
  6510 ;; Auto vars:     Size  Location     Type
  6511 ;;  EPNum           1    4[COMRAM] unsigned char 
  6512 ;;  handle          2    5[COMRAM] PTR volatile struct __BD
  6513 ;;		 -> BDT(64), 
  6514 ;;  workaround      1    3[COMRAM] unsigned char 
  6515 ;; Return value:  Size  Location     Type
  6516 ;;                  1    wreg      void 
  6517 ;; Registers used:
  6518 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6519 ;; Tracked objects:
  6520 ;;		On entry : 0/0
  6521 ;;		On exit  : 0/0
  6522 ;;		Unchanged: 0/0
  6523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  6524 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0
  6525 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0
  6526 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0
  6527 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0
  6528 ;;Total ram usage:        7 bytes
  6529 ;; Hardware stack levels used: 1
  6530 ;; This function calls:
  6531 ;;		Nothing
  6532 ;; This function is called by:
  6533 ;;		_USBEnableEndpoint
  6534 ;; This function uses a non-reentrant model
  6535 ;;
  6536                           
  6537                           	psect	text34
  6538  006238                     __ptext34:
  6539                           	callstack 0
  6540  006238                     _USBConfigureEndpoint:
  6541                           	callstack 26
  6542                           
  6543                           ;incstack = 0
  6544                           ;USBConfigureEndpoint@EPNum stored from wreg
  6545  006238  6E05               	movwf	USBConfigureEndpoint@EPNum^0,c
  6546                           
  6547                           ;usb_device.c: 2283: volatile BDT_ENTRY* handle;;usb_device.c: 2285: unsigned char worka
      +                          round;;usb_device.c: 2288: handle = (volatile BDT_ENTRY*)&BDT[0];
  6548  00623A  0E00               	movlw	0
  6549  00623C  6E06               	movwf	USBConfigureEndpoint@handle^0,c
  6550  00623E  0E04               	movlw	4
  6551  006240  6E07               	movwf	(USBConfigureEndpoint@handle+1)^0,c
  6552                           
  6553                           ;usb_device.c: 2293: workaround = (4*(4*EPNum+2*direction+0));
  6554  006242  5001               	movf	USBConfigureEndpoint@direction^0,w,c
  6555  006244  0D02               	mullw	2
  6556  006246  CFF3 F002          	movff	prodl,??_USBConfigureEndpoint
  6557  00624A  5005               	movf	USBConfigureEndpoint@EPNum^0,w,c
  6558  00624C  0D04               	mullw	4
  6559  00624E  50F3               	movf	243,w,c
  6560  006250  2402               	addwf	??_USBConfigureEndpoint^0,w,c
  6561  006252  6E03               	movwf	(??_USBConfigureEndpoint+1)^0,c
  6562  006254  90D8               	bcf	status,0,c
  6563  006256  3603               	rlcf	(??_USBConfigureEndpoint+1)^0,f,c
  6564  006258  90D8               	bcf	status,0,c
  6565  00625A  3403               	rlcf	(??_USBConfigureEndpoint+1)^0,w,c
  6566  00625C  6E04               	movwf	USBConfigureEndpoint@workaround^0,c
  6567                           
  6568                           ;usb_device.c: 2294: workaround = workaround/sizeof(BDT_ENTRY);
  6569  00625E  4004               	rrncf	USBConfigureEndpoint@workaround^0,w,c
  6570  006260  42E8               	rrncf	wreg,f,c
  6571  006262  0B3F               	andlw	63
  6572  006264  6E04               	movwf	USBConfigureEndpoint@workaround^0,c
  6573                           
  6574                           ;usb_device.c: 2295: handle += workaround;
  6575  006266  5004               	movf	USBConfigureEndpoint@workaround^0,w,c
  6576  006268  0D04               	mullw	4
  6577  00626A  50F3               	movf	243,w,c
  6578  00626C  2606               	addwf	USBConfigureEndpoint@handle^0,f,c
  6579  00626E  50F4               	movf	244,w,c
  6580  006270  2207               	addwfc	(USBConfigureEndpoint@handle+1)^0,f,c
  6581                           
  6582                           ;usb_device.c: 2299: handle->STAT.UOWN = 0;
  6583  006272  C006  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
  6584  006276  C007  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
  6585  00627A  9EDF               	bcf	indf2,7,c
  6586                           
  6587                           ;usb_device.c: 2301: if(direction == 0)
  6588  00627C  5001               	movf	USBConfigureEndpoint@direction^0,w,c
  6589  00627E  A4D8               	btfss	status,2,c
  6590  006280  D007               	goto	l3468
  6591                           
  6592                           ;usb_device.c: 2302: {;usb_device.c: 2303: pBDTEntryOut[EPNum] = handle;
  6593  006282  5005               	movf	USBConfigureEndpoint@EPNum^0,w,c
  6594  006284  0D02               	mullw	2
  6595  006286  0EA7               	movlw	low _pBDTEntryOut
  6596  006288  24F3               	addwf	243,w,c
  6597  00628A  6ED9               	movwf	fsr2l,c
  6598  00628C  0E00               	movlw	high _pBDTEntryOut
  6599  00628E  D006               	goto	L8
  6600  006290                     l3468:
  6601                           
  6602                           ;usb_device.c: 2305: else;usb_device.c: 2306: {;usb_device.c: 2307: pBDTEntryIn[EPNum] =
      +                           handle;
  6603  006290  5005               	movf	USBConfigureEndpoint@EPNum^0,w,c
  6604  006292  0D02               	mullw	2
  6605  006294  0E9F               	movlw	low _pBDTEntryIn
  6606  006296  24F3               	addwf	243,w,c
  6607  006298  6ED9               	movwf	fsr2l,c
  6608  00629A  0E00               	movlw	high _pBDTEntryIn
  6609  00629C                     L8:
  6610  00629C  20F4               	addwfc	prodh,w,c
  6611  00629E  6EDA               	movwf	fsr2h,c
  6612  0062A0  C006  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
  6613  0062A4  C007  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
  6614                           
  6615                           ;usb_device.c: 2308: };usb_device.c: 2311: handle->STAT.DTS = 0;
  6616  0062A8  C006  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
  6617  0062AC  C007  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
  6618  0062B0  9CDF               	bcf	indf2,6,c
  6619                           
  6620                           ;usb_device.c: 2312: (handle+1)->STAT.DTS = 1;
  6621  0062B2  EE20 F004          	lfsr	2,4
  6622  0062B6  5006               	movf	USBConfigureEndpoint@handle^0,w,c
  6623  0062B8  26D9               	addwf	fsr2l,f,c
  6624  0062BA  5007               	movf	(USBConfigureEndpoint@handle+1)^0,w,c
  6625  0062BC  22DA               	addwfc	fsr2h,f,c
  6626  0062BE  8CDF               	bsf	indf2,6,c
  6627  0062C0  0012               	return		;funcret
  6628  0062C2                     __end_of_USBConfigureEndpoint:
  6629                           	callstack 0
  6630                           
  6631 ;; *************** function _USBCBErrorHandler *****************
  6632 ;; Defined at:
  6633 ;;		line 66 in file "../usb_callback.c"
  6634 ;; Parameters:    Size  Location     Type
  6635 ;;		None
  6636 ;; Auto vars:     Size  Location     Type
  6637 ;;		None
  6638 ;; Return value:  Size  Location     Type
  6639 ;;                  1    wreg      void 
  6640 ;; Registers used:
  6641 ;;		None
  6642 ;; Tracked objects:
  6643 ;;		On entry : 0/0
  6644 ;;		On exit  : 0/0
  6645 ;;		Unchanged: 0/0
  6646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  6647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  6648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0
  6649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  6650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0
  6651 ;;Total ram usage:        0 bytes
  6652 ;; Hardware stack levels used: 1
  6653 ;; This function calls:
  6654 ;;		Nothing
  6655 ;; This function is called by:
  6656 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6657 ;; This function uses a non-reentrant model
  6658 ;;
  6659                           
  6660                           	psect	text35
  6661  005D82                     __ptext35:
  6662                           	callstack 0
  6663  005D82                     _USBCBErrorHandler:
  6664                           	callstack 28
  6665                           
  6666                           ;incstack = 0
  6667  005D82  0012               	return		;funcret
  6668  005D84                     __end_of_USBCBErrorHandler:
  6669                           	callstack 0
  6670                           
  6671 ;; *************** function _USBCBCheckOtherReq *****************
  6672 ;; Defined at:
  6673 ;;		line 73 in file "../usb_callback.c"
  6674 ;; Parameters:    Size  Location     Type
  6675 ;;		None
  6676 ;; Auto vars:     Size  Location     Type
  6677 ;;		None
  6678 ;; Return value:  Size  Location     Type
  6679 ;;                  1    wreg      void 
  6680 ;; Registers used:
  6681 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6682 ;; Tracked objects:
  6683 ;;		On entry : 0/0
  6684 ;;		On exit  : 0/0
  6685 ;;		Unchanged: 0/0
  6686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  6687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  6688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0
  6689 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0
  6690 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0
  6691 ;;Total ram usage:        2 bytes
  6692 ;; Hardware stack levels used: 1
  6693 ;; Hardware stack levels required when called: 1
  6694 ;; This function calls:
  6695 ;;		_USBCheckHIDRequest_j1
  6696 ;;		_USBCheckHIDRequest_j2
  6697 ;;		_USBCheckHIDRequest_k1
  6698 ;; This function is called by:
  6699 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6700 ;; This function uses a non-reentrant model
  6701 ;;
  6702                           
  6703                           	psect	text36
  6704  005F10                     __ptext36:
  6705                           	callstack 0
  6706  005F10                     _USBCBCheckOtherReq:
  6707                           	callstack 27
  6708                           
  6709                           ;usb_callback.c: 76: switch ( SetupPkt.wIndex ) {
  6710                           
  6711                           ;incstack = 0
  6712  005F10  D009               	goto	l3706
  6713  005F12                     l3698:
  6714  005F12  EC5D  F034         	call	_USBCheckHIDRequest_j1	;wreg free
  6715  005F16  0012               	return	
  6716  005F18                     l3700:
  6717  005F18  ECCB  F034         	call	_USBCheckHIDRequest_j2	;wreg free
  6718  005F1C  0012               	return	
  6719  005F1E                     l3702:
  6720  005F1E  EC39  F035         	call	_USBCheckHIDRequest_k1	;wreg free
  6721  005F22  0012               	return	
  6722  005F24                     l3706:
  6723  005F24  EE25 F004          	lfsr	2,1284	;volatile
  6724  005F28  CFDE F001          	movff	postinc2,??_USBCBCheckOtherReq
  6725  005F2C  CFDD F002          	movff	postdec2,??_USBCBCheckOtherReq+1
  6726                           
  6727                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6728                           ; Switch size 1, requested type "simple"
  6729                           ; Number of cases is 1, Range of values is 0 to 0
  6730                           ; switch strategies available:
  6731                           ; Name         Instructions Cycles
  6732                           ; simple_byte            4     3 (average)
  6733                           ;	Chosen strategy is simple_byte
  6734  005F30  5002               	movf	(??_USBCBCheckOtherReq+1)^0,w,c
  6735  005F32  0A00               	xorlw	0	; case 0
  6736  005F34  A4D8               	btfss	status,2,c
  6737  005F36  0012               	return	
  6738                           
  6739                           ; Switch size 1, requested type "simple"
  6740                           ; Number of cases is 3, Range of values is 0 to 2
  6741                           ; switch strategies available:
  6742                           ; Name         Instructions Cycles
  6743                           ; simple_byte           10     6 (average)
  6744                           ;	Chosen strategy is simple_byte
  6745  005F38  5001               	movf	??_USBCBCheckOtherReq^0,w,c
  6746  005F3A  0A00               	xorlw	0	; case 0
  6747  005F3C  B4D8               	btfsc	status,2,c
  6748  005F3E  D7E9               	goto	l3698
  6749  005F40  0A01               	xorlw	1	; case 1
  6750  005F42  B4D8               	btfsc	status,2,c
  6751  005F44  D7E9               	goto	l3700
  6752  005F46  0A03               	xorlw	3	; case 2
  6753  005F48  A4D8               	btfss	status,2,c
  6754  005F4A  0012               	return	
  6755  005F4C  D7E8               	goto	l3702
  6756  005F4E                     __end_of_USBCBCheckOtherReq:
  6757                           	callstack 0
  6758                           
  6759 ;; *************** function _USBCheckHIDRequest_k1 *****************
  6760 ;; Defined at:
  6761 ;;		line 31 in file "../USB Stack/keyboard1_hid.c"
  6762 ;; Parameters:    Size  Location     Type
  6763 ;;		None
  6764 ;; Auto vars:     Size  Location     Type
  6765 ;;		None
  6766 ;; Return value:  Size  Location     Type
  6767 ;;                  1    wreg      void 
  6768 ;; Registers used:
  6769 ;;		wreg, status,2, status,0
  6770 ;; Tracked objects:
  6771 ;;		On entry : 0/0
  6772 ;;		On exit  : 0/0
  6773 ;;		Unchanged: 0/0
  6774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  6775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  6776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0
  6777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  6778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0
  6779 ;;Total ram usage:        0 bytes
  6780 ;; Hardware stack levels used: 1
  6781 ;; This function calls:
  6782 ;;		Nothing
  6783 ;; This function is called by:
  6784 ;;		_USBCBCheckOtherReq
  6785 ;; This function uses a non-reentrant model
  6786 ;;
  6787                           
  6788                           	psect	text37
  6789  006A72                     __ptext37:
  6790                           	callstack 0
  6791  006A72                     _USBCheckHIDRequest_k1:
  6792                           	callstack 27
  6793                           
  6794                           ;keyboard1_hid.c: 33: if(SetupPkt.Recipient != (0x01)) return;
  6795                           
  6796                           ;incstack = 0
  6797  006A72  0105               	movlb	5	; () banked
  6798  006A74  5100               	movf	0,w,b	;volatile
  6799  006A76  0B1F               	andlw	31
  6800  006A78  06E8               	decf	wreg,f,c
  6801  006A7A  A4D8               	btfss	status,2,c
  6802  006A7C  0012               	return	
  6803                           
  6804                           ; BSR set to: 5
  6805                           ;keyboard1_hid.c: 34: if(SetupPkt.bIntfID != 0x02) return;
  6806  006A7E  0E02               	movlw	2
  6807  006A80  1904               	xorwf	4,w,b	;volatile
  6808  006A82  A4D8               	btfss	status,2,c
  6809  006A84  0012               	return	
  6810                           
  6811                           ; BSR set to: 5
  6812                           ;keyboard1_hid.c: 36: if(SetupPkt.bRequest == 6)
  6813  006A86  0E06               	movlw	6
  6814  006A88  1901               	xorwf	1,w,b	;volatile
  6815  006A8A  B4D8               	btfsc	status,2,c
  6816  006A8C  D01C               	goto	l3666
  6817  006A8E  D025               	goto	l3668
  6818  006A90                     l3646:
  6819                           
  6820                           ; BSR set to: 5
  6821                           ;keyboard1_hid.c: 41: if(USBActiveConfiguration == 1)
  6822  006A90  045F               	decf	_USBActiveConfiguration^0,w,c
  6823  006A92  A4D8               	btfss	status,2,c
  6824  006A94  D022               	goto	l3668
  6825                           
  6826                           ; BSR set to: 5
  6827                           ;keyboard1_hid.c: 42: {;keyboard1_hid.c: 43: { inPipes[0].pSrc.bRom = (const BYTE*)&conf
      +                          igDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC_K1)+3; inPipes[0].info.Va
      +                          l = 0x40 | 0x80 | 0x00; };
  6828  006A96  0E24               	movlw	low (_configDescriptor1+18)
  6829  006A98  6E4E               	movwf	_inPipes^0,c
  6830  006A9A  0E7E               	movlw	high (_configDescriptor1+18)
  6831  006A9C  6E4F               	movwf	(_inPipes+1)^0,c
  6832                           
  6833                           ; BSR set to: 5
  6834  006A9E  0E00               	movlw	0
  6835  006AA0  6E53               	movwf	(_inPipes+5)^0,c
  6836  006AA2  0E09               	movlw	9
  6837  006AA4  6E52               	movwf	(_inPipes+4)^0,c
  6838                           
  6839                           ; BSR set to: 5
  6840  006AA6  0EC0               	movlw	192
  6841  006AA8  D00C               	goto	L9
  6842  006AAA                     l3654:
  6843                           
  6844                           ; BSR set to: 5
  6845                           ;keyboard1_hid.c: 50: if(USBActiveConfiguration == 1)
  6846  006AAA  045F               	decf	_USBActiveConfiguration^0,w,c
  6847  006AAC  A4D8               	btfss	status,2,c
  6848  006AAE  D015               	goto	l3668
  6849                           
  6850                           ; BSR set to: 5
  6851                           ;keyboard1_hid.c: 51: {;keyboard1_hid.c: 52: { inPipes[0].pSrc.bRom = (const BYTE*)&hid_
      +                          rpt01_k1; inPipes[0].wCount.Val = sizeof(hid_rpt01_k1); inPipes[0].info.Val = 0x40 | 0x8
      +                          0 | 0x00; };
  6852  006AB0  0E0F               	movlw	low _hid_rpt01_k1
  6853  006AB2  6E4E               	movwf	_inPipes^0,c
  6854  006AB4  0E7F               	movlw	high _hid_rpt01_k1
  6855  006AB6  6E4F               	movwf	(_inPipes+1)^0,c
  6856                           
  6857                           ; BSR set to: 5
  6858  006AB8  0E00               	movlw	0
  6859  006ABA  6E53               	movwf	(_inPipes+5)^0,c
  6860  006ABC  0E3F               	movlw	63
  6861  006ABE  D7F2               	goto	L10
  6862  006AC0                     l3662:
  6863                           
  6864                           ; BSR set to: 5
  6865                           ;keyboard1_hid.c: 59: inPipes[0].info.Val = 0x00 | 0x80;
  6866  006AC0  0E80               	movlw	128
  6867  006AC2                     L9:
  6868  006AC2  6E51               	movwf	(_inPipes+3)^0,c
  6869                           
  6870                           ;keyboard1_hid.c: 60: break;
  6871  006AC4  D00A               	goto	l3668
  6872  006AC6                     l3666:
  6873                           
  6874                           ; BSR set to: 5
  6875  006AC6  5103               	movf	3,w,b	;volatile
  6876                           
  6877                           ; Switch size 1, requested type "simple"
  6878                           ; Number of cases is 3, Range of values is 33 to 35
  6879                           ; switch strategies available:
  6880                           ; Name         Instructions Cycles
  6881                           ; simple_byte           10     6 (average)
  6882                           ;	Chosen strategy is simple_byte
  6883  006AC8  0A21               	xorlw	33	; case 33
  6884  006ACA  B4D8               	btfsc	status,2,c
  6885  006ACC  D7E1               	goto	l3646
  6886  006ACE  0A03               	xorlw	3	; case 34
  6887  006AD0  B4D8               	btfsc	status,2,c
  6888  006AD2  D7EB               	goto	l3654
  6889  006AD4  0A01               	xorlw	1	; case 35
  6890  006AD6  B4D8               	btfsc	status,2,c
  6891  006AD8  D7F3               	goto	l3662
  6892  006ADA                     l3668:
  6893                           
  6894                           ; BSR set to: 5
  6895                           ;keyboard1_hid.c: 62: };keyboard1_hid.c: 64: if(SetupPkt.RequestType != (0x20>>5))
  6896  006ADA  3900               	swapf	0,w,b	;volatile
  6897  006ADC  32E8               	rrcf	wreg,f,c
  6898  006ADE  0B03               	andlw	3
  6899  006AE0  06E8               	decf	wreg,f,c
  6900  006AE2  A4D8               	btfss	status,2,c
  6901  006AE4  0012               	return	
  6902  006AE6  D020               	goto	l3694
  6903  006AE8                     l3672:
  6904                           
  6905                           ; BSR set to: 5
  6906                           ;keyboard1_hid.c: 82: { inPipes[0].pSrc.bRam = (BYTE*)&idle_rate_k1; inPipes[0].wCount.V
      +                          al = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
  6907  006AE8  0EC5               	movlw	low _idle_rate_k1
  6908  006AEA  6E4E               	movwf	_inPipes^0,c
  6909  006AEC  0E00               	movlw	high _idle_rate_k1
  6910  006AEE  6E4F               	movwf	(_inPipes+1)^0,c
  6911                           
  6912                           ; BSR set to: 5
  6913  006AF0  0E00               	movlw	0
  6914  006AF2  6E53               	movwf	(_inPipes+5)^0,c
  6915  006AF4  0E01               	movlw	1
  6916  006AF6  6E52               	movwf	(_inPipes+4)^0,c
  6917                           
  6918                           ; BSR set to: 5
  6919  006AF8  0EC1               	movlw	193
  6920  006AFA  6E51               	movwf	(_inPipes+3)^0,c
  6921                           
  6922                           ;keyboard1_hid.c: 86: break;
  6923  006AFC  0012               	return	
  6924  006AFE                     l3678:
  6925                           
  6926                           ; BSR set to: 5
  6927                           ;keyboard1_hid.c: 88: inPipes[0].info.Val = 0x00 | 0x80;
  6928  006AFE  0E80               	movlw	128
  6929  006B00  6E51               	movwf	(_inPipes+3)^0,c
  6930                           
  6931                           ; BSR set to: 5
  6932                           ;keyboard1_hid.c: 89: idle_rate_k1 = SetupPkt.W_Value.byte.HB;
  6933  006B02  C503 F0C5          	movff	1283,_idle_rate_k1	;volatile
  6934                           
  6935                           ;keyboard1_hid.c: 90: break;
  6936  006B06  0012               	return	
  6937  006B08                     l3682:
  6938                           
  6939                           ; BSR set to: 5
  6940                           ;keyboard1_hid.c: 92: { inPipes[0].pSrc.bRam = (BYTE*)&active_protocol_k1; inPipes[0].wC
      +                          ount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
  6941  006B08  0EC4               	movlw	low _active_protocol_k1
  6942  006B0A  6E4E               	movwf	_inPipes^0,c
  6943  006B0C  0E00               	movlw	high _active_protocol_k1
  6944  006B0E  6E4F               	movwf	(_inPipes+1)^0,c
  6945                           
  6946                           ; BSR set to: 5
  6947  006B10  0E00               	movlw	0
  6948  006B12  6E53               	movwf	(_inPipes+5)^0,c
  6949  006B14  0E01               	movlw	1
  6950  006B16  6E52               	movwf	(_inPipes+4)^0,c
  6951                           
  6952                           ; BSR set to: 5
  6953  006B18  0E81               	movlw	129
  6954  006B1A  6E51               	movwf	(_inPipes+3)^0,c
  6955                           
  6956                           ;keyboard1_hid.c: 96: break;
  6957  006B1C  0012               	return	
  6958  006B1E                     l3688:
  6959                           
  6960                           ; BSR set to: 5
  6961                           ;keyboard1_hid.c: 98: inPipes[0].info.Val = 0x00 | 0x80;
  6962  006B1E  0E80               	movlw	128
  6963  006B20  6E51               	movwf	(_inPipes+3)^0,c
  6964                           
  6965                           ; BSR set to: 5
  6966                           ;keyboard1_hid.c: 99: active_protocol_k1 = SetupPkt.W_Value.byte.LB;
  6967  006B22  C502 F0C4          	movff	1282,_active_protocol_k1	;volatile
  6968                           
  6969                           ;keyboard1_hid.c: 100: break;
  6970  006B26  0012               	return	
  6971  006B28                     l3694:
  6972                           
  6973                           ; BSR set to: 5
  6974  006B28  5101               	movf	1,w,b	;volatile
  6975                           
  6976                           ; Switch size 1, requested type "simple"
  6977                           ; Number of cases is 6, Range of values is 1 to 11
  6978                           ; switch strategies available:
  6979                           ; Name         Instructions Cycles
  6980                           ; simple_byte           19    10 (average)
  6981                           ;	Chosen strategy is simple_byte
  6982  006B2A  0A01               	xorlw	1	; case 1
  6983  006B2C  B4D8               	btfsc	status,2,c
  6984  006B2E  0012               	return	
  6985  006B30  0A03               	xorlw	3	; case 2
  6986  006B32  B4D8               	btfsc	status,2,c
  6987  006B34  D7D9               	goto	l3672
  6988  006B36  0A01               	xorlw	1	; case 3
  6989  006B38  B4D8               	btfsc	status,2,c
  6990  006B3A  D7E6               	goto	l3682
  6991  006B3C  0A0A               	xorlw	10	; case 9
  6992  006B3E  B4D8               	btfsc	status,2,c
  6993  006B40  0012               	return	
  6994  006B42  0A03               	xorlw	3	; case 10
  6995  006B44  B4D8               	btfsc	status,2,c
  6996  006B46  D7DB               	goto	l3678
  6997  006B48  0A01               	xorlw	1	; case 11
  6998  006B4A  A4D8               	btfss	status,2,c
  6999  006B4C  0012               	return	
  7000  006B4E  D7E7               	goto	l3688
  7001  006B50                     __end_of_USBCheckHIDRequest_k1:
  7002                           	callstack 0
  7003                           
  7004 ;; *************** function _USBCheckHIDRequest_j2 *****************
  7005 ;; Defined at:
  7006 ;;		line 31 in file "../USB Stack/joystick2_hid.c"
  7007 ;; Parameters:    Size  Location     Type
  7008 ;;		None
  7009 ;; Auto vars:     Size  Location     Type
  7010 ;;		None
  7011 ;; Return value:  Size  Location     Type
  7012 ;;                  1    wreg      void 
  7013 ;; Registers used:
  7014 ;;		wreg, status,2, status,0
  7015 ;; Tracked objects:
  7016 ;;		On entry : 0/0
  7017 ;;		On exit  : 0/0
  7018 ;;		Unchanged: 0/0
  7019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  7020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  7021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0
  7022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  7023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0
  7024 ;;Total ram usage:        0 bytes
  7025 ;; Hardware stack levels used: 1
  7026 ;; This function calls:
  7027 ;;		Nothing
  7028 ;; This function is called by:
  7029 ;;		_USBCBCheckOtherReq
  7030 ;; This function uses a non-reentrant model
  7031 ;;
  7032                           
  7033                           	psect	text38
  7034  006996                     __ptext38:
  7035                           	callstack 0
  7036  006996                     _USBCheckHIDRequest_j2:
  7037                           	callstack 27
  7038                           
  7039                           ;joystick2_hid.c: 33: if(SetupPkt.Recipient != (0x01)) return;
  7040                           
  7041                           ; BSR set to: 5
  7042                           ;incstack = 0
  7043  006996  0105               	movlb	5	; () banked
  7044  006998  5100               	movf	0,w,b	;volatile
  7045  00699A  0B1F               	andlw	31
  7046  00699C  06E8               	decf	wreg,f,c
  7047  00699E  A4D8               	btfss	status,2,c
  7048  0069A0  0012               	return	
  7049                           
  7050                           ; BSR set to: 5
  7051                           ;joystick2_hid.c: 34: if(SetupPkt.bIntfID != 0x01) return;
  7052  0069A2  0504               	decf	4,w,b	;volatile
  7053  0069A4  A4D8               	btfss	status,2,c
  7054  0069A6  0012               	return	
  7055                           
  7056                           ; BSR set to: 5
  7057                           ;joystick2_hid.c: 36: if(SetupPkt.bRequest == 6)
  7058  0069A8  0E06               	movlw	6
  7059  0069AA  1901               	xorwf	1,w,b	;volatile
  7060  0069AC  B4D8               	btfsc	status,2,c
  7061  0069AE  D01C               	goto	l3568
  7062  0069B0  D025               	goto	l3570
  7063  0069B2                     l3548:
  7064                           
  7065                           ; BSR set to: 5
  7066                           ;joystick2_hid.c: 41: if(USBActiveConfiguration == 1)
  7067  0069B2  045F               	decf	_USBActiveConfiguration^0,w,c
  7068  0069B4  A4D8               	btfss	status,2,c
  7069  0069B6  D022               	goto	l3570
  7070                           
  7071                           ; BSR set to: 5
  7072                           ;joystick2_hid.c: 42: {;joystick2_hid.c: 43: { inPipes[0].pSrc.bRom = (const BYTE*)&conf
      +                          igDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC_J2)+3; inPipes[0].info.Va
      +                          l = 0x40 | 0x80 | 0x00; };
  7073  0069B8  0E24               	movlw	low (_configDescriptor1+18)
  7074  0069BA  6E4E               	movwf	_inPipes^0,c
  7075  0069BC  0E7E               	movlw	high (_configDescriptor1+18)
  7076  0069BE  6E4F               	movwf	(_inPipes+1)^0,c
  7077                           
  7078                           ; BSR set to: 5
  7079  0069C0  0E00               	movlw	0
  7080  0069C2  6E53               	movwf	(_inPipes+5)^0,c
  7081  0069C4  0E09               	movlw	9
  7082  0069C6  6E52               	movwf	(_inPipes+4)^0,c
  7083                           
  7084                           ; BSR set to: 5
  7085  0069C8  0EC0               	movlw	192
  7086  0069CA  D00C               	goto	L11
  7087  0069CC                     l3556:
  7088                           
  7089                           ; BSR set to: 5
  7090                           ;joystick2_hid.c: 50: if(USBActiveConfiguration == 1)
  7091  0069CC  045F               	decf	_USBActiveConfiguration^0,w,c
  7092  0069CE  A4D8               	btfss	status,2,c
  7093  0069D0  D015               	goto	l3570
  7094                           
  7095                           ; BSR set to: 5
  7096                           ;joystick2_hid.c: 51: {;joystick2_hid.c: 52: { inPipes[0].pSrc.bRom = (const BYTE*)&hid_
      +                          rpt01_j2; inPipes[0].wCount.Val = sizeof(hid_rpt01_j2); inPipes[0].info.Val = 0x40 | 0x8
      +                          0 | 0x00; };
  7097  0069D2  0E7B               	movlw	low _hid_rpt01_j2
  7098  0069D4  6E4E               	movwf	_inPipes^0,c
  7099  0069D6  0E7E               	movlw	high _hid_rpt01_j2
  7100  0069D8  6E4F               	movwf	(_inPipes+1)^0,c
  7101                           
  7102                           ; BSR set to: 5
  7103  0069DA  0E00               	movlw	0
  7104  0069DC  6E53               	movwf	(_inPipes+5)^0,c
  7105  0069DE  0E4A               	movlw	74
  7106  0069E0  D7F2               	goto	L12
  7107  0069E2                     l3564:
  7108                           
  7109                           ; BSR set to: 5
  7110                           ;joystick2_hid.c: 59: inPipes[0].info.Val = 0x00 | 0x80;
  7111  0069E2  0E80               	movlw	128
  7112  0069E4                     L11:
  7113  0069E4  6E51               	movwf	(_inPipes+3)^0,c
  7114                           
  7115                           ;joystick2_hid.c: 60: break;
  7116  0069E6  D00A               	goto	l3570
  7117  0069E8                     l3568:
  7118                           
  7119                           ; BSR set to: 5
  7120  0069E8  5103               	movf	3,w,b	;volatile
  7121                           
  7122                           ; Switch size 1, requested type "simple"
  7123                           ; Number of cases is 3, Range of values is 33 to 35
  7124                           ; switch strategies available:
  7125                           ; Name         Instructions Cycles
  7126                           ; simple_byte           10     6 (average)
  7127                           ;	Chosen strategy is simple_byte
  7128  0069EA  0A21               	xorlw	33	; case 33
  7129  0069EC  B4D8               	btfsc	status,2,c
  7130  0069EE  D7E1               	goto	l3548
  7131  0069F0  0A03               	xorlw	3	; case 34
  7132  0069F2  B4D8               	btfsc	status,2,c
  7133  0069F4  D7EB               	goto	l3556
  7134  0069F6  0A01               	xorlw	1	; case 35
  7135  0069F8  B4D8               	btfsc	status,2,c
  7136  0069FA  D7F3               	goto	l3564
  7137  0069FC                     l3570:
  7138                           
  7139                           ; BSR set to: 5
  7140                           ;joystick2_hid.c: 62: };joystick2_hid.c: 64: if(SetupPkt.RequestType != (0x20>>5))
  7141  0069FC  3900               	swapf	0,w,b	;volatile
  7142  0069FE  32E8               	rrcf	wreg,f,c
  7143  006A00  0B03               	andlw	3
  7144  006A02  06E8               	decf	wreg,f,c
  7145  006A04  A4D8               	btfss	status,2,c
  7146  006A06  0012               	return	
  7147  006A08  D020               	goto	l3596
  7148  006A0A                     l3574:
  7149                           
  7150                           ; BSR set to: 5
  7151                           ;joystick2_hid.c: 82: { inPipes[0].pSrc.bRam = (BYTE*)&idle_rate_j2; inPipes[0].wCount.V
      +                          al = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
  7152  006A0A  0EC7               	movlw	low _idle_rate_j2
  7153  006A0C  6E4E               	movwf	_inPipes^0,c
  7154  006A0E  0E00               	movlw	high _idle_rate_j2
  7155  006A10  6E4F               	movwf	(_inPipes+1)^0,c
  7156                           
  7157                           ; BSR set to: 5
  7158  006A12  0E00               	movlw	0
  7159  006A14  6E53               	movwf	(_inPipes+5)^0,c
  7160  006A16  0E01               	movlw	1
  7161  006A18  6E52               	movwf	(_inPipes+4)^0,c
  7162                           
  7163                           ; BSR set to: 5
  7164  006A1A  0EC1               	movlw	193
  7165  006A1C  6E51               	movwf	(_inPipes+3)^0,c
  7166                           
  7167                           ;joystick2_hid.c: 86: break;
  7168  006A1E  0012               	return	
  7169  006A20                     l3580:
  7170                           
  7171                           ; BSR set to: 5
  7172                           ;joystick2_hid.c: 88: inPipes[0].info.Val = 0x00 | 0x80;
  7173  006A20  0E80               	movlw	128
  7174  006A22  6E51               	movwf	(_inPipes+3)^0,c
  7175                           
  7176                           ; BSR set to: 5
  7177                           ;joystick2_hid.c: 89: idle_rate_j2 = SetupPkt.W_Value.byte.HB;
  7178  006A24  C503 F0C7          	movff	1283,_idle_rate_j2	;volatile
  7179                           
  7180                           ;joystick2_hid.c: 90: break;
  7181  006A28  0012               	return	
  7182  006A2A                     l3584:
  7183                           
  7184                           ; BSR set to: 5
  7185                           ;joystick2_hid.c: 92: { inPipes[0].pSrc.bRam = (BYTE*)&active_protocol_j2; inPipes[0].wC
      +                          ount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
  7186  006A2A  0EC6               	movlw	low _active_protocol_j2
  7187  006A2C  6E4E               	movwf	_inPipes^0,c
  7188  006A2E  0E00               	movlw	high _active_protocol_j2
  7189  006A30  6E4F               	movwf	(_inPipes+1)^0,c
  7190                           
  7191                           ; BSR set to: 5
  7192  006A32  0E00               	movlw	0
  7193  006A34  6E53               	movwf	(_inPipes+5)^0,c
  7194  006A36  0E01               	movlw	1
  7195  006A38  6E52               	movwf	(_inPipes+4)^0,c
  7196                           
  7197                           ; BSR set to: 5
  7198  006A3A  0E81               	movlw	129
  7199  006A3C  6E51               	movwf	(_inPipes+3)^0,c
  7200                           
  7201                           ;joystick2_hid.c: 96: break;
  7202  006A3E  0012               	return	
  7203  006A40                     l3590:
  7204                           
  7205                           ; BSR set to: 5
  7206                           ;joystick2_hid.c: 98: inPipes[0].info.Val = 0x00 | 0x80;
  7207  006A40  0E80               	movlw	128
  7208  006A42  6E51               	movwf	(_inPipes+3)^0,c
  7209                           
  7210                           ; BSR set to: 5
  7211                           ;joystick2_hid.c: 99: active_protocol_j2 = SetupPkt.W_Value.byte.LB;
  7212  006A44  C502 F0C6          	movff	1282,_active_protocol_j2	;volatile
  7213                           
  7214                           ;joystick2_hid.c: 100: break;
  7215  006A48  0012               	return	
  7216  006A4A                     l3596:
  7217                           
  7218                           ; BSR set to: 5
  7219  006A4A  5101               	movf	1,w,b	;volatile
  7220                           
  7221                           ; Switch size 1, requested type "simple"
  7222                           ; Number of cases is 6, Range of values is 1 to 11
  7223                           ; switch strategies available:
  7224                           ; Name         Instructions Cycles
  7225                           ; simple_byte           19    10 (average)
  7226                           ;	Chosen strategy is simple_byte
  7227  006A4C  0A01               	xorlw	1	; case 1
  7228  006A4E  B4D8               	btfsc	status,2,c
  7229  006A50  0012               	return	
  7230  006A52  0A03               	xorlw	3	; case 2
  7231  006A54  B4D8               	btfsc	status,2,c
  7232  006A56  D7D9               	goto	l3574
  7233  006A58  0A01               	xorlw	1	; case 3
  7234  006A5A  B4D8               	btfsc	status,2,c
  7235  006A5C  D7E6               	goto	l3584
  7236  006A5E  0A0A               	xorlw	10	; case 9
  7237  006A60  B4D8               	btfsc	status,2,c
  7238  006A62  0012               	return	
  7239  006A64  0A03               	xorlw	3	; case 10
  7240  006A66  B4D8               	btfsc	status,2,c
  7241  006A68  D7DB               	goto	l3580
  7242  006A6A  0A01               	xorlw	1	; case 11
  7243  006A6C  A4D8               	btfss	status,2,c
  7244  006A6E  0012               	return	
  7245  006A70  D7E7               	goto	l3590
  7246  006A72                     __end_of_USBCheckHIDRequest_j2:
  7247                           	callstack 0
  7248                           
  7249 ;; *************** function _USBCheckHIDRequest_j1 *****************
  7250 ;; Defined at:
  7251 ;;		line 31 in file "../USB Stack/joystick1_hid.c"
  7252 ;; Parameters:    Size  Location     Type
  7253 ;;		None
  7254 ;; Auto vars:     Size  Location     Type
  7255 ;;		None
  7256 ;; Return value:  Size  Location     Type
  7257 ;;                  1    wreg      void 
  7258 ;; Registers used:
  7259 ;;		wreg, status,2, status,0
  7260 ;; Tracked objects:
  7261 ;;		On entry : 0/0
  7262 ;;		On exit  : 0/0
  7263 ;;		Unchanged: 0/0
  7264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  7265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  7266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0
  7267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  7268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0
  7269 ;;Total ram usage:        0 bytes
  7270 ;; Hardware stack levels used: 1
  7271 ;; This function calls:
  7272 ;;		Nothing
  7273 ;; This function is called by:
  7274 ;;		_USBCBCheckOtherReq
  7275 ;; This function uses a non-reentrant model
  7276 ;;
  7277                           
  7278                           	psect	text39
  7279  0068BA                     __ptext39:
  7280                           	callstack 0
  7281  0068BA                     _USBCheckHIDRequest_j1:
  7282                           	callstack 27
  7283                           
  7284                           ;joystick1_hid.c: 33: if(SetupPkt.Recipient != (0x01)) return;
  7285                           
  7286                           ; BSR set to: 5
  7287                           ;incstack = 0
  7288  0068BA  0105               	movlb	5	; () banked
  7289  0068BC  5100               	movf	0,w,b	;volatile
  7290  0068BE  0B1F               	andlw	31
  7291  0068C0  06E8               	decf	wreg,f,c
  7292  0068C2  A4D8               	btfss	status,2,c
  7293  0068C4  0012               	return	
  7294                           
  7295                           ; BSR set to: 5
  7296                           ;joystick1_hid.c: 34: if(SetupPkt.bIntfID != 0x00) return;
  7297  0068C6  5104               	movf	4,w,b	;volatile
  7298  0068C8  A4D8               	btfss	status,2,c
  7299  0068CA  0012               	return	
  7300                           
  7301                           ; BSR set to: 5
  7302                           ;joystick1_hid.c: 36: if(SetupPkt.bRequest == 6)
  7303  0068CC  0E06               	movlw	6
  7304  0068CE  1901               	xorwf	1,w,b	;volatile
  7305  0068D0  B4D8               	btfsc	status,2,c
  7306  0068D2  D01C               	goto	l3506
  7307  0068D4  D025               	goto	l3508
  7308  0068D6                     l3486:
  7309                           
  7310                           ; BSR set to: 5
  7311                           ;joystick1_hid.c: 41: if(USBActiveConfiguration == 1)
  7312  0068D6  045F               	decf	_USBActiveConfiguration^0,w,c
  7313  0068D8  A4D8               	btfss	status,2,c
  7314  0068DA  D022               	goto	l3508
  7315                           
  7316                           ; BSR set to: 5
  7317                           ;joystick1_hid.c: 42: {;joystick1_hid.c: 43: { inPipes[0].pSrc.bRom = (const BYTE*)&conf
      +                          igDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC_J1)+3; inPipes[0].info.Va
      +                          l = 0x40 | 0x80 | 0x00; };
  7318  0068DC  0E24               	movlw	low (_configDescriptor1+18)
  7319  0068DE  6E4E               	movwf	_inPipes^0,c
  7320  0068E0  0E7E               	movlw	high (_configDescriptor1+18)
  7321  0068E2  6E4F               	movwf	(_inPipes+1)^0,c
  7322                           
  7323                           ; BSR set to: 5
  7324  0068E4  0E00               	movlw	0
  7325  0068E6  6E53               	movwf	(_inPipes+5)^0,c
  7326  0068E8  0E09               	movlw	9
  7327  0068EA  6E52               	movwf	(_inPipes+4)^0,c
  7328                           
  7329                           ; BSR set to: 5
  7330  0068EC  0EC0               	movlw	192
  7331  0068EE  D00C               	goto	L13
  7332  0068F0                     l3494:
  7333                           
  7334                           ; BSR set to: 5
  7335                           ;joystick1_hid.c: 50: if(USBActiveConfiguration == 1)
  7336  0068F0  045F               	decf	_USBActiveConfiguration^0,w,c
  7337  0068F2  A4D8               	btfss	status,2,c
  7338  0068F4  D015               	goto	l3508
  7339                           
  7340                           ; BSR set to: 5
  7341                           ;joystick1_hid.c: 51: {;joystick1_hid.c: 52: { inPipes[0].pSrc.bRom = (const BYTE*)&hid_
      +                          rpt01_j1; inPipes[0].wCount.Val = sizeof(hid_rpt01_j1); inPipes[0].info.Val = 0x40 | 0x8
      +                          0 | 0x00; };
  7342  0068F6  0EC5               	movlw	low _hid_rpt01_j1
  7343  0068F8  6E4E               	movwf	_inPipes^0,c
  7344  0068FA  0E7E               	movlw	high _hid_rpt01_j1
  7345  0068FC  6E4F               	movwf	(_inPipes+1)^0,c
  7346                           
  7347                           ; BSR set to: 5
  7348  0068FE  0E00               	movlw	0
  7349  006900  6E53               	movwf	(_inPipes+5)^0,c
  7350  006902  0E4A               	movlw	74
  7351  006904  D7F2               	goto	L14
  7352  006906                     l3502:
  7353                           
  7354                           ; BSR set to: 5
  7355                           ;joystick1_hid.c: 59: inPipes[0].info.Val = 0x00 | 0x80;
  7356  006906  0E80               	movlw	128
  7357  006908                     L13:
  7358  006908  6E51               	movwf	(_inPipes+3)^0,c
  7359                           
  7360                           ;joystick1_hid.c: 60: break;
  7361  00690A  D00A               	goto	l3508
  7362  00690C                     l3506:
  7363                           
  7364                           ; BSR set to: 5
  7365  00690C  5103               	movf	3,w,b	;volatile
  7366                           
  7367                           ; Switch size 1, requested type "simple"
  7368                           ; Number of cases is 3, Range of values is 33 to 35
  7369                           ; switch strategies available:
  7370                           ; Name         Instructions Cycles
  7371                           ; simple_byte           10     6 (average)
  7372                           ;	Chosen strategy is simple_byte
  7373  00690E  0A21               	xorlw	33	; case 33
  7374  006910  B4D8               	btfsc	status,2,c
  7375  006912  D7E1               	goto	l3486
  7376  006914  0A03               	xorlw	3	; case 34
  7377  006916  B4D8               	btfsc	status,2,c
  7378  006918  D7EB               	goto	l3494
  7379  00691A  0A01               	xorlw	1	; case 35
  7380  00691C  B4D8               	btfsc	status,2,c
  7381  00691E  D7F3               	goto	l3502
  7382  006920                     l3508:
  7383                           
  7384                           ; BSR set to: 5
  7385                           ;joystick1_hid.c: 62: };joystick1_hid.c: 64: if(SetupPkt.RequestType != (0x20>>5))
  7386  006920  3900               	swapf	0,w,b	;volatile
  7387  006922  32E8               	rrcf	wreg,f,c
  7388  006924  0B03               	andlw	3
  7389  006926  06E8               	decf	wreg,f,c
  7390  006928  A4D8               	btfss	status,2,c
  7391  00692A  0012               	return	
  7392  00692C  D020               	goto	l3534
  7393  00692E                     l3512:
  7394                           
  7395                           ; BSR set to: 5
  7396                           ;joystick1_hid.c: 82: { inPipes[0].pSrc.bRam = (BYTE*)&idle_rate_j1; inPipes[0].wCount.V
      +                          al = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
  7397  00692E  0E5E               	movlw	low _idle_rate_j1
  7398  006930  6E4E               	movwf	_inPipes^0,c
  7399  006932  0E00               	movlw	high _idle_rate_j1
  7400  006934  6E4F               	movwf	(_inPipes+1)^0,c
  7401                           
  7402                           ; BSR set to: 5
  7403  006936  0E00               	movlw	0
  7404  006938  6E53               	movwf	(_inPipes+5)^0,c
  7405  00693A  0E01               	movlw	1
  7406  00693C  6E52               	movwf	(_inPipes+4)^0,c
  7407                           
  7408                           ; BSR set to: 5
  7409  00693E  0EC1               	movlw	193
  7410  006940  6E51               	movwf	(_inPipes+3)^0,c
  7411                           
  7412                           ;joystick1_hid.c: 86: break;
  7413  006942  0012               	return	
  7414  006944                     l3518:
  7415                           
  7416                           ; BSR set to: 5
  7417                           ;joystick1_hid.c: 88: inPipes[0].info.Val = 0x00 | 0x80;
  7418  006944  0E80               	movlw	128
  7419  006946  6E51               	movwf	(_inPipes+3)^0,c
  7420                           
  7421                           ; BSR set to: 5
  7422                           ;joystick1_hid.c: 89: idle_rate_j1 = SetupPkt.W_Value.byte.HB;
  7423  006948  C503 F05E          	movff	1283,_idle_rate_j1	;volatile
  7424                           
  7425                           ;joystick1_hid.c: 90: break;
  7426  00694C  0012               	return	
  7427  00694E                     l3522:
  7428                           
  7429                           ; BSR set to: 5
  7430                           ;joystick1_hid.c: 92: { inPipes[0].pSrc.bRam = (BYTE*)&active_protocol_j1; inPipes[0].wC
      +                          ount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
  7431  00694E  0E5D               	movlw	low _active_protocol_j1
  7432  006950  6E4E               	movwf	_inPipes^0,c
  7433  006952  0E00               	movlw	high _active_protocol_j1
  7434  006954  6E4F               	movwf	(_inPipes+1)^0,c
  7435                           
  7436                           ; BSR set to: 5
  7437  006956  0E00               	movlw	0
  7438  006958  6E53               	movwf	(_inPipes+5)^0,c
  7439  00695A  0E01               	movlw	1
  7440  00695C  6E52               	movwf	(_inPipes+4)^0,c
  7441                           
  7442                           ; BSR set to: 5
  7443  00695E  0E81               	movlw	129
  7444  006960  6E51               	movwf	(_inPipes+3)^0,c
  7445                           
  7446                           ;joystick1_hid.c: 96: break;
  7447  006962  0012               	return	
  7448  006964                     l3528:
  7449                           
  7450                           ; BSR set to: 5
  7451                           ;joystick1_hid.c: 98: inPipes[0].info.Val = 0x00 | 0x80;
  7452  006964  0E80               	movlw	128
  7453  006966  6E51               	movwf	(_inPipes+3)^0,c
  7454                           
  7455                           ; BSR set to: 5
  7456                           ;joystick1_hid.c: 99: active_protocol_j1 = SetupPkt.W_Value.byte.LB;
  7457  006968  C502 F05D          	movff	1282,_active_protocol_j1	;volatile
  7458                           
  7459                           ;joystick1_hid.c: 100: break;
  7460  00696C  0012               	return	
  7461  00696E                     l3534:
  7462                           
  7463                           ; BSR set to: 5
  7464  00696E  5101               	movf	1,w,b	;volatile
  7465                           
  7466                           ; Switch size 1, requested type "simple"
  7467                           ; Number of cases is 6, Range of values is 1 to 11
  7468                           ; switch strategies available:
  7469                           ; Name         Instructions Cycles
  7470                           ; simple_byte           19    10 (average)
  7471                           ;	Chosen strategy is simple_byte
  7472  006970  0A01               	xorlw	1	; case 1
  7473  006972  B4D8               	btfsc	status,2,c
  7474  006974  0012               	return	
  7475  006976  0A03               	xorlw	3	; case 2
  7476  006978  B4D8               	btfsc	status,2,c
  7477  00697A  D7D9               	goto	l3512
  7478  00697C  0A01               	xorlw	1	; case 3
  7479  00697E  B4D8               	btfsc	status,2,c
  7480  006980  D7E6               	goto	l3522
  7481  006982  0A0A               	xorlw	10	; case 9
  7482  006984  B4D8               	btfsc	status,2,c
  7483  006986  0012               	return	
  7484  006988  0A03               	xorlw	3	; case 10
  7485  00698A  B4D8               	btfsc	status,2,c
  7486  00698C  D7DB               	goto	l3518
  7487  00698E  0A01               	xorlw	1	; case 11
  7488  006990  A4D8               	btfss	status,2,c
  7489  006992  0012               	return	
  7490  006994  D7E7               	goto	l3528
  7491  006996                     __end_of_USBCheckHIDRequest_j1:
  7492                           	callstack 0
  7493                           
  7494 ;; *************** function _USBStdGetStatusHandler *****************
  7495 ;; Defined at:
  7496 ;;		line 1829 in file "../USB Stack/usb_device.c"
  7497 ;; Parameters:    Size  Location     Type
  7498 ;;		None
  7499 ;; Auto vars:     Size  Location     Type
  7500 ;;  p               2    1[COMRAM] PTR struct __BDT
  7501 ;;		 -> BDT(64), 
  7502 ;; Return value:  Size  Location     Type
  7503 ;;                  1    wreg      void 
  7504 ;; Registers used:
  7505 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7506 ;; Tracked objects:
  7507 ;;		On entry : 0/0
  7508 ;;		On exit  : 0/0
  7509 ;;		Unchanged: 0/0
  7510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  7511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  7512 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0
  7513 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0
  7514 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0
  7515 ;;Total ram usage:        3 bytes
  7516 ;; Hardware stack levels used: 1
  7517 ;; This function calls:
  7518 ;;		Nothing
  7519 ;; This function is called by:
  7520 ;;		_USBCheckStdRequest
  7521 ;; This function uses a non-reentrant model
  7522 ;;
  7523                           
  7524                           	psect	text40
  7525  0063DC                     __ptext40:
  7526                           	callstack 0
  7527  0063DC                     _USBStdGetStatusHandler:
  7528                           	callstack 26
  7529                           
  7530                           ;usb_device.c: 1831: CtrlTrfData[0] = 0;
  7531                           
  7532                           ; BSR set to: 5
  7533                           ;incstack = 0
  7534  0063DC  0E00               	movlw	0
  7535  0063DE  0105               	movlb	5	; () banked
  7536  0063E0  6F20               	movwf	32,b	;volatile
  7537                           
  7538                           ;usb_device.c: 1832: CtrlTrfData[1] = 0;
  7539  0063E2  0E00               	movlw	0
  7540  0063E4  6F21               	movwf	33,b	;volatile
  7541                           
  7542                           ;usb_device.c: 1834: switch(SetupPkt.Recipient)
  7543  0063E6  D02F               	goto	l3858
  7544  0063E8                     l361:
  7545                           
  7546                           ; BSR set to: 5
  7547                           ;usb_device.c: 1837: inPipes[0].info.bits.busy = 1;
  7548  0063E8  8E51               	bsf	(_inPipes+3)^0,7,c
  7549                           
  7550                           ; BSR set to: 5
  7551                           ;usb_device.c: 1845: };usb_device.c: 1847: if(RemoteWakeup == TRUE)
  7552                           
  7553                           ;usb_device.c: 1842: if(0 == 1)
  7554  0063EA  0100               	movlb	0	; () banked
  7555  0063EC  05C3               	decf	_RemoteWakeup& (0+255),w,b
  7556  0063EE  A4D8               	btfss	status,2,c
  7557  0063F0  D035               	goto	l364
  7558                           
  7559                           ; BSR set to: 0
  7560                           ;usb_device.c: 1848: {;usb_device.c: 1849: CtrlTrfData[0]|=0x02;
  7561  0063F2  0105               	movlb	5	; () banked
  7562  0063F4  8320               	bsf	32,1,b	;volatile
  7563  0063F6  D032               	goto	l364
  7564  0063F8                     l365:
  7565                           
  7566                           ; BSR set to: 5
  7567                           ;usb_device.c: 1853: inPipes[0].info.bits.busy = 1;
  7568  0063F8  8E51               	bsf	(_inPipes+3)^0,7,c
  7569                           
  7570                           ;usb_device.c: 1854: break;
  7571  0063FA  D030               	goto	l364
  7572  0063FC                     l366:
  7573                           
  7574                           ; BSR set to: 5
  7575                           ;usb_device.c: 1856: inPipes[0].info.bits.busy = 1;
  7576  0063FC  8E51               	bsf	(_inPipes+3)^0,7,c
  7577                           
  7578                           ;usb_device.c: 1860: {;usb_device.c: 1861: BDT_ENTRY *p;;usb_device.c: 1863: if(SetupPkt
      +                          .EPDir == 0)
  7579  0063FE  BF04               	btfsc	4,7,b	;volatile
  7580  006400  D00A               	goto	l3850
  7581                           
  7582                           ; BSR set to: 5
  7583                           ;usb_device.c: 1864: {;usb_device.c: 1865: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  7584  006402  5104               	movf	4,w,b	;volatile
  7585  006404  0B0F               	andlw	15
  7586  006406  6E01               	movwf	??_USBStdGetStatusHandler^0,c
  7587  006408  5001               	movf	??_USBStdGetStatusHandler^0,w,c
  7588  00640A  0D02               	mullw	2
  7589  00640C  0EA7               	movlw	low _pBDTEntryOut
  7590  00640E  24F3               	addwf	243,w,c
  7591  006410  6ED9               	movwf	fsr2l,c
  7592  006412  0E00               	movlw	high _pBDTEntryOut
  7593  006414  D009               	goto	L15
  7594  006416                     l3850:
  7595                           
  7596                           ; BSR set to: 5
  7597                           ;usb_device.c: 1867: else;usb_device.c: 1868: {;usb_device.c: 1869: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
  7598  006416  5104               	movf	4,w,b	;volatile
  7599  006418  0B0F               	andlw	15
  7600  00641A  6E01               	movwf	??_USBStdGetStatusHandler^0,c
  7601  00641C  5001               	movf	??_USBStdGetStatusHandler^0,w,c
  7602  00641E  0D02               	mullw	2
  7603  006420  0E9F               	movlw	low _pBDTEntryIn
  7604  006422  24F3               	addwf	243,w,c
  7605  006424  6ED9               	movwf	fsr2l,c
  7606  006426  0E00               	movlw	high _pBDTEntryIn
  7607  006428                     L15:
  7608  006428  20F4               	addwfc	prodh,w,c
  7609  00642A  6EDA               	movwf	fsr2h,c
  7610  00642C  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
  7611  006430  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
  7612                           
  7613                           ; BSR set to: 5
  7614                           ;usb_device.c: 1870: };usb_device.c: 1872: if(p->STAT.Val & 0x04)
  7615  006434  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
  7616  006438  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
  7617  00643C  A4DF               	btfss	indf2,2,c
  7618  00643E  D00E               	goto	l364
  7619                           
  7620                           ; BSR set to: 5
  7621                           ;usb_device.c: 1873: CtrlTrfData[0]=0x01;
  7622  006440  0E01               	movlw	1
  7623  006442  6F20               	movwf	32,b	;volatile
  7624  006444  D00B               	goto	l364
  7625  006446                     l3858:
  7626                           
  7627                           ; BSR set to: 5
  7628  006446  5100               	movf	0,w,b	;volatile
  7629  006448  0B1F               	andlw	31
  7630                           
  7631                           ; Switch size 1, requested type "simple"
  7632                           ; Number of cases is 3, Range of values is 0 to 2
  7633                           ; switch strategies available:
  7634                           ; Name         Instructions Cycles
  7635                           ; simple_byte           10     6 (average)
  7636                           ;	Chosen strategy is simple_byte
  7637  00644A  0A00               	xorlw	0	; case 0
  7638  00644C  B4D8               	btfsc	status,2,c
  7639  00644E  D7CC               	goto	l361
  7640  006450  0A01               	xorlw	1	; case 1
  7641  006452  B4D8               	btfsc	status,2,c
  7642  006454  D7D1               	goto	l365
  7643  006456  0A03               	xorlw	3	; case 2
  7644  006458  B4D8               	btfsc	status,2,c
  7645  00645A  D7D0               	goto	l366
  7646  00645C                     l364:
  7647                           
  7648                           ;usb_device.c: 1878: if(inPipes[0].info.bits.busy == 1)
  7649  00645C  AE51               	btfss	(_inPipes+3)^0,7,c
  7650  00645E  0012               	return	
  7651                           
  7652                           ;usb_device.c: 1879: {;usb_device.c: 1880: inPipes[0].pSrc.bRam = (BYTE*)&CtrlTrfData;
  7653  006460  0E20               	movlw	32
  7654  006462  6E4E               	movwf	_inPipes^0,c
  7655  006464  0E05               	movlw	5
  7656  006466  6E4F               	movwf	(_inPipes+1)^0,c
  7657                           
  7658                           ;usb_device.c: 1881: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  7659  006468  8051               	bsf	(_inPipes+3)^0,0,c
  7660                           
  7661                           ;usb_device.c: 1882: inPipes[0].wCount.v[0] = 2;
  7662  00646A  0E02               	movlw	2
  7663  00646C  6E52               	movwf	(_inPipes+4)^0,c
  7664  00646E  0012               	return		;funcret
  7665  006470                     __end_of_USBStdGetStatusHandler:
  7666                           	callstack 0
  7667                           
  7668 ;; *************** function _USBStdGetDscHandler *****************
  7669 ;; Defined at:
  7670 ;;		line 1767 in file "../USB Stack/usb_device.c"
  7671 ;; Parameters:    Size  Location     Type
  7672 ;;		None
  7673 ;; Auto vars:     Size  Location     Type
  7674 ;;		None
  7675 ;; Return value:  Size  Location     Type
  7676 ;;                  1    wreg      void 
  7677 ;; Registers used:
  7678 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  7679 ;; Tracked objects:
  7680 ;;		On entry : 0/0
  7681 ;;		On exit  : 0/0
  7682 ;;		Unchanged: 0/0
  7683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  7684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  7685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0
  7686 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0
  7687 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0
  7688 ;;Total ram usage:        2 bytes
  7689 ;; Hardware stack levels used: 1
  7690 ;; This function calls:
  7691 ;;		Nothing
  7692 ;; This function is called by:
  7693 ;;		_USBCheckStdRequest
  7694 ;; This function uses a non-reentrant model
  7695 ;;
  7696                           
  7697                           	psect	text41
  7698  006B50                     __ptext41:
  7699                           	callstack 0
  7700  006B50                     _USBStdGetDscHandler:
  7701                           	callstack 26
  7702                           
  7703                           ;usb_device.c: 1769: if(SetupPkt.bmRequestType == 0x80)
  7704                           
  7705                           ;incstack = 0
  7706  006B50  0E80               	movlw	128
  7707  006B52  0105               	movlb	5	; () banked
  7708  006B54  1900               	xorwf	0,w,b	;volatile
  7709  006B56  A4D8               	btfss	status,2,c
  7710  006B58  0012               	return	
  7711                           
  7712                           ; BSR set to: 5
  7713                           ;usb_device.c: 1770: {;usb_device.c: 1771: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  7714  006B5A  0EC0               	movlw	192
  7715  006B5C  6E51               	movwf	(_inPipes+3)^0,c
  7716                           
  7717                           ;usb_device.c: 1773: switch(SetupPkt.bDescriptorType)
  7718  006B5E  D05E               	goto	l3824
  7719  006B60                     l3804:
  7720                           
  7721                           ; BSR set to: 5
  7722                           ;usb_device.c: 1779: inPipes[0].pSrc.bRom = (const BYTE*)&device_dsc;
  7723  006B60  0EE8               	movlw	low _device_dsc
  7724  006B62  6E4E               	movwf	_inPipes^0,c
  7725  006B64  0E7F               	movlw	high _device_dsc
  7726  006B66  6E4F               	movwf	(_inPipes+1)^0,c
  7727                           
  7728                           ; BSR set to: 5
  7729                           ;usb_device.c: 1781: inPipes[0].wCount.Val = sizeof(device_dsc);
  7730  006B68  0E00               	movlw	0
  7731  006B6A  6E53               	movwf	(_inPipes+5)^0,c
  7732  006B6C  0E12               	movlw	18
  7733  006B6E  6E52               	movwf	(_inPipes+4)^0,c
  7734                           
  7735                           ;usb_device.c: 1782: break;
  7736  006B70  0012               	return	
  7737  006B72                     l3808:
  7738                           
  7739                           ; BSR set to: 5
  7740                           ;usb_device.c: 1787: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  7741  006B72  5102               	movf	2,w,b	;volatile
  7742  006B74  0D02               	mullw	2
  7743  006B76  0E10               	movlw	low _USB_CD_Ptr
  7744  006B78  24F3               	addwf	243,w,c
  7745  006B7A  6EF6               	movwf	tblptrl,c
  7746  006B7C  0E7E               	movlw	high _USB_CD_Ptr
  7747  006B7E  20F4               	addwfc	244,w,c
  7748  006B80  6EF7               	movwf	tblptrh,c
  7749  006B82                     	if	0	;There are less than 3 active tblptr bytes
  7750  006B82                     	endif
  7751  006B82  0009               	tblrd		*+
  7752  006B84  CFF5 F04E          	movff	tablat,_inPipes
  7753  006B88  000A               	tblrd		*-
  7754  006B8A  CFF5 F04F          	movff	tablat,_inPipes+1
  7755                           
  7756                           ; BSR set to: 5
  7757                           ;usb_device.c: 1789: inPipes[0].wCount.Val = *(inPipes[0].pSrc.wRom+1);
  7758  006B8E  0E02               	movlw	2
  7759  006B90  244E               	addwf	_inPipes^0,w,c
  7760  006B92  6E01               	movwf	??_USBStdGetDscHandler^0,c
  7761  006B94  0E00               	movlw	0
  7762  006B96  204F               	addwfc	(_inPipes+1)^0,w,c
  7763  006B98  6E02               	movwf	(??_USBStdGetDscHandler+1)^0,c
  7764  006B9A  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
  7765  006B9E  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
  7766  006BA2  6AF8               	clrf	tblptru,c
  7767  006BA4  0E07               	movlw	(high __ramtop+-1)
  7768  006BA6  64F7               	cpfsgt	tblptrh,c
  7769  006BA8  D007               	bra	u3207
  7770  006BAA  0009               	tblrd		*+
  7771  006BAC  CFF5 F052          	movff	tablat,_inPipes+4
  7772  006BB0  0009               	tblrd		*+
  7773  006BB2  CFF5 F053          	movff	tablat,_inPipes+5
  7774  006BB6  D008               	bra	u3200
  7775  006BB8                     u3207:
  7776  006BB8  CFF6 FFE1          	movff	tblptrl,fsr1l
  7777  006BBC  CFF7 FFE2          	movff	tblptrh,fsr1h
  7778  006BC0  CFE6 F052          	movff	postinc1,_inPipes+4
  7779  006BC4  CFE6 F053          	movff	postinc1,_inPipes+5
  7780  006BC8                     u3200:
  7781                           
  7782                           ;usb_device.c: 1790: break;
  7783  006BC8  0012               	return	
  7784  006BCA                     l3812:
  7785                           
  7786                           ; BSR set to: 5
  7787                           ;usb_device.c: 1795: if(SetupPkt.bDscIndex<7)
  7788  006BCA  0E07               	movlw	7
  7789  006BCC  6102               	cpfslt	2,b	;volatile
  7790  006BCE  D023               	goto	l3818
  7791                           
  7792                           ; BSR set to: 5
  7793                           ;usb_device.c: 1796: {;usb_device.c: 1798: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
  7794  006BD0  5102               	movf	2,w,b	;volatile
  7795  006BD2  0D02               	mullw	2
  7796  006BD4  0E04               	movlw	low _USB_SD_Ptr
  7797  006BD6  24F3               	addwf	243,w,c
  7798  006BD8  6EF6               	movwf	tblptrl,c
  7799  006BDA  0E7E               	movlw	high _USB_SD_Ptr
  7800  006BDC  20F4               	addwfc	244,w,c
  7801  006BDE  6EF7               	movwf	tblptrh,c
  7802  006BE0                     	if	0	;There are less than 3 active tblptr bytes
  7803  006BE0                     	endif
  7804  006BE0  0009               	tblrd		*+
  7805  006BE2  CFF5 F04E          	movff	tablat,_inPipes
  7806  006BE6  000A               	tblrd		*-
  7807  006BE8  CFF5 F04F          	movff	tablat,_inPipes+1
  7808                           
  7809                           ; BSR set to: 5
  7810                           ;usb_device.c: 1800: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  7811  006BEC  C04E  FFF6         	movff	_inPipes,tblptrl
  7812  006BF0  C04F  FFF7         	movff	_inPipes+1,tblptrh
  7813  006BF4  6AF8               	clrf	tblptru,c
  7814  006BF6  0E07               	movlw	(high __ramtop+-1)
  7815  006BF8  64F7               	cpfsgt	tblptrh,c
  7816  006BFA  D003               	bra	u3227
  7817  006BFC  0008               	tblrd		*
  7818  006BFE  50F5               	movf	tablat,w,c
  7819  006C00  D005               	bra	u3220
  7820  006C02                     u3227:
  7821  006C02  CFF6 FFE1          	movff	tblptrl,fsr1l
  7822  006C06  CFF7 FFE2          	movff	tblptrh,fsr1h
  7823  006C0A  50E7               	movf	indf1,w,c
  7824  006C0C                     u3220:
  7825  006C0C  6E01               	movwf	??_USBStdGetDscHandler^0,c
  7826  006C0E  5001               	movf	??_USBStdGetDscHandler^0,w,c
  7827  006C10  6E52               	movwf	(_inPipes+4)^0,c
  7828  006C12  6A53               	clrf	(_inPipes+5)^0,c
  7829                           
  7830                           ;usb_device.c: 1801: }
  7831  006C14  0012               	return	
  7832  006C16                     l3818:
  7833                           
  7834                           ; BSR set to: 5
  7835                           ;usb_device.c: 1802: else;usb_device.c: 1803: {;usb_device.c: 1804: inPipes[0].info.Val 
      +                          = 0;
  7836  006C16  0E00               	movlw	0
  7837  006C18  6E51               	movwf	(_inPipes+3)^0,c
  7838  006C1A  0012               	return	
  7839  006C1C                     l3824:
  7840                           
  7841                           ; BSR set to: 5
  7842  006C1C  5103               	movf	3,w,b	;volatile
  7843                           
  7844                           ; Switch size 1, requested type "simple"
  7845                           ; Number of cases is 3, Range of values is 1 to 3
  7846                           ; switch strategies available:
  7847                           ; Name         Instructions Cycles
  7848                           ; simple_byte           10     6 (average)
  7849                           ;	Chosen strategy is simple_byte
  7850  006C1E  0A01               	xorlw	1	; case 1
  7851  006C20  B4D8               	btfsc	status,2,c
  7852  006C22  D79E               	goto	l3804
  7853  006C24  0A03               	xorlw	3	; case 2
  7854  006C26  B4D8               	btfsc	status,2,c
  7855  006C28  D7A4               	goto	l3808
  7856  006C2A  0A01               	xorlw	1	; case 3
  7857  006C2C  B4D8               	btfsc	status,2,c
  7858  006C2E  D7CD               	goto	l3812
  7859  006C30  D7F2               	goto	l3818
  7860  006C32                     __end_of_USBStdGetDscHandler:
  7861                           	callstack 0
  7862                           
  7863 ;; *************** function _USBStdFeatureReqHandler *****************
  7864 ;; Defined at:
  7865 ;;		line 1628 in file "../USB Stack/usb_device.c"
  7866 ;; Parameters:    Size  Location     Type
  7867 ;;		None
  7868 ;; Auto vars:     Size  Location     Type
  7869 ;;  p               2    4[COMRAM] PTR struct __BDT
  7870 ;;		 -> BDT(64), 
  7871 ;;  pUEP            2    2[COMRAM] PTR unsigned int 
  7872 ;;		 -> UEP0(1), 
  7873 ;; Return value:  Size  Location     Type
  7874 ;;                  1    wreg      void 
  7875 ;; Registers used:
  7876 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7877 ;; Tracked objects:
  7878 ;;		On entry : 0/0
  7879 ;;		On exit  : 0/0
  7880 ;;		Unchanged: 0/0
  7881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  7882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  7883 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0
  7884 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0
  7885 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0
  7886 ;;Total ram usage:        6 bytes
  7887 ;; Hardware stack levels used: 1
  7888 ;; This function calls:
  7889 ;;		Nothing
  7890 ;; This function is called by:
  7891 ;;		_USBCheckStdRequest
  7892 ;; This function uses a non-reentrant model
  7893 ;;
  7894                           
  7895                           	psect	text42
  7896  006FCE                     __ptext42:
  7897                           	callstack 0
  7898  006FCE                     _USBStdFeatureReqHandler:
  7899                           	callstack 26
  7900                           
  7901                           ;usb_device.c: 1630: BDT_ENTRY *p;;usb_device.c: 1634: unsigned int* pUEP;;usb_device.c:
      +                           1668: if((SetupPkt.bFeature == 1)&&;usb_device.c: 1669: (SetupPkt.Recipient == (0x00)))
  7902                           
  7903                           ;incstack = 0
  7904  006FCE  0105               	movlb	5	; () banked
  7905  006FD0  0502               	decf	2,w,b	;volatile
  7906  006FD2  A4D8               	btfss	status,2,c
  7907  006FD4  D00F               	goto	l335
  7908                           
  7909                           ; BSR set to: 5
  7910  006FD6  5100               	movf	0,w,b	;volatile
  7911  006FD8  0B1F               	andlw	31
  7912  006FDA  0900               	iorlw	0
  7913  006FDC  A4D8               	btfss	status,2,c
  7914  006FDE  D00A               	goto	l335
  7915                           
  7916                           ; BSR set to: 5
  7917                           ;usb_device.c: 1670: {;usb_device.c: 1671: inPipes[0].info.bits.busy = 1;
  7918  006FE0  8E51               	bsf	(_inPipes+3)^0,7,c
  7919                           
  7920                           ; BSR set to: 5
  7921                           ;usb_device.c: 1672: if(SetupPkt.bRequest == 3)
  7922  006FE2  0E03               	movlw	3
  7923  006FE4  1901               	xorwf	1,w,b	;volatile
  7924  006FE6  A4D8               	btfss	status,2,c
  7925  006FE8  D002               	goto	l3876
  7926                           
  7927                           ; BSR set to: 5
  7928                           ;usb_device.c: 1673: RemoteWakeup = TRUE;
  7929  006FEA  0E01               	movlw	1
  7930  006FEC  D001               	goto	L16
  7931  006FEE                     l3876:
  7932                           
  7933                           ; BSR set to: 5
  7934                           ;usb_device.c: 1674: else;usb_device.c: 1675: RemoteWakeup = FALSE;
  7935  006FEE  0E00               	movlw	0
  7936  006FF0                     L16:
  7937  006FF0  0100               	movlb	0	; () banked
  7938  006FF2  6FC3               	movwf	_RemoteWakeup& (0+255),b
  7939  006FF4                     l335:
  7940                           
  7941                           ;usb_device.c: 1676: };usb_device.c: 1678: if((SetupPkt.bFeature == 0)&&;usb_device.c: 1
      +                          679: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 1680: (SetupPkt.EPNum != 0))
  7942  006FF4  0105               	movlb	5	; () banked
  7943  006FF6  5102               	movf	2,w,b	;volatile
  7944  006FF8  A4D8               	btfss	status,2,c
  7945  006FFA  0012               	return	
  7946                           
  7947                           ; BSR set to: 5
  7948  006FFC  5100               	movf	0,w,b	;volatile
  7949  006FFE  0B1F               	andlw	31
  7950  007000  0A02               	xorlw	2
  7951  007002  A4D8               	btfss	status,2,c
  7952  007004  0012               	return	
  7953                           
  7954                           ; BSR set to: 5
  7955  007006  5104               	movf	4,w,b	;volatile
  7956  007008  0B0F               	andlw	15
  7957  00700A  0900               	iorlw	0
  7958  00700C  B4D8               	btfsc	status,2,c
  7959  00700E  0012               	return	
  7960                           
  7961                           ; BSR set to: 5
  7962                           ;usb_device.c: 1681: {;usb_device.c: 1682: inPipes[0].info.bits.busy = 1;
  7963  007010  8E51               	bsf	(_inPipes+3)^0,7,c
  7964                           
  7965                           ;usb_device.c: 1685: if(SetupPkt.EPDir == 0)
  7966  007012  BF04               	btfsc	4,7,b	;volatile
  7967  007014  D00A               	goto	l3886
  7968                           
  7969                           ; BSR set to: 5
  7970                           ;usb_device.c: 1686: {;usb_device.c: 1687: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  7971  007016  5104               	movf	4,w,b	;volatile
  7972  007018  0B0F               	andlw	15
  7973  00701A  6E01               	movwf	??_USBStdFeatureReqHandler^0,c
  7974  00701C  5001               	movf	??_USBStdFeatureReqHandler^0,w,c
  7975  00701E  0D02               	mullw	2
  7976  007020  0EA7               	movlw	low _pBDTEntryOut
  7977  007022  24F3               	addwf	243,w,c
  7978  007024  6ED9               	movwf	fsr2l,c
  7979  007026  0E00               	movlw	high _pBDTEntryOut
  7980  007028  D009               	goto	L17
  7981  00702A                     l3886:
  7982                           
  7983                           ; BSR set to: 5
  7984                           ;usb_device.c: 1689: else;usb_device.c: 1690: {;usb_device.c: 1691: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
  7985  00702A  5104               	movf	4,w,b	;volatile
  7986  00702C  0B0F               	andlw	15
  7987  00702E  6E01               	movwf	??_USBStdFeatureReqHandler^0,c
  7988  007030  5001               	movf	??_USBStdFeatureReqHandler^0,w,c
  7989  007032  0D02               	mullw	2
  7990  007034  0E9F               	movlw	low _pBDTEntryIn
  7991  007036  24F3               	addwf	243,w,c
  7992  007038  6ED9               	movwf	fsr2l,c
  7993  00703A  0E00               	movlw	high _pBDTEntryIn
  7994  00703C                     L17:
  7995  00703C  20F4               	addwfc	prodh,w,c
  7996  00703E  6EDA               	movwf	fsr2h,c
  7997  007040  CFDE F005          	movff	postinc2,USBStdFeatureReqHandler@p
  7998  007044  CFDD F006          	movff	postdec2,USBStdFeatureReqHandler@p+1
  7999                           
  8000                           ; BSR set to: 5
  8001                           ;usb_device.c: 1692: };usb_device.c: 1695: if(SetupPkt.bRequest == 3)
  8002  007048  0E03               	movlw	3
  8003  00704A  1901               	xorwf	1,w,b	;volatile
  8004  00704C  A4D8               	btfss	status,2,c
  8005  00704E  D007               	goto	l3892
  8006                           
  8007                           ; BSR set to: 5
  8008                           ;usb_device.c: 1696: {;usb_device.c: 1698: p->STAT.Val = 0x80|0x04;
  8009  007050  C005  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  8010  007054  C006  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  8011  007058  0E84               	movlw	132
  8012  00705A  6EDF               	movwf	indf2,c
  8013                           
  8014                           ;usb_device.c: 1699: }
  8015  00705C  0012               	return	
  8016  00705E                     l3892:
  8017                           
  8018                           ; BSR set to: 5
  8019                           ;usb_device.c: 1700: else;usb_device.c: 1701: {;usb_device.c: 1708: pUEP = (unsigned int
      +                          *)(&UEP0+SetupPkt.EPNum);
  8020  00705E  5104               	movf	4,w,b	;volatile
  8021  007060  0B0F               	andlw	15
  8022  007062  6E01               	movwf	??_USBStdFeatureReqHandler^0,c
  8023  007064  6A02               	clrf	(??_USBStdFeatureReqHandler+1)^0,c
  8024  007066  0E70               	movlw	112
  8025  007068  2401               	addwf	??_USBStdFeatureReqHandler^0,w,c
  8026  00706A  6E03               	movwf	USBStdFeatureReqHandler@pUEP^0,c
  8027  00706C  0E0F               	movlw	15
  8028  00706E  2002               	addwfc	(??_USBStdFeatureReqHandler+1)^0,w,c
  8029  007070  6E04               	movwf	(USBStdFeatureReqHandler@pUEP+1)^0,c
  8030                           
  8031                           ; BSR set to: 5
  8032                           ;usb_device.c: 1712: *pUEP &= ~0x0001;
  8033  007072  C003  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
  8034  007076  C004  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
  8035  00707A  0EFE               	movlw	254
  8036  00707C  16DE               	andwf	postinc2,f,c
  8037  00707E  0EFF               	movlw	255
  8038  007080  16DD               	andwf	postdec2,f,c
  8039                           
  8040                           ; BSR set to: 5
  8041                           ;usb_device.c: 1714: if(SetupPkt.EPDir == 1)
  8042  007082  AF04               	btfss	4,7,b	;volatile
  8043  007084  D00F               	goto	l3904
  8044                           
  8045                           ; BSR set to: 5
  8046                           ;usb_device.c: 1715: {;usb_device.c: 1720: p->STAT.Val = 0x00|0x00;
  8047  007086  C005  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  8048  00708A  C006  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  8049  00708E  0E00               	movlw	0
  8050  007090  6EDF               	movwf	indf2,c
  8051                           
  8052                           ; BSR set to: 5
  8053                           ;usb_device.c: 1722: ((BYTE_VAL*)&p)->Val ^= 0x0004;
  8054  007092  0E04               	movlw	4
  8055  007094  1A05               	xorwf	USBStdFeatureReqHandler@p^0,f,c
  8056                           
  8057                           ; BSR set to: 5
  8058                           ;usb_device.c: 1723: p->STAT.Val = 0x00|0x40;
  8059  007096  C005  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  8060  00709A  C006  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  8061  00709E  0E40               	movlw	64
  8062  0070A0  6EDF               	movwf	indf2,c
  8063                           
  8064                           ;usb_device.c: 1727: }
  8065  0070A2  0012               	return	
  8066  0070A4                     l3904:
  8067                           
  8068                           ; BSR set to: 5
  8069                           ;usb_device.c: 1728: else;usb_device.c: 1729: {;usb_device.c: 1737: p->STAT.Val = 0x80|0
      +                          x00|0x08;
  8070  0070A4  C005  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  8071  0070A8  C006  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  8072  0070AC  0E88               	movlw	136
  8073  0070AE  6EDF               	movwf	indf2,c
  8074                           
  8075                           ; BSR set to: 5
  8076                           ;usb_device.c: 1739: ((BYTE_VAL*)&p)->Val ^= 0x0004;
  8077  0070B0  0E04               	movlw	4
  8078  0070B2  1A05               	xorwf	USBStdFeatureReqHandler@p^0,f,c
  8079                           
  8080                           ; BSR set to: 5
  8081                           ;usb_device.c: 1740: p->STAT.Val = 0x80|0x40|0x08;
  8082  0070B4  C005  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  8083  0070B8  C006  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  8084  0070BC  0EC8               	movlw	200
  8085  0070BE  6EDF               	movwf	indf2,c
  8086                           
  8087                           ; BSR set to: 5
  8088  0070C0  0012               	return		;funcret
  8089  0070C2                     __end_of_USBStdFeatureReqHandler:
  8090                           	callstack 0
  8091                           
  8092 ;; *************** function _USBCtrlTrfOutHandler *****************
  8093 ;; Defined at:
  8094 ;;		line 1395 in file "../USB Stack/usb_device.c"
  8095 ;; Parameters:    Size  Location     Type
  8096 ;;		None
  8097 ;; Auto vars:     Size  Location     Type
  8098 ;;		None
  8099 ;; Return value:  Size  Location     Type
  8100 ;;                  1    wreg      void 
  8101 ;; Registers used:
  8102 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8103 ;; Tracked objects:
  8104 ;;		On entry : 0/0
  8105 ;;		On exit  : 0/0
  8106 ;;		Unchanged: 0/0
  8107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  8108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  8109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0
  8110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  8111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0
  8112 ;;Total ram usage:        0 bytes
  8113 ;; Hardware stack levels used: 1
  8114 ;; Hardware stack levels required when called: 1
  8115 ;; This function calls:
  8116 ;;		_USBCtrlTrfRxService
  8117 ;;		_USBPrepareForNextSetupTrf
  8118 ;; This function is called by:
  8119 ;;		_USBCtrlEPService
  8120 ;; This function uses a non-reentrant model
  8121 ;;
  8122                           
  8123                           	psect	text43
  8124  005FCC                     __ptext43:
  8125                           	callstack 0
  8126  005FCC                     _USBCtrlTrfOutHandler:
  8127                           	callstack 27
  8128                           
  8129                           ;usb_device.c: 1397: if(controlTransferState == 2)
  8130                           
  8131                           ; BSR set to: 5
  8132                           ;incstack = 0
  8133  005FCC  0E02               	movlw	2
  8134  005FCE  1858               	xorwf	_controlTransferState^0,w,c
  8135  005FD0  A4D8               	btfss	status,2,c
  8136  005FD2  D003               	goto	l4186
  8137                           
  8138                           ;usb_device.c: 1398: {;usb_device.c: 1399: USBCtrlTrfRxService();
  8139  005FD4  EC19  F036         	call	_USBCtrlTrfRxService	;wreg free
  8140                           
  8141                           ;usb_device.c: 1400: }
  8142  005FD8  0012               	return	
  8143  005FDA                     l4186:
  8144                           
  8145                           ;usb_device.c: 1401: else;usb_device.c: 1402: {;usb_device.c: 1408: USBPrepareForNextSet
      +                          upTrf();
  8146  005FDA  EC1D  F02F         	call	_USBPrepareForNextSetupTrf	;wreg free
  8147                           
  8148                           ;usb_device.c: 1409: if(BothEP0OutUOWNsSet == FALSE)
  8149  005FDE  0100               	movlb	0	; () banked
  8150  005FE0  51C2               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
  8151  005FE2  A4D8               	btfss	status,2,c
  8152  005FE4  D019               	goto	l4194
  8153                           
  8154                           ; BSR set to: 0
  8155                           ;usb_device.c: 1410: {;usb_device.c: 1411: pBDTEntryEP0OutNext->CNT = 8;
  8156  005FE6  EE20 F001          	lfsr	2,1
  8157  005FEA  5054               	movf	_pBDTEntryEP0OutNext^0,w,c
  8158  005FEC  26D9               	addwf	fsr2l,f,c
  8159  005FEE  5055               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
  8160  005FF0  22DA               	addwfc	fsr2h,f,c
  8161  005FF2  0E08               	movlw	8
  8162  005FF4  6EDF               	movwf	indf2,c
  8163                           
  8164                           ;usb_device.c: 1412: pBDTEntryEP0OutNext->ADR = (BYTE*)&SetupPkt;
  8165  005FF6  EE20 F002          	lfsr	2,2
  8166  005FFA  5054               	movf	_pBDTEntryEP0OutNext^0,w,c
  8167  005FFC  26D9               	addwf	fsr2l,f,c
  8168  005FFE  5055               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
  8169  006000  22DA               	addwfc	fsr2h,f,c
  8170  006002  0E00               	movlw	0
  8171  006004  6EDE               	movwf	postinc2,c
  8172  006006  0E05               	movlw	5
  8173  006008  6EDD               	movwf	postdec2,c
  8174                           
  8175                           ; BSR set to: 0
  8176                           ;usb_device.c: 1413: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x00|0x08|0x04;
  8177  00600A  C054  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8178  00600E  C055  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8179  006012  0E8C               	movlw	140
  8180  006014  6EDF               	movwf	indf2,c
  8181                           
  8182                           ;usb_device.c: 1414: }
  8183  006016  0012               	return	
  8184  006018                     l4194:
  8185                           
  8186                           ; BSR set to: 0
  8187                           ;usb_device.c: 1415: else;usb_device.c: 1416: {;usb_device.c: 1417: BothEP0OutUOWNsSet =
      +                           FALSE;
  8188  006018  0E00               	movlw	0
  8189  00601A  6FC2               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  8190  00601C  0012               	return		;funcret
  8191  00601E                     __end_of_USBCtrlTrfOutHandler:
  8192                           	callstack 0
  8193                           
  8194 ;; *************** function _USBCtrlTrfRxService *****************
  8195 ;; Defined at:
  8196 ;;		line 2156 in file "../USB Stack/usb_device.c"
  8197 ;; Parameters:    Size  Location     Type
  8198 ;;		None
  8199 ;; Auto vars:     Size  Location     Type
  8200 ;;  byteToRead      1    1[COMRAM] unsigned char 
  8201 ;;  i               1    0[COMRAM] unsigned char 
  8202 ;; Return value:  Size  Location     Type
  8203 ;;                  1    wreg      void 
  8204 ;; Registers used:
  8205 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8206 ;; Tracked objects:
  8207 ;;		On entry : 0/0
  8208 ;;		On exit  : 0/0
  8209 ;;		Unchanged: 0/0
  8210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  8211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  8212 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0
  8213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  8214 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0
  8215 ;;Total ram usage:        2 bytes
  8216 ;; Hardware stack levels used: 1
  8217 ;; This function calls:
  8218 ;;		Nothing
  8219 ;; This function is called by:
  8220 ;;		_USBCtrlTrfOutHandler
  8221 ;; This function uses a non-reentrant model
  8222 ;;
  8223                           
  8224                           	psect	text44
  8225  006C32                     __ptext44:
  8226                           	callstack 0
  8227  006C32                     _USBCtrlTrfRxService:
  8228                           	callstack 27
  8229                           
  8230                           ;usb_device.c: 2158: BYTE byteToRead;;usb_device.c: 2159: BYTE i;;usb_device.c: 2161: by
      +                          teToRead = pBDTEntryEP0OutCurrent->CNT;
  8231                           
  8232                           ;incstack = 0
  8233  006C32  EE20 F001          	lfsr	2,1
  8234  006C36  5056               	movf	_pBDTEntryEP0OutCurrent^0,w,c
  8235  006C38  26D9               	addwf	fsr2l,f,c
  8236  006C3A  5057               	movf	(_pBDTEntryEP0OutCurrent+1)^0,w,c
  8237  006C3C  22DA               	addwfc	fsr2h,f,c
  8238  006C3E  50DF               	movf	indf2,w,c
  8239  006C40  6E02               	movwf	USBCtrlTrfRxService@byteToRead^0,c
  8240                           
  8241                           ;usb_device.c: 2166: if(byteToRead > outPipes[0].wCount.Val)
  8242  006C42  5002               	movf	USBCtrlTrfRxService@byteToRead^0,w,c
  8243  006C44  0100               	movlb	0	; () banked
  8244  006C46  5D9B               	subwf	(_outPipes+4)& (0+255),w,b
  8245  006C48  0E00               	movlw	0
  8246  006C4A  599C               	subwfb	(_outPipes+5)& (0+255),w,b
  8247  006C4C  B0D8               	btfsc	status,0,c
  8248  006C4E  D003               	goto	l4054
  8249                           
  8250                           ; BSR set to: 0
  8251                           ;usb_device.c: 2167: {;usb_device.c: 2168: byteToRead = outPipes[0].wCount.Val;
  8252  006C50  C09B  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
  8253                           
  8254                           ;usb_device.c: 2169: }
  8255  006C54  D007               	goto	l4056
  8256  006C56                     l4054:
  8257                           
  8258                           ; BSR set to: 0
  8259                           ;usb_device.c: 2170: else;usb_device.c: 2171: {;usb_device.c: 2172: outPipes[0].wCount.V
      +                          al = outPipes[0].wCount.Val - byteToRead;
  8260  006C56  5002               	movf	USBCtrlTrfRxService@byteToRead^0,w,c
  8261  006C58  5D9B               	subwf	(_outPipes+4)& (0+255),w,b
  8262  006C5A  6F9B               	movwf	(_outPipes+4)& (0+255),b
  8263  006C5C  519C               	movf	(_outPipes+5)& (0+255),w,b
  8264  006C5E  A0D8               	btfss	status,0,c
  8265  006C60  059C               	decf	(_outPipes+5)& (0+255),w,b
  8266  006C62  6F9C               	movwf	(_outPipes+5)& (0+255),b
  8267  006C64                     l4056:
  8268                           
  8269                           ; BSR set to: 0
  8270                           ;usb_device.c: 2173: };usb_device.c: 2175: for(i=0;i<byteToRead;i++)
  8271  006C64  0E00               	movlw	0
  8272  006C66  6E01               	movwf	USBCtrlTrfRxService@i^0,c
  8273  006C68  D00F               	goto	l4064
  8274  006C6A                     l4058:
  8275                           
  8276                           ; BSR set to: 0
  8277                           ;usb_device.c: 2176: {;usb_device.c: 2177: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  8278  006C6A  0E20               	movlw	32
  8279  006C6C  2401               	addwf	USBCtrlTrfRxService@i^0,w,c
  8280  006C6E  6ED9               	movwf	fsr2l,c
  8281  006C70  6ADA               	clrf	fsr2h,c
  8282  006C72  0E05               	movlw	5
  8283  006C74  22DA               	addwfc	fsr2h,f,c
  8284  006C76  C097  FFE1         	movff	_outPipes,fsr1l
  8285  006C7A  C098  FFE2         	movff	_outPipes+1,fsr1h
  8286  006C7E  CFDF FFE7          	movff	indf2,indf1
  8287                           
  8288                           ; BSR set to: 0
  8289  006C82  4B97               	infsnz	_outPipes& (0+255),f,b
  8290  006C84  2B98               	incf	(_outPipes+1)& (0+255),f,b
  8291                           
  8292                           ; BSR set to: 0
  8293  006C86  2A01               	incf	USBCtrlTrfRxService@i^0,f,c
  8294  006C88                     l4064:
  8295                           
  8296                           ; BSR set to: 0
  8297  006C88  5002               	movf	USBCtrlTrfRxService@byteToRead^0,w,c
  8298  006C8A  5C01               	subwf	USBCtrlTrfRxService@i^0,w,c
  8299  006C8C  A0D8               	btfss	status,0,c
  8300  006C8E  D7ED               	goto	l4058
  8301                           
  8302                           ; BSR set to: 0
  8303                           ;usb_device.c: 2178: };usb_device.c: 2181: if(outPipes[0].wCount.Val > 0)
  8304  006C90  519B               	movf	(_outPipes+4)& (0+255),w,b
  8305  006C92  119C               	iorwf	(_outPipes+5)& (0+255),w,b
  8306  006C94  B4D8               	btfsc	status,2,c
  8307  006C96  D026               	goto	l4076
  8308                           
  8309                           ; BSR set to: 0
  8310                           ;usb_device.c: 2182: {;usb_device.c: 2188: pBDTEntryEP0OutNext->CNT = 8;
  8311  006C98  EE20 F001          	lfsr	2,1
  8312  006C9C  5054               	movf	_pBDTEntryEP0OutNext^0,w,c
  8313  006C9E  26D9               	addwf	fsr2l,f,c
  8314  006CA0  5055               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
  8315  006CA2  22DA               	addwfc	fsr2h,f,c
  8316  006CA4  0E08               	movlw	8
  8317  006CA6  6EDF               	movwf	indf2,c
  8318                           
  8319                           ;usb_device.c: 2189: pBDTEntryEP0OutNext->ADR = (BYTE*)&CtrlTrfData;
  8320  006CA8  EE20 F002          	lfsr	2,2
  8321  006CAC  5054               	movf	_pBDTEntryEP0OutNext^0,w,c
  8322  006CAE  26D9               	addwf	fsr2l,f,c
  8323  006CB0  5055               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
  8324  006CB2  22DA               	addwfc	fsr2h,f,c
  8325  006CB4  0E20               	movlw	32
  8326  006CB6  6EDE               	movwf	postinc2,c
  8327  006CB8  0E05               	movlw	5
  8328  006CBA  6EDD               	movwf	postdec2,c
  8329                           
  8330                           ; BSR set to: 0
  8331                           ;usb_device.c: 2190: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  8332  006CBC  C056  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8333  006CC0  C057  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8334  006CC4  BCDF               	btfsc	indf2,6,c
  8335  006CC6  D007               	goto	l4074
  8336                           
  8337                           ; BSR set to: 0
  8338                           ;usb_device.c: 2191: {;usb_device.c: 2192: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x40|0x0
      +                          8;
  8339  006CC8  C054  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8340  006CCC  C055  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8341  006CD0  0EC8               	movlw	200
  8342  006CD2  6EDF               	movwf	indf2,c
  8343                           
  8344                           ;usb_device.c: 2193: }
  8345  006CD4  0012               	return	
  8346  006CD6                     l4074:
  8347                           
  8348                           ; BSR set to: 0
  8349                           ;usb_device.c: 2194: else;usb_device.c: 2195: {;usb_device.c: 2196: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x80|0x00|0x08;
  8350  006CD6  C054  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8351  006CDA  C055  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8352  006CDE  0E88               	movlw	136
  8353  006CE0  6EDF               	movwf	indf2,c
  8354  006CE2  0012               	return	
  8355  006CE4                     l4076:
  8356                           
  8357                           ; BSR set to: 0
  8358                           ;usb_device.c: 2199: else;usb_device.c: 2200: {;usb_device.c: 2201: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
  8359  006CE4  EE20 F001          	lfsr	2,1
  8360  006CE8  5054               	movf	_pBDTEntryEP0OutNext^0,w,c
  8361  006CEA  26D9               	addwf	fsr2l,f,c
  8362  006CEC  5055               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
  8363  006CEE  22DA               	addwfc	fsr2h,f,c
  8364  006CF0  0E08               	movlw	8
  8365  006CF2  6EDF               	movwf	indf2,c
  8366                           
  8367                           ;usb_device.c: 2202: pBDTEntryEP0OutNext->ADR = (BYTE*)&SetupPkt;
  8368  006CF4  EE20 F002          	lfsr	2,2
  8369  006CF8  5054               	movf	_pBDTEntryEP0OutNext^0,w,c
  8370  006CFA  26D9               	addwf	fsr2l,f,c
  8371  006CFC  5055               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
  8372  006CFE  22DA               	addwfc	fsr2h,f,c
  8373  006D00  0E00               	movlw	0
  8374  006D02  6EDE               	movwf	postinc2,c
  8375  006D04  0E05               	movlw	5
  8376  006D06  6EDD               	movwf	postdec2,c
  8377                           
  8378                           ; BSR set to: 0
  8379                           ;usb_device.c: 2206: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x04;
  8380  006D08  C054  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8381  006D0C  C055  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8382  006D10  0E84               	movlw	132
  8383  006D12  6EDF               	movwf	indf2,c
  8384                           
  8385                           ; BSR set to: 0
  8386                           ;usb_device.c: 2211: };usb_device.c: 2212: outPipes[0].info.bits.busy = 0;
  8387  006D14  9F9A               	bcf	(_outPipes+3)& (0+255),7,b
  8388                           
  8389                           ; BSR set to: 0
  8390  006D16  0012               	return		;funcret
  8391  006D18                     __end_of_USBCtrlTrfRxService:
  8392                           	callstack 0
  8393                           
  8394 ;; *************** function _USBCtrlTrfInHandler *****************
  8395 ;; Defined at:
  8396 ;;		line 1445 in file "../USB Stack/usb_device.c"
  8397 ;; Parameters:    Size  Location     Type
  8398 ;;		None
  8399 ;; Auto vars:     Size  Location     Type
  8400 ;;  lastDTS         1    2[COMRAM] unsigned char 
  8401 ;; Return value:  Size  Location     Type
  8402 ;;                  1    wreg      void 
  8403 ;; Registers used:
  8404 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8405 ;; Tracked objects:
  8406 ;;		On entry : 0/0
  8407 ;;		On exit  : 0/0
  8408 ;;		Unchanged: 0/0
  8409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  8410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  8411 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0
  8412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  8413 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0
  8414 ;;Total ram usage:        1 bytes
  8415 ;; Hardware stack levels used: 1
  8416 ;; Hardware stack levels required when called: 1
  8417 ;; This function calls:
  8418 ;;		_USBCtrlTrfTxService
  8419 ;;		_USBPrepareForNextSetupTrf
  8420 ;; This function is called by:
  8421 ;;		_USBCtrlEPService
  8422 ;; This function uses a non-reentrant model
  8423 ;;
  8424                           
  8425                           	psect	text45
  8426  0062C2                     __ptext45:
  8427                           	callstack 0
  8428  0062C2                     _USBCtrlTrfInHandler:
  8429                           	callstack 27
  8430                           
  8431                           ;usb_device.c: 1447: BYTE lastDTS;;usb_device.c: 1449: lastDTS = pBDTEntryIn[0]->STAT.DT
      +                          S;
  8432                           
  8433                           ; BSR set to: 0
  8434                           ;incstack = 0
  8435  0062C2  C09F  FFD9         	movff	_pBDTEntryIn,fsr2l
  8436  0062C6  C0A0  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8437  0062CA  0100               	movlb	0	; () banked
  8438  0062CC  0E00               	movlw	0
  8439  0062CE  BCDF               	btfsc	indf2,6,c
  8440  0062D0  0E01               	movlw	1
  8441  0062D2  6E03               	movwf	USBCtrlTrfInHandler@lastDTS^0,c
  8442                           
  8443                           ; BSR set to: 0
  8444                           ;usb_device.c: 1452: ((BYTE_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  8445  0062D4  0E04               	movlw	4
  8446  0062D6  1B9F               	xorwf	_pBDTEntryIn& (0+255),f,b
  8447                           
  8448                           ; BSR set to: 0
  8449                           ;usb_device.c: 1455: if(USBDeviceState == ADR_PENDING_STATE)
  8450  0062D8  0E08               	movlw	8
  8451  0062DA  185A               	xorwf	_USBDeviceState^0,w,c
  8452  0062DC  A4D8               	btfss	status,2,c
  8453  0062DE  D009               	goto	l4210
  8454                           
  8455                           ; BSR set to: 0
  8456                           ;usb_device.c: 1456: {;usb_device.c: 1457: UADDR = SetupPkt.bDevADR.Val;
  8457  0062E0  C502 FF6E          	movff	1282,3950	;volatile
  8458                           
  8459                           ; BSR set to: 0
  8460                           ;usb_device.c: 1458: if(UADDR > 0)
  8461  0062E4  506E               	movf	110,w,c	;volatile
  8462  0062E6  B4D8               	btfsc	status,2,c
  8463  0062E8  D002               	goto	l4208
  8464                           
  8465                           ; BSR set to: 0
  8466                           ;usb_device.c: 1459: {;usb_device.c: 1460: USBDeviceState=ADDRESS_STATE;
  8467  0062EA  0E10               	movlw	16
  8468  0062EC  D001               	goto	L18
  8469  0062EE                     l4208:
  8470                           
  8471                           ; BSR set to: 0
  8472                           ;usb_device.c: 1462: else;usb_device.c: 1463: {;usb_device.c: 1464: USBDeviceState=DEFAU
      +                          LT_STATE;
  8473  0062EE  0E04               	movlw	4
  8474  0062F0                     L18:
  8475  0062F0  6E5A               	movwf	_USBDeviceState^0,c
  8476  0062F2                     l4210:
  8477                           
  8478                           ; BSR set to: 0
  8479                           ;usb_device.c: 1465: };usb_device.c: 1466: };usb_device.c: 1469: if(controlTransferState
      +                           == 1)
  8480  0062F2  0458               	decf	_controlTransferState^0,w,c
  8481  0062F4  A4D8               	btfss	status,2,c
  8482  0062F6  D028               	goto	l4226
  8483                           
  8484                           ; BSR set to: 0
  8485                           ;usb_device.c: 1470: {;usb_device.c: 1471: pBDTEntryIn[0]->ADR = (BYTE *)CtrlTrfData;
  8486  0062F8  EE20 F002          	lfsr	2,2
  8487  0062FC  519F               	movf	_pBDTEntryIn& (0+255),w,b
  8488  0062FE  26D9               	addwf	fsr2l,f,c
  8489  006300  51A0               	movf	(_pBDTEntryIn+1)& (0+255),w,b
  8490  006302  22DA               	addwfc	fsr2h,f,c
  8491  006304  0E20               	movlw	32
  8492  006306  6EDE               	movwf	postinc2,c
  8493  006308  0E05               	movlw	5
  8494  00630A  6EDD               	movwf	postdec2,c
  8495                           
  8496                           ; BSR set to: 0
  8497                           ;usb_device.c: 1472: USBCtrlTrfTxService();
  8498  00630C  ECDB  F038         	call	_USBCtrlTrfTxService	;wreg free
  8499                           
  8500                           ;usb_device.c: 1475: if(shortPacketStatus == 2)
  8501  006310  0E02               	movlw	2
  8502  006312  1859               	xorwf	_shortPacketStatus^0,w,c
  8503  006314  A4D8               	btfss	status,2,c
  8504  006316  D007               	goto	l4220
  8505                           
  8506                           ;usb_device.c: 1476: {;usb_device.c: 1479: pBDTEntryIn[0]->STAT.Val = 0x80|0x04;
  8507  006318  C09F  FFD9         	movff	_pBDTEntryIn,fsr2l
  8508  00631C  C0A0  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8509  006320  0E84               	movlw	132
  8510  006322  6EDF               	movwf	indf2,c
  8511                           
  8512                           ;usb_device.c: 1480: }
  8513  006324  0012               	return	
  8514  006326                     l4220:
  8515                           
  8516                           ;usb_device.c: 1481: else;usb_device.c: 1482: {;usb_device.c: 1483: if(lastDTS == 0)
  8517  006326  5003               	movf	USBCtrlTrfInHandler@lastDTS^0,w,c
  8518  006328  A4D8               	btfss	status,2,c
  8519  00632A  D007               	goto	l4224
  8520                           
  8521                           ;usb_device.c: 1484: {;usb_device.c: 1485: pBDTEntryIn[0]->STAT.Val = 0x80|0x40|0x08;
  8522  00632C  C09F  FFD9         	movff	_pBDTEntryIn,fsr2l
  8523  006330  C0A0  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8524  006334  0EC8               	movlw	200
  8525  006336  6EDF               	movwf	indf2,c
  8526                           
  8527                           ;usb_device.c: 1486: }
  8528  006338  0012               	return	
  8529  00633A                     l4224:
  8530                           
  8531                           ;usb_device.c: 1487: else;usb_device.c: 1488: {;usb_device.c: 1489: pBDTEntryIn[0]->STAT
      +                          .Val = 0x80|0x00|0x08;
  8532  00633A  C09F  FFD9         	movff	_pBDTEntryIn,fsr2l
  8533  00633E  C0A0  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8534  006342  0E88               	movlw	136
  8535  006344  6EDF               	movwf	indf2,c
  8536  006346  0012               	return	
  8537  006348                     l4226:
  8538                           
  8539                           ; BSR set to: 0
  8540                           ;usb_device.c: 1493: else;usb_device.c: 1494: {;usb_device.c: 1495: USBPrepareForNextSet
      +                          upTrf();
  8541  006348  EC1D  F02F         	call	_USBPrepareForNextSetupTrf	;wreg free
  8542  00634C  0012               	return		;funcret
  8543  00634E                     __end_of_USBCtrlTrfInHandler:
  8544                           	callstack 0
  8545                           
  8546 ;; *************** function _USBPrepareForNextSetupTrf *****************
  8547 ;; Defined at:
  8548 ;;		line 1517 in file "../USB Stack/usb_device.c"
  8549 ;; Parameters:    Size  Location     Type
  8550 ;;		None
  8551 ;; Auto vars:     Size  Location     Type
  8552 ;;  p               2    0[COMRAM] PTR struct __BDT
  8553 ;;		 -> RAM(2047), 
  8554 ;; Return value:  Size  Location     Type
  8555 ;;                  1    wreg      void 
  8556 ;; Registers used:
  8557 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8558 ;; Tracked objects:
  8559 ;;		On entry : 0/0
  8560 ;;		On exit  : 0/0
  8561 ;;		Unchanged: 0/0
  8562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  8563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  8564 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0
  8565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  8566 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0
  8567 ;;Total ram usage:        2 bytes
  8568 ;; Hardware stack levels used: 1
  8569 ;; This function calls:
  8570 ;;		Nothing
  8571 ;; This function is called by:
  8572 ;;		_USBCtrlTrfOutHandler
  8573 ;;		_USBCtrlTrfInHandler
  8574 ;; This function uses a non-reentrant model
  8575 ;;
  8576                           
  8577                           	psect	text46
  8578  005E3A                     __ptext46:
  8579                           	callstack 0
  8580  005E3A                     _USBPrepareForNextSetupTrf:
  8581                           	callstack 27
  8582                           
  8583                           ;usb_device.c: 1519: controlTransferState = 0;
  8584                           
  8585                           ;incstack = 0
  8586  005E3A  0E00               	movlw	0
  8587  005E3C  6E58               	movwf	_controlTransferState^0,c
  8588                           
  8589                           ;usb_device.c: 1526: pBDTEntryIn[0]->STAT.Val = 0x00;
  8590  005E3E  C09F  FFD9         	movff	_pBDTEntryIn,fsr2l
  8591  005E42  C0A0  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8592  005E46  0E00               	movlw	0
  8593  005E48  6EDF               	movwf	indf2,c
  8594                           
  8595                           ;usb_device.c: 1527: {;usb_device.c: 1528: BDT_ENTRY* p;;usb_device.c: 1530: p = (BDT_EN
      +                          TRY*)(((unsigned int)pBDTEntryIn[0])^0x0004);
  8596  005E4A  0E04               	movlw	4
  8597  005E4C  0100               	movlb	0	; () banked
  8598  005E4E  199F               	xorwf	_pBDTEntryIn& (0+255),w,b
  8599  005E50  6E01               	movwf	USBPrepareForNextSetupTrf@p^0,c
  8600  005E52  51A0               	movf	(_pBDTEntryIn+1)& (0+255),w,b
  8601  005E54  6E02               	movwf	(USBPrepareForNextSetupTrf@p+1)^0,c
  8602                           
  8603                           ; BSR set to: 0
  8604                           ;usb_device.c: 1531: p->STAT.Val = 0x00;
  8605  005E56  C001  FFD9         	movff	USBPrepareForNextSetupTrf@p,fsr2l
  8606  005E5A  C002  FFDA         	movff	USBPrepareForNextSetupTrf@p+1,fsr2h
  8607  005E5E  0E00               	movlw	0
  8608  005E60  6EDF               	movwf	indf2,c
  8609                           
  8610                           ; BSR set to: 0
  8611                           ;usb_device.c: 1532: };usb_device.c: 1537: if(outPipes[0].info.bits.busy == 1)
  8612  005E62  AF9A               	btfss	(_outPipes+3)& (0+255),7,b
  8613  005E64  0012               	return	
  8614                           
  8615                           ; BSR set to: 0
  8616                           ;usb_device.c: 1542: };usb_device.c: 1543: outPipes[0].info.bits.busy = 0;
  8617  005E66  9F9A               	bcf	(_outPipes+3)& (0+255),7,b
  8618                           
  8619                           ; BSR set to: 0
  8620  005E68  0012               	return		;funcret
  8621  005E6A                     __end_of_USBPrepareForNextSetupTrf:
  8622                           	callstack 0
  8623                           
  8624 ;; *************** function _USBCtrlTrfTxService *****************
  8625 ;; Defined at:
  8626 ;;		line 2061 in file "../USB Stack/usb_device.c"
  8627 ;; Parameters:    Size  Location     Type
  8628 ;;		None
  8629 ;; Auto vars:     Size  Location     Type
  8630 ;;  byteToSend      2    0[COMRAM] struct .
  8631 ;; Return value:  Size  Location     Type
  8632 ;;                  1    wreg      void 
  8633 ;; Registers used:
  8634 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8635 ;; Tracked objects:
  8636 ;;		On entry : 0/0
  8637 ;;		On exit  : 0/0
  8638 ;;		Unchanged: 0/0
  8639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4 BANK5hl  BANK5l  BANK6h BANK6lh BANK6ll   BANK7
  8640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0
  8641 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0
  8642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0
  8643 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0
  8644 ;;Total ram usage:        2 bytes
  8645 ;; Hardware stack levels used: 1
  8646 ;; This function calls:
  8647 ;;		Nothing
  8648 ;; This function is called by:
  8649 ;;		_USBCtrlTrfInHandler
  8650 ;;		_USBCtrlEPServiceComplete
  8651 ;; This function uses a non-reentrant model
  8652 ;;
  8653                           
  8654                           	psect	text47
  8655  0071B6                     __ptext47:
  8656                           	callstack 0
  8657  0071B6                     _USBCtrlTrfTxService:
  8658                           	callstack 26
  8659                           
  8660                           ;usb_device.c: 2063: WORD_VAL byteToSend;;usb_device.c: 2068: if(inPipes[0].wCount.Val <
      +                           8)
  8661                           
  8662                           ; BSR set to: 0
  8663                           ;incstack = 0
  8664  0071B6  5053               	movf	(_inPipes+5)^0,w,c
  8665  0071B8  E113               	bnz	l3762
  8666  0071BA  0E08               	movlw	8
  8667  0071BC  5C52               	subwf	(_inPipes+4)^0,w,c
  8668  0071BE  B0D8               	btfsc	status,0,c
  8669  0071C0  D00F               	goto	l3762
  8670                           
  8671                           ;usb_device.c: 2069: {;usb_device.c: 2070: byteToSend.Val = inPipes[0].wCount.Val;
  8672  0071C2  C052  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
  8673  0071C6  C053  F002         	movff	_inPipes+5,USBCtrlTrfTxService@byteToSend+1
  8674                           
  8675                           ;usb_device.c: 2073: if(shortPacketStatus == 0)
  8676  0071CA  5059               	movf	_shortPacketStatus^0,w,c
  8677  0071CC  A4D8               	btfss	status,2,c
  8678  0071CE  D002               	goto	l3758
  8679                           
  8680                           ;usb_device.c: 2074: {;usb_device.c: 2075: shortPacketStatus = 1;
  8681  0071D0  0E01               	movlw	1
  8682  0071D2  D004               	goto	L19
  8683  0071D4                     l3758:
  8684                           
  8685                           ;usb_device.c: 2077: else if(shortPacketStatus == 1)
  8686  0071D4  0459               	decf	_shortPacketStatus^0,w,c
  8687  0071D6  A4D8               	btfss	status,2,c
  8688  0071D8  D007               	goto	l3764
  8689                           
  8690                           ;usb_device.c: 2078: {;usb_device.c: 2079: shortPacketStatus = 2;
  8691  0071DA  0E02               	movlw	2
  8692  0071DC                     L19:
  8693  0071DC  6E59               	movwf	_shortPacketStatus^0,c
  8694  0071DE  D004               	goto	l3764
  8695  0071E0                     l3762:
  8696                           
  8697                           ;usb_device.c: 2083: else;usb_device.c: 2084: {;usb_device.c: 2085: byteToSend.Val = 8;
  8698  0071E0  0E00               	movlw	0
  8699  0071E2  6E02               	movwf	(USBCtrlTrfTxService@byteToSend+1)^0,c
  8700  0071E4  0E08               	movlw	8
  8701  0071E6  6E01               	movwf	USBCtrlTrfTxService@byteToSend^0,c
  8702  0071E8                     l3764:
  8703                           
  8704                           ;usb_device.c: 2086: };usb_device.c: 2092: pBDTEntryIn[0]->STAT.BC9 = 0;
  8705  0071E8  C09F  FFD9         	movff	_pBDTEntryIn,fsr2l
  8706  0071EC  C0A0  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8707  0071F0  0100               	movlb	0	; () banked
  8708  0071F2  92DF               	bcf	indf2,1,c
  8709                           
  8710                           ; BSR set to: 0
  8711                           ;usb_device.c: 2093: pBDTEntryIn[0]->STAT.BC8 = 0;
  8712  0071F4  C09F  FFD9         	movff	_pBDTEntryIn,fsr2l
  8713  0071F8  C0A0  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8714  0071FC  90DF               	bcf	indf2,0,c
  8715                           
  8716                           ; BSR set to: 0
  8717                           ;usb_device.c: 2097: pBDTEntryIn[0]->STAT.Val |= byteToSend.byte.HB;
  8718  0071FE  C09F  FFD9         	movff	_pBDTEntryIn,fsr2l
  8719  007202  C0A0  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8720  007206  5002               	movf	(USBCtrlTrfTxService@byteToSend+1)^0,w,c
  8721  007208  12DF               	iorwf	indf2,f,c
  8722                           
  8723                           ; BSR set to: 0
  8724                           ;usb_device.c: 2098: pBDTEntryIn[0]->CNT = byteToSend.byte.LB;
  8725  00720A  EE20 F001          	lfsr	2,1
  8726  00720E  519F               	movf	_pBDTEntryIn& (0+255),w,b
  8727  007210  26D9               	addwf	fsr2l,f,c
  8728  007212  51A0               	movf	(_pBDTEntryIn+1)& (0+255),w,b
  8729  007214  22DA               	addwfc	fsr2h,f,c
  8730  007216  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
  8731                           
  8732                           ; BSR set to: 0
  8733                           ;usb_device.c: 2108: inPipes[0].wCount.Val = inPipes[0].wCount.Val - byteToSend.Val;
  8734  00721A  5001               	movf	USBCtrlTrfTxService@byteToSend^0,w,c
  8735  00721C  5C52               	subwf	(_inPipes+4)^0,w,c
  8736  00721E  6E52               	movwf	(_inPipes+4)^0,c
  8737  007220  5002               	movf	(USBCtrlTrfTxService@byteToSend+1)^0,w,c
  8738  007222  5853               	subwfb	(_inPipes+5)^0,w,c
  8739  007224  6E53               	movwf	(_inPipes+5)^0,c
  8740                           
  8741                           ; BSR set to: 0
  8742                           ;usb_device.c: 2110: pDst = ( BYTE*)CtrlTrfData;
  8743  007226  0E20               	movlw	32
  8744  007228  6FBF               	movwf	_pDst& (0+255),b
  8745  00722A  0E05               	movlw	5
  8746  00722C  6FC0               	movwf	(_pDst+1)& (0+255),b
  8747                           
  8748                           ; BSR set to: 0
  8749                           ;usb_device.c: 2112: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
  8750  00722E  A051               	btfss	(_inPipes+3)^0,0,c
  8751  007230  D01E               	goto	l3788
  8752  007232  D03F               	goto	l3798
  8753  007234                     l3780:
  8754                           
  8755                           ; BSR set to: 0
  8756                           ;usb_device.c: 2115: {;usb_device.c: 2116: *pDst++ = *inPipes[0].pSrc.bRom++;
  8757  007234  C04E  FFF6         	movff	_inPipes,tblptrl
  8758  007238  C04F  FFF7         	movff	_inPipes+1,tblptrh
  8759  00723C  6AF8               	clrf	tblptru,c
  8760  00723E  C0BF  FFD9         	movff	_pDst,fsr2l
  8761  007242  C0C0  FFDA         	movff	_pDst+1,fsr2h
  8762  007246  0E07               	movlw	(high __ramtop+-1)
  8763  007248  64F7               	cpfsgt	tblptrh,c
  8764  00724A  D003               	bra	u3157
  8765  00724C  0008               	tblrd		*
  8766  00724E  50F5               	movf	tablat,w,c
  8767  007250  D005               	bra	u3150
  8768  007252                     u3157:
  8769  007252  CFF6 FFE1          	movff	tblptrl,fsr1l
  8770  007256  CFF7 FFE2          	movff	tblptrh,fsr1h
  8771  00725A  50E7               	movf	indf1,w,c
  8772  00725C                     u3150:
  8773  00725C  6EDF               	movwf	indf2,c
  8774  00725E  4A4E               	infsnz	_inPipes^0,f,c
  8775  007260  2A4F               	incf	(_inPipes+1)^0,f,c
  8776  007262  0100               	movlb	0	; () banked
  8777  007264  4BBF               	infsnz	_pDst& (0+255),f,b
  8778  007266  2BC0               	incf	(_pDst+1)& (0+255),f,b
  8779                           
  8780                           ; BSR set to: 0
  8781                           ;usb_device.c: 2117: byteToSend.Val--;
  8782  007268  0601               	decf	USBCtrlTrfTxService@byteToSend^0,f,c
  8783  00726A  A0D8               	btfss	status,0,c
  8784  00726C  0602               	decf	(USBCtrlTrfTxService@byteToSend+1)^0,f,c
  8785  00726E                     l3788:
  8786                           
  8787                           ; BSR set to: 0
  8788  00726E  5001               	movf	USBCtrlTrfTxService@byteToSend^0,w,c
  8789  007270  1002               	iorwf	(USBCtrlTrfTxService@byteToSend+1)^0,w,c
  8790  007272  B4D8               	btfsc	status,2,c
  8791  007274  0012               	return	
  8792  007276  D7DE               	goto	l3780
  8793  007278                     l3790:
  8794                           
  8795                           ; BSR set to: 0
  8796                           ;usb_device.c: 2123: {;usb_device.c: 2124: *pDst++ = *inPipes[0].pSrc.bRam++;
  8797  007278  C04E  FFF6         	movff	_inPipes,tblptrl
  8798  00727C  C04F  FFF7         	movff	_inPipes+1,tblptrh
  8799  007280  6AF8               	clrf	tblptru,c
  8800  007282  C0BF  FFD9         	movff	_pDst,fsr2l
  8801  007286  C0C0  FFDA         	movff	_pDst+1,fsr2h
  8802  00728A  0E07               	movlw	(high __ramtop+-1)
  8803  00728C  64F7               	cpfsgt	tblptrh,c
  8804  00728E  D003               	bra	u3177
  8805  007290  0008               	tblrd		*
  8806  007292  50F5               	movf	tablat,w,c
  8807  007294  D005               	bra	u3170
  8808  007296                     u3177:
  8809  007296  CFF6 FFE1          	movff	tblptrl,fsr1l
  8810  00729A  CFF7 FFE2          	movff	tblptrh,fsr1h
  8811  00729E  50E7               	movf	indf1,w,c
  8812  0072A0                     u3170:
  8813  0072A0  6EDF               	movwf	indf2,c
  8814  0072A2  4A4E               	infsnz	_inPipes^0,f,c
  8815  0072A4  2A4F               	incf	(_inPipes+1)^0,f,c
  8816  0072A6  0100               	movlb	0	; () banked
  8817  0072A8  4BBF               	infsnz	_pDst& (0+255),f,b
  8818  0072AA  2BC0               	incf	(_pDst+1)& (0+255),f,b
  8819                           
  8820                           ; BSR set to: 0
  8821                           ;usb_device.c: 2125: byteToSend.Val--;
  8822  0072AC  0601               	decf	USBCtrlTrfTxService@byteToSend^0,f,c
  8823  0072AE  A0D8               	btfss	status,0,c
  8824  0072B0  0602               	decf	(USBCtrlTrfTxService@byteToSend+1)^0,f,c
  8825  0072B2                     l3798:
  8826                           
  8827                           ; BSR set to: 0
  8828  0072B2  5001               	movf	USBCtrlTrfTxService@byteToSend^0,w,c
  8829  0072B4  1002               	iorwf	(USBCtrlTrfTxService@byteToSend+1)^0,w,c
  8830  0072B6  B4D8               	btfsc	status,2,c
  8831  0072B8  0012               	return	
  8832  0072BA  D7DE               	goto	l3790
  8833  0072BC                     __end_of_USBCtrlTrfTxService:
  8834                           	callstack 0
  8835                           
  8836                           	psect	rparam
  8837  0000                     
  8838                           	psect	idloc
  8839                           
  8840                           ;Config register IDLOC0 @ 0x200000
  8841                           ;	unspecified, using default values
  8842  200000                     	org	2097152
  8843  200000  FF                 	db	255
  8844                           
  8845                           ;Config register IDLOC1 @ 0x200001
  8846                           ;	unspecified, using default values
  8847  200001                     	org	2097153
  8848  200001  FF                 	db	255
  8849                           
  8850                           ;Config register IDLOC2 @ 0x200002
  8851                           ;	unspecified, using default values
  8852  200002                     	org	2097154
  8853  200002  FF                 	db	255
  8854                           
  8855                           ;Config register IDLOC3 @ 0x200003
  8856                           ;	unspecified, using default values
  8857  200003                     	org	2097155
  8858  200003  FF                 	db	255
  8859                           
  8860                           ;Config register IDLOC4 @ 0x200004
  8861                           ;	unspecified, using default values
  8862  200004                     	org	2097156
  8863  200004  FF                 	db	255
  8864                           
  8865                           ;Config register IDLOC5 @ 0x200005
  8866                           ;	unspecified, using default values
  8867  200005                     	org	2097157
  8868  200005  FF                 	db	255
  8869                           
  8870                           ;Config register IDLOC6 @ 0x200006
  8871                           ;	unspecified, using default values
  8872  200006                     	org	2097158
  8873  200006  FF                 	db	255
  8874                           
  8875                           ;Config register IDLOC7 @ 0x200007
  8876                           ;	unspecified, using default values
  8877  200007                     	org	2097159
  8878  200007  FF                 	db	255
  8879                           
  8880                           	psect	config
  8881                           
  8882                           ;Config register CONFIG1L @ 0x300000
  8883                           ;	PLL Prescaler Selection bits
  8884                           ;	PLLDIV = 5, Divide by 5 (20 MHz oscillator input)
  8885                           ;	System Clock Postscaler Selection bits
  8886                           ;	CPUDIV = 0x0, unprogrammed default
  8887                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  8888                           ;	USBDIV = 2, USB clock source comes from the 96 MHz PLL divided by 2
  8889  300000                     	org	3145728
  8890  300000  24                 	db	36
  8891                           
  8892                           ;Config register CONFIG1H @ 0x300001
  8893                           ;	Oscillator Selection bits
  8894                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
  8895                           ;	Fail-Safe Clock Monitor Enable bit
  8896                           ;	FCMEN = 0x0, unprogrammed default
  8897                           ;	Internal/External Oscillator Switchover bit
  8898                           ;	IESO = 0x0, unprogrammed default
  8899  300001                     	org	3145729
  8900  300001  0E                 	db	14
  8901                           
  8902                           ;Config register CONFIG2L @ 0x300002
  8903                           ;	Power-up Timer Enable bit
  8904                           ;	PWRT = 0x1, unprogrammed default
  8905                           ;	Brown-out Reset Enable bits
  8906                           ;	BOR = 0x3, unprogrammed default
  8907                           ;	Brown-out Reset Voltage bits
  8908                           ;	BORV = 0x3, unprogrammed default
  8909                           ;	USB Voltage Regulator Enable bit
  8910                           ;	VREGEN = ON, USB voltage regulator enabled
  8911  300002                     	org	3145730
  8912  300002  3F                 	db	63
  8913                           
  8914                           ;Config register CONFIG2H @ 0x300003
  8915                           ;	Watchdog Timer Enable bit
  8916                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8917                           ;	Watchdog Timer Postscale Select bits
  8918                           ;	WDTPS = 0xF, unprogrammed default
  8919  300003                     	org	3145731
  8920  300003  1E                 	db	30
  8921                           
  8922                           ; Padding undefined space
  8923  300004                     	org	3145732
  8924  300004  FF                 	db	255
  8925                           
  8926                           ;Config register CONFIG3H @ 0x300005
  8927                           ;	CCP2 MUX bit
  8928                           ;	CCP2MX = 0x1, unprogrammed default
  8929                           ;	PORTB A/D Enable bit
  8930                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8931                           ;	Low-Power Timer 1 Oscillator Enable bit
  8932                           ;	LPT1OSC = 0x0, unprogrammed default
  8933                           ;	MCLR Pin Enable bit
  8934                           ;	MCLRE = 0x1, unprogrammed default
  8935  300005                     	org	3145733
  8936  300005  81                 	db	129
  8937                           
  8938                           ;Config register CONFIG4L @ 0x300006
  8939                           ;	Stack Full/Underflow Reset Enable bit
  8940                           ;	STVREN = 0x1, unprogrammed default
  8941                           ;	Single-Supply ICSP Enable bit
  8942                           ;	LVP = OFF, Single-Supply ICSP disabled
  8943                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  8944                           ;	ICPRT = 0x0, unprogrammed default
  8945                           ;	Extended Instruction Set Enable bit
  8946                           ;	XINST = 0x0, unprogrammed default
  8947                           ;	Background Debugger Enable bit
  8948                           ;	DEBUG = 0x1, unprogrammed default
  8949  300006                     	org	3145734
  8950  300006  81                 	db	129
  8951                           
  8952                           ; Padding undefined space
  8953  300007                     	org	3145735
  8954  300007  FF                 	db	255
  8955                           
  8956                           ;Config register CONFIG5L @ 0x300008
  8957                           ;	unspecified, using default values
  8958                           ;	Code Protection bit
  8959                           ;	CP0 = 0x1, unprogrammed default
  8960                           ;	Code Protection bit
  8961                           ;	CP1 = 0x1, unprogrammed default
  8962                           ;	Code Protection bit
  8963                           ;	CP2 = 0x1, unprogrammed default
  8964                           ;	Code Protection bit
  8965                           ;	CP3 = 0x1, unprogrammed default
  8966  300008                     	org	3145736
  8967  300008  0F                 	db	15
  8968                           
  8969                           ;Config register CONFIG5H @ 0x300009
  8970                           ;	unspecified, using default values
  8971                           ;	Boot Block Code Protection bit
  8972                           ;	CPB = 0x1, unprogrammed default
  8973                           ;	Data EEPROM Code Protection bit
  8974                           ;	CPD = 0x1, unprogrammed default
  8975  300009                     	org	3145737
  8976  300009  C0                 	db	192
  8977                           
  8978                           ;Config register CONFIG6L @ 0x30000A
  8979                           ;	unspecified, using default values
  8980                           ;	Write Protection bit
  8981                           ;	WRT0 = 0x1, unprogrammed default
  8982                           ;	Write Protection bit
  8983                           ;	WRT1 = 0x1, unprogrammed default
  8984                           ;	Write Protection bit
  8985                           ;	WRT2 = 0x1, unprogrammed default
  8986                           ;	Write Protection bit
  8987                           ;	WRT3 = 0x1, unprogrammed default
  8988  30000A                     	org	3145738
  8989  30000A  0F                 	db	15
  8990                           
  8991                           ;Config register CONFIG6H @ 0x30000B
  8992                           ;	unspecified, using default values
  8993                           ;	Configuration Register Write Protection bit
  8994                           ;	WRTC = 0x1, unprogrammed default
  8995                           ;	Boot Block Write Protection bit
  8996                           ;	WRTB = 0x1, unprogrammed default
  8997                           ;	Data EEPROM Write Protection bit
  8998                           ;	WRTD = 0x1, unprogrammed default
  8999  30000B                     	org	3145739
  9000  30000B  E0                 	db	224
  9001                           
  9002                           ;Config register CONFIG7L @ 0x30000C
  9003                           ;	unspecified, using default values
  9004                           ;	Table Read Protection bit
  9005                           ;	EBTR0 = 0x1, unprogrammed default
  9006                           ;	Table Read Protection bit
  9007                           ;	EBTR1 = 0x1, unprogrammed default
  9008                           ;	Table Read Protection bit
  9009                           ;	EBTR2 = 0x1, unprogrammed default
  9010                           ;	Table Read Protection bit
  9011                           ;	EBTR3 = 0x1, unprogrammed default
  9012  30000C                     	org	3145740
  9013  30000C  0F                 	db	15
  9014                           
  9015                           ;Config register CONFIG7H @ 0x30000D
  9016                           ;	unspecified, using default values
  9017                           ;	Boot Block Table Read Protection bit
  9018                           ;	EBTRB = 0x1, unprogrammed default
  9019  30000D                     	org	3145741
  9020  30000D  40                 	db	64
  9021                           tosu	equ	0xFFF
  9022                           tosh	equ	0xFFE
  9023                           tosl	equ	0xFFD
  9024                           stkptr	equ	0xFFC
  9025                           pclatu	equ	0xFFB
  9026                           pclath	equ	0xFFA
  9027                           pcl	equ	0xFF9
  9028                           tblptru	equ	0xFF8
  9029                           tblptrh	equ	0xFF7
  9030                           tblptrl	equ	0xFF6
  9031                           tablat	equ	0xFF5
  9032                           prodh	equ	0xFF4
  9033                           prodl	equ	0xFF3
  9034                           indf0	equ	0xFEF
  9035                           postinc0	equ	0xFEE
  9036                           postdec0	equ	0xFED
  9037                           preinc0	equ	0xFEC
  9038                           plusw0	equ	0xFEB
  9039                           fsr0h	equ	0xFEA
  9040                           fsr0l	equ	0xFE9
  9041                           wreg	equ	0xFE8
  9042                           indf1	equ	0xFE7
  9043                           postinc1	equ	0xFE6
  9044                           postdec1	equ	0xFE5
  9045                           preinc1	equ	0xFE4
  9046                           plusw1	equ	0xFE3
  9047                           fsr1h	equ	0xFE2
  9048                           fsr1l	equ	0xFE1
  9049                           bsr	equ	0xFE0
  9050                           indf2	equ	0xFDF
  9051                           postinc2	equ	0xFDE
  9052                           postdec2	equ	0xFDD
  9053                           preinc2	equ	0xFDC
  9054                           plusw2	equ	0xFDB
  9055                           fsr2h	equ	0xFDA
  9056                           fsr2l	equ	0xFD9
  9057                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    571
    Data        0
    BSS         317
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     77      95
    BANK0           160      0     104
    BANK1           256      0     195
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           176      0       0
    BANK5hl           8      0       0
    BANK5l           24      0       0
    BANK6h          125      0       0
    BANK6lh          29      0       0
    BANK6ll          38      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ?_USBTransferOnePacket.ADR	PTR unsigned char  size(2) Largest target is 8
		 -> hid_report_in_k1(BIGRAMhhhh[8]), hid_report_out_k1(BIGRAMhhhll[1]), joystick_input_j2(BIGRAMhhhll[7]), joystick_input_j1(ABS[7]), 
		 -> CtrlTrfData(BIGRAMhl[8]), SetupPkt(BIGRAMll[8]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 1
		 -> USTATcopy(COMRAM[1]), NULL(NULL[0]), USBActiveConfiguration(COMRAM[1]), 

    memset@p1	PTR void  size(2) Largest target is 1
		 -> USBAlternateInterface(COMRAM[1]), UEP1(SFR[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 1
		 -> USBAlternateInterface(COMRAM[1]), UEP1(SFR[1]), 

    lastINTransmission_k1	PTR void  size(2) Largest target is 80
		 -> NULL(NULL[0]), BDT(BIGRAMll[64]), 

    lastOUTTransmission_k1	PTR void  size(2) Largest target is 80
		 -> NULL(NULL[0]), BDT(BIGRAMll[64]), 

    lastTransmission_j2	PTR void  size(2) Largest target is 80
		 -> NULL(NULL[0]), BDT(BIGRAMll[64]), 

    lastTransmission_j1	PTR void  size(2) Largest target is 80
		 -> NULL(NULL[0]), BDT(BIGRAMll[64]), 

    sp__USBTransferOnePacket.ADR	PTR unsigned char  size(2) Largest target is 8
		 -> hid_report_in_k1(BIGRAMhhhh[8]), hid_report_out_k1(BIGRAMhhhll[1]), joystick_input_j2(BIGRAMhhhll[7]), joystick_input_j1(ABS[7]), 
		 -> CtrlTrfData(BIGRAMhl[8]), SetupPkt(BIGRAMll[8]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 80
		 -> BDT(BIGRAMll[64]), 

    USBTransferOnePacket@handle.ADR	PTR unsigned char  size(2) Largest target is 8
		 -> hid_report_in_k1(BIGRAMhhhh[8]), hid_report_out_k1(BIGRAMhhhll[1]), joystick_input_j2(BIGRAMhhhll[7]), joystick_input_j1(ABS[7]), 
		 -> CtrlTrfData(BIGRAMhl[8]), SetupPkt(BIGRAMll[8]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 8
		 -> hid_report_in_k1(BIGRAMhhhh[8]), hid_report_out_k1(BIGRAMhhhll[1]), joystick_input_j2(BIGRAMhhhll[7]), joystick_input_j1(ABS[7]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 80
		 -> BDT(BIGRAMll[64]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR[1]), 

    pBDTEntryOut.ADR	PTR unsigned char  size(2) Largest target is 8
		 -> hid_report_in_k1(BIGRAMhhhh[8]), hid_report_out_k1(BIGRAMhhhll[1]), joystick_input_j2(BIGRAMhhhll[7]), joystick_input_j1(ABS[7]), 
		 -> CtrlTrfData(BIGRAMhl[8]), SetupPkt(BIGRAMll[8]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 80
		 -> BDT(BIGRAMll[64]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 80
		 -> BDT(BIGRAMll[64]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned int  size(2) Largest target is 1
		 -> UEP0(SFR[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[4] size(2) Largest target is 80
		 -> BDT(BIGRAMll[64]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 80
		 -> BDT(BIGRAMll[64]), 

    USBPrepareForNextSetupTrf@p	PTR struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    pBDTEntryIn.ADR	PTR unsigned char  size(2) Largest target is 8
		 -> hid_report_in_k1(BIGRAMhhhh[8]), hid_report_out_k1(BIGRAMhhhll[1]), joystick_input_j2(BIGRAMhhhll[7]), joystick_input_j1(ABS[7]), 
		 -> CtrlTrfData(BIGRAMhl[8]), SetupPkt(BIGRAMll[8]), 

    pBDTEntryEP0OutCurrent.ADR	PTR unsigned char  size(2) Largest target is 8
		 -> hid_report_in_k1(BIGRAMhhhh[8]), hid_report_out_k1(BIGRAMhhhll[1]), joystick_input_j2(BIGRAMhhhll[7]), joystick_input_j1(ABS[7]), 
		 -> CtrlTrfData(BIGRAMhl[8]), SetupPkt(BIGRAMll[8]), 

    pBDTEntryEP0OutNext.ADR	PTR unsigned char  size(2) Largest target is 8
		 -> hid_report_in_k1(BIGRAMhhhh[8]), hid_report_out_k1(BIGRAMhhhll[1]), joystick_input_j2(BIGRAMhhhll[7]), joystick_input_j1(ABS[7]), 
		 -> CtrlTrfData(BIGRAMhl[8]), SetupPkt(BIGRAMll[8]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 80
		 -> NULL(NULL[0]), BDT(BIGRAMll[64]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 80
		 -> NULL(NULL[0]), BDT(BIGRAMll[64]), 

    S802$ADR	PTR unsigned char  size(2) Largest target is 8
		 -> hid_report_in_k1(BIGRAMhhhh[8]), hid_report_out_k1(BIGRAMhhhll[1]), joystick_input_j2(BIGRAMhhhll[7]), joystick_input_j1(ABS[7]), 
		 -> CtrlTrfData(BIGRAMhl[8]), SetupPkt(BIGRAMll[8]), 

    BDT.ADR	PTR unsigned char  size(2) Largest target is 8
		 -> hid_report_in_k1(BIGRAMhhhh[8]), hid_report_out_k1(BIGRAMhhhll[1]), joystick_input_j2(BIGRAMhhhll[7]), joystick_input_j1(ABS[7]), 
		 -> CtrlTrfData(BIGRAMhl[8]), SetupPkt(BIGRAMll[8]), 

    pBDTEntryIn	PTR volatile struct __BDT[4] size(2) Largest target is 80
		 -> BDT(BIGRAMll[64]), 

    S863$pFunc	PTR FTN()void  size(2) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0

    S853$wRam	PTR unsigned short  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned short  size(2) Largest target is 0

    S853$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 1
		 -> USBAlternateInterface(COMRAM[1]), UEP1(SFR[1]), 

    USB_SD_Ptr	const PTR const unsigned char [6] size(2) Largest target is 36
		 -> sd005(CODE[26]), sd004(CODE[36]), sd003(CODE[36]), sd002(CODE[34]), 
		 -> sd001(CODE[22]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 105
		 -> configDescriptor1(CODE[105]), 

    S322$wRom	PTR const unsigned short  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned short  size(2) Largest target is 0

    S322$wRam	PTR unsigned short  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned short  size(2) Largest target is 0

    S322$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S322$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _main->_readJoystickState
    _readJoystickState->_readADC
    _readADC->___ftsub
    ___ftsub->___ftadd
    ___ftadd->___ftmul
    ___ftmul->___ftdiv
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _processJoystick_j2->_USBTransferOnePacket
    _processJoystick_j1->_USBTransferOnePacket
    _initialise->_initialiseJoysticks
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlTrfSetupHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPServiceComplete->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCBInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfOutHandler->_USBPrepareForNextSetupTrf
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _USBCtrlTrfInHandler->_USBPrepareForNextSetupTrf

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5hl

    None.

Critical Paths under _main in BANK5l

    None.

Critical Paths under _main in BANK6h

    None.

Critical Paths under _main in BANK6lh

    None.

Critical Paths under _main in BANK6ll

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   56379
                      _USBDeviceInit
                     _USBDeviceTasks
                         _initialise
                 _processJoystick_j1
                 _processJoystick_j2
                  _readJoystickState
 ---------------------------------------------------------------------------------
 (1) _readJoystickState                                    3     3      0   23656
                                             74 COMRAM     3     3      0
                            _readADC
 ---------------------------------------------------------------------------------
 (2) _readADC                                             14    12      2   22488
                                             60 COMRAM    14    12      2
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftsub
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     341
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    5096
                                             54 COMRAM     6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             12     6      6    4699
                                             42 COMRAM    12     6      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    4185
                                             27 COMRAM    15     9      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     314
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    4139
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    3531
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    3351
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _processJoystick_j2                                   3     3      0    1380
                                              7 COMRAM     3     3      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (1) _processJoystick_j1                                   5     5      0    1380
                                              7 COMRAM     3     3      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (1) _initialise                                           0     0      0     134
                _initialiseJoysticks
 ---------------------------------------------------------------------------------
 (2) _initialiseJoysticks                                  2     2      0     134
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       2     2      0   28864
                                             22 COMRAM     2     2      0
                   _USBCtrlEPService
                      _USBDeviceInit
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   0     0      0    4382
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           0     0      0    4382
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        1     1      0     965
                                              8 COMRAM     1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     3     3      0   14707
                                             19 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               0     0      0   14319
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             0     0      0     115
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   0     0      0    9822
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  0     0      0    5279
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6     897
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (2) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    4382
                                             11 COMRAM     8     2      6
                 _USBCBCheckOtherReq
                  _USBCBErrorHandler
                        _USBCBInitEP
              _USBCBStdSetDscHandler
                       _USBCBSuspend
               _USBCBWakeFromSuspend
                  _USBCB_SOF_Handler
 ---------------------------------------------------------------------------------
 (3) _USBCB_SOF_Handler                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBCBWakeFromSuspend                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBCBSuspend                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBCBStdSetDscHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBCBInitEP                                          0     0      0    2224
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (2) _USBTransferOnePacket                                 7     3      4    1356
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (4) _USBEnableEndpoint                                    4     3      1     868
                                              7 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (5) _USBConfigureEndpoint                                 7     6      1     446
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 (3) _USBCBErrorHandler                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBCBCheckOtherReq                                   2     2      0       0
                                              0 COMRAM     2     2      0
              _USBCheckHIDRequest_j1
              _USBCheckHIDRequest_j2
              _USBCheckHIDRequest_k1
 ---------------------------------------------------------------------------------
 (4) _USBCheckHIDRequest_k1                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _USBCheckHIDRequest_j2                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _USBCheckHIDRequest_j1                                0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               3     3      0      24
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              6     6      0     137
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 0     0      0     137
                _USBCtrlTrfRxService
          _USBPrepareForNextSetupTrf
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  2     2      0     114
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  1     1      0     161
                                              2 COMRAM     1     1      0
                _USBCtrlTrfTxService
          _USBPrepareForNextSetupTrf
 ---------------------------------------------------------------------------------
 (4) _USBPrepareForNextSetupTrf                            2     2      0      23
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBCtrlTrfTxService                                  2     2      0     115
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _USBDeviceInit
     _memset
   _USBDeviceTasks
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
         _USBPrepareForNextSetupTrf
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
         _USBPrepareForNextSetupTrf
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCBCheckOtherReq
                 _USBCheckHIDRequest_j1
                 _USBCheckHIDRequest_j2
                 _USBCheckHIDRequest_k1
               _USBCBErrorHandler
               _USBCBInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCBStdSetDscHandler
               _USBCBSuspend
               _USBCBWakeFromSuspend
               _USBCB_SOF_Handler
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCtrlEPServiceComplete
           _USBCtrlTrfTxService
         _USER_USB_CALLBACK_EVENT_HANDLER
     _USBDeviceInit
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
     _USER_USB_CALLBACK_EVENT_HANDLER
   _initialise
     _initialiseJoysticks
   _processJoystick_j1
     _USBTransferOnePacket
   _processJoystick_j2
     _USBTransferOnePacket
   _readJoystickState
     _readADC
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
           ___ftdiv (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftdiv
       ___ftge
       ___ftmul
       ___ftsub
         ___ftadd
       ___fttol

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           3FF      0       0      33        0.0%
BIGRAMhhhh         17D      0       0      27        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      25        0.0%
BANK7              100      0       0      26        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      C3       7       76.2%
BIGRAMlh            B0      0       0      32        0.0%
BITBANK4            B0      0       0      12        0.0%
BANK4               B0      0       0      13        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      68       5       65.0%
BANK6h              7D      0       0      22        0.0%
BITBANK6h           7D      0       0      19        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     4D      5F       1      100.0%
BIGRAMhhhll         26      0       0      29        0.0%
BITBANK6ll          26      0       0      21        0.0%
BANK6ll             26      0       0      24        0.0%
BIGRAMhhhlh         1D      0       0      28        0.0%
BANK6lh             1D      0       0      23        0.0%
BITBANK6lh          1D      0       0      20        0.0%
BIGRAMhl            18      0       0      31        0.0%
BITBANK5l           18      0       0      15        0.0%
BANK5l              18      0       0      17        0.0%
BIGRAMhhl            8      0       0      30        0.0%
BANK5hl              8      0       0      16        0.0%
BITBANK5hl           8      0       0      14        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     18A      18        0.0%
DATA                 0      0     18A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Oct 15 11:47:53 2021

                              _USB_SD_Ptr 7E04                          readADC@ADCnumber 0045  
                           _USBDeviceInit 634E                              ___ftadd@exp1 0036  
                            ___ftadd@exp2 0035      USER_USB_CALLBACK_EVENT_HANDLER@event 000C  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 000E                              ___ftadd@sign 0034  
                                     l320 6734                                       l242 72DA  
                                     l243 72D8               __end_of_USBStdGetDscHandler 6C32  
                                     l254 739C                                       l335 6FF4  
                                     l256 73A4                                       l248 730E  
                                     l361 63E8                                       l329 6774  
                                     l611 7A62                                       l364 645C  
                                     l604 797A                                       l365 63F8  
                                     l366 63FC                                       l374 75FA  
                                     l632 7D1A                                       l625 7C32  
                                     l618 7B4A                                       l539 60BC  
                                     l681 7418                                       l762 61E4  
                                     l684 7558                                       _BDT 000400  
                                     l599 78C4                                       _RB0 007C08  
                                     _RB1 007C09                                       _RC0 007C10  
                                     _RA4 007C04                                       _RB2 007C0A  
                                     _RC1 007C11                                       _RA5 007C05  
                                     _RB3 007C0B                                       _RB4 007C0C  
                                     _RC2 007C12                                       _RB5 007C0D  
                                     _RB6 007C0E                                       _RB7 007C0F  
                                     _SE0 007B6D                                       _UIE 000F69  
                                     _UIR 000F68                                _USBSuspend 5D92  
                                     prod 000FF3                                       wreg 000FE8  
                          _USBDeviceTasks 72BC                            _USBDeviceState 005A  
                  ??_USBCBWakeFromSuspend 0001                     ??_USBCtrlTrfRxService 0001  
                USBEnableEndpoint@options 0008                __end_of_processJoystick_j1 6EE6  
              __end_of_processJoystick_j2 6FCE                              ___ftdiv@cntr 0016  
                            ___ftdiv@sign 001B                                      l1237 7838  
                                    l4000 75BC                                      l1248 6DCC  
                                    l4012 761A                                      l4102 7752  
                                    l4210 62F2                                      l4130 77CC  
                                    l4220 6326                                      l4036 76AE  
                                    l4300 7144                                      l4132 77D6  
                                    l4108 777A                USBConfigureEndpoint@handle 0006  
                                    l4054 6C56                                      l3502 6906  
                                    l4310 716C                                      l4150 7854  
                                    l4142 780A                                      l4134 77E0  
                                    l4224 633A                                      l4208 62EE  
                                    l4064 6C88                                      l4056 6C64  
                                    l3512 692E                                      l4240 6D68  
                                    l4304 7154                                      l4160 7884  
                                    l4144 7814                                      l4226 6348  
                                    l4074 6CD6                                      l4058 6C6A  
                                    l3522 694E                                      l3506 690C  
                                    l4234 6D40                                      l4314 717C  
                                    l4402 68A8                                      l4076 6CE4  
                                    l3508 6920                                      l3700 5F18  
                                    l4500 670E                                      l4420 638A  
                                    l4260 6DA6                                      l3518 6944  
                                    l3534 696E                                      l3702 5F1E  
                                    l3606 5EC8                                      l3614 6486  
                                    l5310 6200                                      l4502 6714  
                                    l4430 63B2                                      l4350 6188  
                                    l4326 5FA2                                      l3528 6964  
                                    l5312 622E                                      l3720 5DFA  
                                    l4168 6038                                      l4512 65C2  
                                    l4280 70EA                                      l4194 6018  
                                    l4186 5FDA                                      l3570 69FC  
                                    l3706 5F24                                      l3730 61CC  
                                    l4450 5DDA                                      l4338 5EEC  
                                    l4346 6166                                      l3812 6BCA  
                                    l3804 6B60                                      l3580 6A20  
                                    l3564 69E2                                      l3556 69CC  
                                    l3548 69B2                                      l3468 6290  
                                    l3628 64EE                                      l3732 61D2  
                                    l3724 61BA                                      l3740 61E8  
                                    l3716 5DEA                                      l4428 63B0  
                                    l4356 61B4                                      l4540 73F0  
                                    l3494 68F0                                      l3486 68D6  
                                    l3590 6A40                                      l3574 6A0A  
                                    l3662 6AC0                                      l3654 6AAA  
                                    l3646 6A90                                      l3734 61D8  
                                    l3726 61C0                                      l4470 5E9C  
                                    l4286 7112                                      l4366 6814  
                                    l4542 73F4                                      l4710 79B2  
                                    l3904 70A4                                      l3808 6B72  
                                    l3824 6C1C                                      l3584 6A2A  
                                    l3568 69E8                                      l3672 6AE8  
                                    l3736 61DE                                      l3728 61C6  
                                    l4448 5DD8                                      l4640 736E  
                                    l3920 6534                                      l4384 6868  
                                    l4544 73F8                                      l4720 7A0A  
                                    l3762 71E0                                      l3818 6C16  
                                    l3850 6416                                      l3682 6B08  
                                    l3666 6AC6                                      l4634 7364  
                                    l4626 7340                                      l4618 7334  
                                    l3930 6590                                      l3922 6552  
                                    l4394 6880                                      l4538 73EC  
                                    l4706 7968                                      l3780 7234  
                                    l3764 71E8                                      l3596 6A4A  
                                    l3668 6ADA                                      l3836 6122  
                                    l4492 66E4                                      l4468 5E9A  
                                    l4580 72E2                                      l4396 688C  
                                    l4388 6878                                      l4548 73FE  
                                    l4740 7AE0                                      l4732 7A9A  
                                    l3790 7278                                      l3758 71D4  
                                    l3678 6AFE                                      l3694 6B28  
                                    l4590 72FA                                      l4910 6FAE  
                                    l3926 6568                                      l3918 652A  
                                    l4558 7516                                      l4750 7B38  
                                    l4742 7AF2                                      l4718 79F8  
                                    l3688 6B1E                                      l3952 673C  
                                    l4648 7392                                      l4840 6E7A  
                                    l4824 6E24                                      l3928 6586  
                                    l4808 7D8A                                      l4728 7A50  
                                    l4680 78AE                                      l3858 6446  
                                    l3698 5F12                                      l3954 6742  
                                    l4498 6708                                      l4666 73C0  
                                    l4826 6E2C                                      l4906 6FA2  
                                    l4818 7DBC                                      l4762 7BC8  
                                    l4754 7B82                                      l3788 726E  
                                    l3892 705E                                      l3876 6FEE  
                                    l3964 675A                                      l3956 6748  
                                    l4668 73DC                                      l4860 6EBA  
                                    l4852 6EA0                                      l4844 6E86  
                                    l4836 6E6E                                      l4772 7C20  
                                    l4764 7BDA                                      l3798 72B2  
                                    l3886 702A                                      l3966 6760  
                                    l3958 6750                                      l3982 67A6  
                                    l4598 7306                                      l4870 6F0C  
                                    l4942 60AA                                      l3968 6766  
                                    l4864 6EC6                                      l4848 6E94  
                                    l4872 6F14                                      l4784 7CB0  
                                    l4776 7C6A                                      l4696 7910  
                                    l4688 78CA                                      l3978 6788  
                                    l4890 6F6E                                      l4882 6F56  
                                    l4794 7D08                                      l4786 7CC2  
                                    l4698 7922                                      l4948 60C0  
                                    l4894 6F7C                                      l4886 6F62  
                                    l4798 7D52                                      l4898 6F88  
                                    u3200 6BC8                                      u4011 67F8  
                                    u3220 6C0C                                      u4020 6802  
                                    u3150 725C                                      u4030 6832  
                                    u3207 6BB8                                      u4200 6658  
                                    u3170 72A0                                      u3227 6C02  
                                    u4035 682A                                      u3420 659A  
                                    u3157 7252                                      u4070 6892  
                                    u3600 7744                                      u3177 7296  
                                    u4180 6708                                      u3380 651C  
                                    u3700 77E8                                      u5070 6F02  
                                    u3630 776C                                      u3561 7712  
                                    u4450 73E4                                      u3730 781C  
                                    u4530 7994                                      u3571 7726  
                                    u3660 77AA                                      u4620 7A7C  
                                    u3901 70D2                                      u5078 6F04  
                                    u4710 7B64                                      u4800 7C4C  
                                    u3921 70FA                                      u3851 6D28  
                                    u4548 7996                                      u4638 7A7E  
                                    u3871 6D50                                      u4728 7B66  
                                    u4818 7C4E                                      u4908 7D36  
                   ??_USBCtrlTrfTxService 0001                                      u4960 6E1A  
                                    u5737 78BE                                      u4890 7D34  
                                    _UCFG 000F6F                                      u4968 6E1C  
                                    _UEP0 000F70                                      _RBPU 007F8F  
                                    _UEP1 000F71                                      _UEIE 000F6B  
                                    _UEIR 000F6A                                      _UCON 000F6D  
      __size_of_USBPrepareForNextSetupTrf 0030                                      _pDst 00BF  
                                    _main 6072                              ___ftpack@arg 0001  
                            ___ftpack@exp 0004                                      fsr1h 000FE2  
                                    fsr2h 000FDA                                      indf1 000FE7  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      prodh 000FF4  
                                    prodl 000FF3                                      start 0000  
                      _USBCBCheckOtherReq 5F10                __end_of_USBCheckStdRequest 67E8  
                  ??_USBCtrlTrfOutHandler 0003                              ___ftmul@cntr 0029  
                            ___param_bank 000000                              ___ftmul@sign 002A  
               ??_USBStdFeatureReqHandler 0001                  ??_USBStdGetStatusHandler 0001  
                            ___fttol@exp1 000F                              ___fttol@lval 000B  
                          ?_USBDeviceInit 0001                       ?_USBCBCheckOtherReq 0001  
                                   ?_main 0001                           __end_of___ftadd 78AA  
       __size_of_USBCtrlEPServiceComplete 01A4                           __end_of___ftdiv 6DFE  
                         __end_of___ftmul 71B6                    __end_of_USBDeviceTasks 73E8  
                         __end_of___ftsub 5FCC                           __end_of___fttol 68BA  
               ?_USBCtrlEPServiceComplete 0001                                     _UADDR 000F6E  
                                   _PORTA 000F80                                     _PORTB 000F81  
                                   _PORTC 000F82                                     _PORTD 000F83  
                                   _PORTE 000F84                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
                                   _USTAT 000F6C                                     _sd000 7FFA  
                                   _sd001 7FD2                                     _sd002 7F96  
                                   _sd003 7F72                                     _sd004 7F4E  
                                   _sd005 7FB8                               readADC@calc 0048  
                         __end_of_readADC 755E                             ___awtoft@sign 000C  
            __size_of_initialiseJoysticks 00B0                             ___ftpack@sign 0005  
                    ??_USBCBCheckOtherReq 0001                                     tablat 000FF5  
                   _USBCheckHIDRequest_j1 68BA                     _USBCheckHIDRequest_j2 6996  
                   _USBCheckHIDRequest_k1 6A72                                     status 000FD8  
                        _hid_report_in_j1 000570                          _hid_report_in_j2 0005F0  
                        _hid_report_in_k1 00067B              __size_of_USBStdSetCfgHandler 006C  
                         __initialization 5E0C                              __end_of_main 60D8  
               __size_of_USBCtrlEPService 00BA                                    ??_main 004E  
                           ___fttol@sign1 000A                             __activetblptr 000002  
                         ?_USBDeviceTasks 0001                               ?_USBSuspend 0001  
                                  _ADCON0 000FC2                                    _ADCON1 000FC1  
                                  _ADCON2 000FC0                                    _ADRESH 000FC4  
                                  _ADRESL 000FC3                          __end_of___awtoft 5F10  
                        __end_of___ftpack 65BA                                    _GODONE 007E11  
                                  _PKTDIS 007B6C                                    _RESUME 007B6A  
                                  _TRISA4 007C94                                    _TRISA5 007C95  
                                  _TRISD0 007CA8                                    _TRISD1 007CA9  
                                  _TRISD2 007CAA                                    _TRISD3 007CAB  
                                  _TRISD4 007CAC                                    _TRISD5 007CAD  
                                  _TRISD6 007CAE                                    _TRISD7 007CAF  
                                  _SUSPND 007B69                      __end_of_hid_rpt01_j1 7F0F  
                    __end_of_hid_rpt01_j2 7EC5                      __end_of_hid_rpt01_k1 7F4E  
                       _shortPacketStatus 0059            USBConfigureEndpoint@workaround 0004  
                         USBDeviceTasks@i 0018               USBStdFeatureReqHandler@pUEP 0003  
                USBTransferOnePacket@data 0002                USBCtrlTrfInHandler@lastDTS 0003  
                         ??_USBDeviceInit 0009                                    ___ftge 6144  
                               ??___ftadd 0031                                 ??___ftdiv 0013  
                               ??___ftmul 0022                                 ??___ftsub 003D  
                               ??___fttol 0005                              ?_USBCBInitEP 0001  
                                  _buffer 008F                         _USBEnableEndpoint 5EA0  
         __size_of_USBStdGetStatusHandler 0094                                    _keymap 7DC3  
                                  _memset 5DE0                        _active_protocol_j1 005D  
                      _active_protocol_j2 00C6                        _active_protocol_k1 00C4  
                                  clear_0 5E12                                    clear_1 5E1E  
                                  clear_2 5E2A                                    isa$std 000001  
                      ?_USBEnableEndpoint 0008                     _USBCBStdSetDscHandler 5D84  
                   ___ftmul@f3_as_product 0026                                 ??_readADC 003F  
           __size_of_USBTransferOnePacket 009C                              __mediumconst 7DC2  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                          readADC@adcResult 0046  
                     ??_USBEnableEndpoint 0009                       _lastTransmission_j1 00BD  
                     _lastTransmission_j2 00BB                        _USBInMaxPacketSize 00AF  
                             _CtrlTrfData 000520                    ?_USBCheckHIDRequest_j1 0001  
                  ?_USBCheckHIDRequest_j2 0001                    ?_USBCheckHIDRequest_k1 0001  
                    _controlTransferState 0058                                __accesstop 0060  
                 __end_of__initialization 5E30                                ___ftadd@f1 002B  
                              ___ftadd@f2 002E                         _hid_report_out_j1 000530  
                       _hid_report_out_j2 0005B0                         _hid_report_out_k1 00067A  
                              ___ftge@ff1 0001                                ___ftge@ff2 0004  
                           ___rparam_used 000001                                ___ftdiv@f1 000D  
                              ___ftdiv@f2 0010                                ___ftdiv@f3 0017  
                __size_of_USBStallHandler 0036                                ___awtoft@c 0009  
                     __size_of_USBSuspend 0024                                ___ftmul@f1 001C  
                              ___ftmul@f2 001F                                ___ftsub@f1 0037  
                              ___ftsub@f2 003A                                ___fttol@f1 0001  
                          __pcstackCOMRAM 0001                 __end_of_USBEnableEndpoint 5ED8  
                           __end_of_sd000 7FFE                             __end_of_sd001 7FE8  
                           __end_of_sd002 7FB8                             __end_of_sd003 7F96  
                           __end_of_sd004 7F72                             __end_of_sd005 7FD2  
                       _USBCB_SOF_Handler 5D8A             __size_of_USBConfigureEndpoint 008A  
             __end_of_USBCtrlTrfInHandler 634E                        ?_USBCB_SOF_Handler 0001  
                     ??_USBCB_SOF_Handler 0001                  ??_USBCtrlTrfSetupHandler 0014  
                  _USBStdGetStatusHandler 63DC                                __pbssBANK0 0060  
                              __pbssBANK1 0100               __size_of_USBWakeFromSuspend 002A  
                             _pBDTEntryIn 009F          __end_of_USBCtrlEPServiceComplete 7702  
                      _processJoystick_j1 6DFE                        _processJoystick_j2 6EE6  
               __end_of_USBCB_SOF_Handler 5D8C                          _rawKeyboardState 0182  
                    USBCtrlTrfRxService@i 0001                                   ?___ftge 0001  
                     _initialiseJoysticks 65BA                                   ?_memset 0001  
                  ?_USBCBStdSetDscHandler 0001                       ?_processJoystick_j1 0001  
                     ?_processJoystick_j2 0001                                _device_dsc 7FE8  
                               ?___awtoft 0009                                 ?___ftpack 0001  
                        _USBCtrlEPService 666A               __end_of_USBCtrlTrfRxService 6D18  
                      _USBCheckStdRequest 6724                         _configDescriptor1 7E12  
                 initialiseJoysticks@loop 0001               __end_of_USBCtrlTrfTxService 72BC  
                     _USBStdSetCfgHandler 60D8                      ?_initialiseJoysticks 0001  
                     ?_USBCheckStdRequest 0001              __size_of_USBStdGetDscHandler 00E2  
                                 _UIEbits 000F69             __size_of_USBCBWakeFromSuspend 0002  
                                 _UIRbits 000F68                      ??_processJoystick_j1 0008  
                    ??_processJoystick_j2 0008                                   __Hparam 0000  
                    ?_USBStdSetCfgHandler 0001                                   __Lparam 0000  
              __size_of_USBEnableEndpoint 0038                      ??_USBCheckStdRequest 0014  
                         __size_of___ftge 0074             __size_of_USBCtrlTrfOutHandler 0052  
                                 ___ftadd 7702                                   ___ftdiv 6D18  
                        ??_USBDeviceTasks 0017                                   ___ftmul 70C2  
                                 ___ftsub 5F8C                                   ___fttol 67E8  
                       ??_USBStallHandler 0001                                   __pcinit 5E0C  
                              ??___awtoft 000C                                ??___ftpack 0006  
                         __size_of_memset 002C                 __end_of_configDescriptor1 7E7B  
                                 __ramtop 0800                                _initialise 5D8C  
                    __size_of_USBCBInitEP 003E                                   __ptext0 6072  
                                 __ptext1 78AA                                   __ptext2 73E8  
                                 __ptext3 67E8                                   __ptext4 5F8C  
                                 __ptext5 7702                                   __ptext6 70C2  
                                 __ptext7 6144                                   __ptext8 6D18  
                                 __ptext9 5ED8                                   _inPipes 004E  
                                 _readADC 73E8                              ??_USBSuspend 0014  
                       _USBCBErrorHandler 5D82                              _hid_rpt01_j1 7EC5  
                            _hid_rpt01_j2 7E7B                              _hid_rpt01_k1 7F0F  
                   ??_initialiseJoysticks 0001                        ?_USBCBErrorHandler 0001  
                           ?_USBCBSuspend 0001                        __end_of_USB_CD_Ptr 7E12  
         __size_of_USBCtrlTrfSetupHandler 0054                      end_of_initialization 5E30  
             __size_of_USBCBCheckOtherReq 003E                        __end_of_USB_SD_Ptr 7E10  
                     _pBDTEntryEP0OutNext 0054                              _idle_rate_j1 005E  
                            _idle_rate_j2 00C7                              _idle_rate_k1 00C5  
                     ??_USBCBErrorHandler 0001                                   memset@c 0003  
                                 memset@n 0005                                   memset@p 0007  
                           __Lmediumconst 7DC2                  ?_USBStdFeatureReqHandler 0001  
              ?_USBPrepareForNextSetupTrf 0001                     ??_USBStdSetCfgHandler 0014  
              __size_of_USBCB_SOF_Handler 0002                        __end_of_USBSuspend 5DB6  
                                 postdec2 000FDD                     _lastINTransmission_k1 00B9  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                  _USBCtrlEPServiceComplete 755E  
                      USBEnableEndpoint@p 0009                 __end_of_USBCBErrorHandler 5D84  
                               _USBInData 007E                   ??_USBCheckHIDRequest_j1 0001  
                 ??_USBCheckHIDRequest_j2 0001                   ??_USBCheckHIDRequest_k1 0001  
                          ??_USBCBSuspend 0001                        _BothEP0OutUOWNsSet 00C2  
               USBConfigureEndpoint@EPNum 0005       USER_USB_CALLBACK_EVENT_HANDLER@size 0010  
                               _USTATcopy 005B                              _readADC$4190 0042  
                            _readADC$4189 003F              __end_of_USBTransferOnePacket 650C  
                             ___ftdiv@exp 001A         __end_of_USBPrepareForNextSetupTrf 5E6A  
                             ___ftmul@exp 0025                    _USBCtrlTrfSetupHandler 601E  
                   __end_of_USBDeviceInit 63DC                            __end_of___ftge 61B8  
                             ?_initialise 0001                            __end_of_keymap 7E04  
                          __end_of_memset 5E0C                       start_initialization 5E0C  
                 ?_USBStdGetStatusHandler 0001             USBCtrlTrfRxService@byteToRead 0002  
                            _Keyboard_out 00C1              __end_of_USBConfigureEndpoint 62C2  
         __end_of_USBStdFeatureReqHandler 70C2                         _readJoystickState 78AA  
                __end_of_USBCtrlEPService 6724                        ?_readJoystickState 0001  
                 _processJoystick_j1$3039 0009                   _processJoystick_j2$3099 0009  
                          USBDeviceInit@i 0009                    _pBDTEntryEP0OutCurrent 0056  
                 USBTransferOnePacket@dir 0001                                 _OutBuffer 0087  
                 USBTransferOnePacket@len 0004                   ??_USBCBStdSetDscHandler 0001  
                                ??___ftge 0007                       ??_readJoystickState 004B  
                     _USBStdGetDscHandler 6B50                                  ??_memset 0007  
              __size_of_USBCBErrorHandler 0002                USBPrepareForNextSetupTrf@p 0001  
                  _USBActiveConfiguration 005F            __end_of_USBStdGetStatusHandler 6470  
                       __size_of___awtoft 0038                         __size_of___ftpack 00AE  
                             __pbssCOMRAM 004E              __size_of_USBCtrlTrfInHandler 008C  
                    ?_USBStdGetDscHandler 0001                 __end_of_readJoystickState 7DC2  
              __end_of_USBWakeFromSuspend 5DE0                           _USBStallHandler 5E6A  
                     __size_of_initialise 0006                              _pBDTEntryOut 00A7  
                    __end_of_USBCBSuspend 5D88                             __pmediumconst 7DC2  
            __end_of_USBCBWakeFromSuspend 5D8A                                  ?___ftadd 002B  
                                ?___ftdiv 000D                                  ?___ftmul 001C  
                                ?___ftsub 0037                                  ?___fttol 0001  
              USBCBSendResume@delay_count 00B5                                  ?_readADC 003D  
                    _USBTransferOnePacket 6470              __end_of_USBCtrlTrfOutHandler 601E  
                   ??_USBStdGetDscHandler 0001              __size_of_USBCtrlTrfRxService 00E6  
           USBConfigureEndpoint@direction 0001               __size_of_processJoystick_j1 00E8  
             __size_of_processJoystick_j2 00E8              __size_of_USBCtrlTrfTxService 0106  
              ??_USBCtrlEPServiceComplete 0003               ??_USBPrepareForNextSetupTrf 0001  
                                _PIR2bits 000FA1                 USBCtrlEPService@setup_cnt 0016  
                                _UEP0bits 000F70                             ??_USBCBInitEP 000C  
             __size_of_USBCheckStdRequest 00C4                                  _UCONbits 000F6D  
                    _USBConfigureEndpoint 6238          __size_of_USBStdFeatureReqHandler 00F4  
             __end_of_initialiseJoysticks 666A                     ?_USBTransferOnePacket 0001  
                   readJoystickState@port 004D                    _lastOUTTransmission_k1 00B7  
                            _RemoteWakeup 00C3                __end_of_USBCBCheckOtherReq 5F4E  
                 __end_of_USBStallHandler 5EA0            __size_of_USBCheckHIDRequest_j1 00DC  
          __size_of_USBCheckHIDRequest_j2 00DC            __size_of_USBCheckHIDRequest_k1 00DE  
              __size_of_readJoystickState 0518             __end_of_USBCheckHIDRequest_j1 6996  
           __end_of_USBCheckHIDRequest_j2 6A72             __end_of_USBCheckHIDRequest_k1 6B50  
             __end_of_USBStdSetCfgHandler 6144                        __end_of_device_dsc 7FFA  
                 ?_USBCtrlTrfSetupHandler 0001                   USBStdGetStatusHandler@p 0002  
                                __Hrparam 0000                                  __Lrparam 0000  
                  USBTransferOnePacket@ep 0005                                  _SetupPkt 000500  
                   ?_USBConfigureEndpoint 0001                          __size_of___ftadd 01A8  
                        __size_of___ftdiv 00E6                          __size_of___ftmul 00F4  
                        __size_of___ftsub 0040                          __size_of___fttol 00D2  
                            ??_initialise 0003                                  ___awtoft 5ED8  
                                ___ftpack 650C                 _USBPrepareForNextSetupTrf 5E3A  
                     __end_of_USBCBInitEP 5F8C                          __size_of_readADC 0176  
                 __size_of_USBDeviceTasks 012C                                  __ptext10 650C  
                                __ptext11 6EE6                                  __ptext20 666A  
                                __ptext12 6DFE                                  __ptext21 601E  
                                __ptext13 5D8C                                  __ptext30 5D84  
                                __ptext22 755E                                  __ptext14 65BA  
                                __ptext31 5F4E                                  __ptext23 6724  
                                __ptext15 72BC                                  __ptext40 63DC  
                                __ptext32 6470                                  __ptext24 60D8  
                                __ptext16 5DB6                                  __ptext41 6B50  
                                __ptext33 5EA0                                  __ptext25 5DE0  
                                __ptext17 5D92                                  __ptext42 6FCE  
                                __ptext34 6238                                  __ptext26 61B8  
                                __ptext18 5E6A                                  __ptext43 5FCC  
                                __ptext35 5D82                                  __ptext27 5D8A  
                                __ptext19 634E                                  __ptext44 6C32  
                                __ptext36 5F10                                  __ptext28 5D88  
                                __ptext45 62C2                                  __ptext37 6A72  
                                __ptext29 5D86                                  __ptext46 5E3A  
                                __ptext38 6996                                  __ptext47 71B6  
                                __ptext39 68BA                      _USBCBWakeFromSuspend 5D88  
                                _keyboard 0100            __end_of_USBCtrlTrfSetupHandler 6072  
                           __size_of_main 0066                         ?_USBCtrlEPService 0001  
                   __size_of_USBCBSuspend 0002                        __end_of_initialise 5D92  
                      ??_USBCtrlEPService 0014                       _USBCtrlTrfInHandler 62C2  
                                _joystick 0060                                  isa$xinst 000000  
                                _outPipes 0097                      _USBCtrlTrfOutHandler 5FCC  
          __size_of_USBCBStdSetDscHandler 0002             __end_of_USBCBStdSetDscHandler 5D86  
                  ??_USBTransferOnePacket 0005                      ?_USBCtrlTrfInHandler 0001  
           USBCtrlTrfTxService@byteToSend 0001                                  memset@p1 0001  
                            _USBCBSuspend 5D86                          ?_USBStallHandler 0001  
                USBStdFeatureReqHandler@p 0005                     ?_USBCBWakeFromSuspend 0001  
                  __size_of_USBDeviceInit 008E   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 6238  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 0080         ??_USER_USB_CALLBACK_EVENT_HANDLER 0012  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 000C           _USER_USB_CALLBACK_EVENT_HANDLER 61B8  
                  ??_USBConfigureEndpoint 0002                     ?_USBCtrlTrfOutHandler 0001  
                     _USBCtrlTrfRxService 6C32                               _USBCBInitEP 5F4E  
                      _USBWakeFromSuspend 5DB6                   _USBStdFeatureReqHandler 6FCE  
                     _USBCtrlTrfTxService 71B6                       ?_USBWakeFromSuspend 0001  
                   ??_USBCtrlTrfInHandler 0003                     _USBAlternateInterface 005C  
                     USBEnableEndpoint@ep 000B                      ?_USBCtrlTrfRxService 0001  
                    ?_USBCtrlTrfTxService 0001                      ??_USBWakeFromSuspend 0014  
              USBTransferOnePacket@handle 0006                         _joystick_input_j1 000613  
                       _joystick_input_j2 000656                                _USB_CD_Ptr 7E10  
